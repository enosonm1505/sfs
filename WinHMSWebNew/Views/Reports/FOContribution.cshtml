@{
    ViewBag.Title = "Contribution Analysis";
    Layout = "~/Views/Shared/Layout/Fo_ReportLayout.cshtml";

}

@Html.Partial("_RptRoomTpSrch")
@Html.Partial("_RptSegmentTypeSrch")
@*@Html.Partial("_RptContForcastOptions")*@
@*@Html.Partial("_CommonMeaasgeWindow")*@

<script src="~/FO/javascript/FoGuestBillDet.js"></script>
<script src="../../Scripts/xlExport.js"></script>
<div class="content-wrapper">
    <section class=" col-xl-12 col-md-12 col-sm-12 themedes p-0 ">
        <link href="../../Content/Contribute.css" rel="stylesheet" />
        <link href="../../Content/bootstrap-4.4.1-dist/css/bootstrap.min.css" rel="stylesheet" />

        <link href="../../Content/xlExportCss.css" rel="stylesheet" />
        <link href="~/Content/sidemenu-webix.css" rel="stylesheet" />
        <link href="~/FO/CSS/sidemenu-custom.css" rel="stylesheet" />
        <link href="~/FO/CSS/FoGstBillDet.css" rel="stylesheet" />
        <div id="MAIN" class="FullwidthDIV">
            <div id="LoadDIv" style="display: block; position: absolute; left: 0px; top: 0px; width: 100%; height: 100%; margin: 0px; fit-position: 100%; z-index: 189">
                <img src="../../Images/progress.GIF" style="position: absolute; left: 50%; top: 45%; height: 100px; width: 80px;" />
            </div>
        </div>

        @*<%@ Register Src="~/FO/FOMaster.ascx" TagName="MENUFO" TagPrefix="MN" %>
            <div><MN:MENUFO ID="Menu" runat="server"></MN:MENUFO></div>*@

        <div id="divPage">

            <div class="container-fluid">

                <div style="margin-top: 40px !important;" class="row new_hdr">
                    <div class="col-sm-3">

                        <div class="TextWidth" style="margin-left: 10px;margin-top:5px;" id="divPropbox">
                        </div>
                    </div>
                    <div class="col-sm-5 text-center">
                        <strong>
                            <label class="wc_hdr_tlt" id="lblRptCaption"><strong>Contribution Analysis</strong></label>
                        </strong>
                    </div>
                    <div class="col-sm-4">
                        <div class="card-tools text-right mt-2">
                            <div id="divPrint" class="btnXX"></div>
                            <div id="divExcel" class="btnXX"></div>
                        </div>
                    </div>


                </div>

                @*<%--<div style="width:280px;float:left; height:100vh;">sidemenu</div>--%>*@

                <div style="border:solid transparent;" class="row">
                    <div class="col-xl-3 col-lg-3 col-md-4 col-sm-6">
                        <div class="row">
                            <div class="col-12">
                                <div class="col-xl-11 col-md-11 col-sm-11 p-0" style="float: left;">
                                    <div id="divSeg"></div>
                                </div>                                
                            </div>
                        </div>

                        <div class="row" style="display:none">
                            <div class="col-12">
                                <div class="col-xl-4 col-lg-4 col-md-5 col-sm-3" style="padding-right: 2px; float: left; ">
                                    <div id="divlblCat"></div>
                                </div>
                                <div class="col-xl-1  col-md-1 col-sm-1 p-0" style="float: left;">
                                    <div id="divCat"></div>
                                </div>
                                <div class="col-xl-7 col-lg-7 col-md-6 col-sm-7 p-0" style="float: left;">
                                    <div id="divddlCat"> </div>
                                </div>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">

                                <div class="col-xl-5 col-lg-5  col-md-6 col-sm-6 p-0" style="float: left;max-width:80px">
                                    <div id="divAll"></div>
                                </div>
                                <div class="col-xl-7 col-lg-7 col-md-6 col-sm-7 p-0" style="float: left;">
                                    <div id="divAllbtn"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-2 col-md-2 col-sm-4" style="max-width:145px">
                        <div id="divChkComplHU"></div>
                        <div id="divChkDayUse"></div>
                    </div>
                    
                    <div class="col-xl-3 col-lg-3 col-md-5 col-sm-6 ">
                        <div class="row">
                            <div class="col-xl-9 col-lg-9 col-md-8 col-sm-9 pr-0" style="max-width:180px">
                                <div id="divFromMthDate"> </div>
                                <div id="divFromDt"> </div>
                            </div>
                            
                            <div class="col-xl-3 col-lg-3 col-md-4 col-sm-3  p-0">
                                <div id="divAdvSrch" style="float:left"></div>
                                <div id="divOptbtn" style="float:left"></div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-9 col-lg-9 col-md-10 col-sm-9 pr-0" style="max-width:180px">
                                <div id="divToMthDate"></div>
                                <div id="divToDt"> </div>
                            </div>
                            <div class="col-xl-3 col-lg-3 col-md-2 col-sm-3  p-0">
                                <div id="divbtnDisp"></div>
                            </div>

                        </div>
                    </div>

                    <div class="col-xl-4 col-lg-4 col-md-12 col-sm-6 pr-0" style="max-width:280px">

                        <div style="width:35%; float: left">                            
                            <div id="divChkDet" style="height:18px"></div>
                        </div>
                        <div style="width: 35%; float: left" id="dvOccPer">
                            <div id="divChkDayws" style="height:18px"></div>
                            <div id="divChkQuart" style="height:18px"></div>
                            <div id="divChkMonthws" style="height:18px"></div>
                            <div id="divChkLstYr" style="height:18px;display:none"></div>
                            <div id="divChkVar" style="height:18px;display:none"></div>
                        </div>
                        <div style="width: 30%; float: left" id="dvOccPer">
                            <div id="divChkRevPar"></div>
                            <div id="divChkRevPor"></div>
                            <div class="row">
                                <div class="col-12">
                                    <div id="divAnlbtn" style="float:left"></div>
                                </div>                                
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div id="gridRptt" style="width: 100%; "></div>
                        <div id="gridRpttMnth" style="width: 100%; "></div>
                        <div id="gridRpttDet" style="width: 100%; "></div>
                    </div>
                </div>
            </div>
        </div>


        <input type="hidden" id="Log" />
        <input type="hidden" id="W10_IND" />
        <input type="hidden" id="J15_IND" />
        <input type="hidden" id="Q15_IND" />
        <input type="hidden" id="COMPID" />
        <input type="hidden" id="CURRENCY_FORMAT" />
        <input type="hidden" id="CURRENCY_DELIMIT" />
        <input type="hidden" id="CURRENCY_DECIMLIMIT" />
        <input type="hidden" id="DEF_DT_FORMAT" />        
        <input type="hidden" id="CHK_CONSOLID" value="1" />
        <input type="hidden" id="CHK_SEGMENT" value="0" />
        <input type="hidden" id="CHK_SUMMARY" value="0" />
        <input type="hidden" id="S14_IND" />
        <input type="hidden" id="C3_IND" />
        <input type="hidden" id="F1_IND" />
        <input type="hidden" id="G3_IND" />
        <input type="hidden" id="F11_IND" />
        <input type="hidden" id="J14_IND" />
        <input type="hidden" id="J2_IND" />
        <input type="hidden" id="PM_IND" />
        <input type="hidden" id="SALE_IND" />
        <input type="hidden" id="V24_IND" />
        <input type="hidden" id="R24_IND" />
        <input type="hidden" id="L12_IND" />
        <input type="hidden" id="B3_IND" />
        <input type="hidden" id="PLAN_APPL_IND" />
        <input type="hidden" id="TRAVEL_IND" />
        <input type="hidden" id="SegmntId" />
        <input type="hidden" id="RoomTyId" />
        <input type="hidden" id="HdnCurrDt" />
        <input type="hidden" id="HdnCurrMnth" />
        <input type="hidden" id="HdnAccDt" />
        <input type="hidden" id="HdnToAccDt" />
        <input type="hidden" id="HdnAccMnth" />
        <input type="hidden" id="HdnFrmMnth" />
        <input type="hidden" id="HdnToMnth" />
        <input type="hidden" id="HdnYrFrmMnth" />
        <input type="hidden" id="HdnYrToMnth" />

        <input type="hidden" id="CUST_CUR_DT" />
        <input type="hidden" id="YEAR_START_DATE" />
        <input type="hidden" id="BASE_COUNTRY_ID" />

        <input type="hidden" id="CHK_NT" value="1" />
        <input type="hidden" id="CHK_REV" value="1" />
        <input type="hidden" id="CHK_ARR" value="1" />
        <input type="hidden" id="CHK_OTHREV" value="1" />
        <input type="hidden" id="CHK_PAX" value="1" />



        @*Topmenu Style start*@

        <style>
            .btnXX {
                display: inline-block;
                text-align: center;
                vertical-align: middle;
                line-height: 1.5;
            }
        </style>

        @*Topmenu Style ends*@
        <style>
            .Pagefalse {
                pointer-events: none;
                opacity: 0.6;
            }

            .btn-filter .webix_button {
                border: none !important;
                background: none !important;
            }

            .btn-option .webix_icon_btn {
                font-weight: normal !important;
            }

            .multiline {
                line-height: 22px !important;
                position: relative;
            }

            .GrpTot1 {
                color: black;
                font-weight: Bold;
                font-family: Arial !important;
            }

            .GrpTot2 {
                color: black;
                font-weight: Bold;
                font-family: Arial !important;
            }

            .GrpTotBtm {
                background-color: lightgray;
                color: Brown;
                font-weight: Bold;
                font-family: Arial !important;
            }

            .GrpTotGrnd {
                background-color: blue;
                color: white;
                font-weight: Bold;
                font-family: Arial !important;
            }

            .GndTot {
                background-color: blue;
                color: white;
                font-weight: Bold;
                font-family: Arial !important;
            }

            .HideRow {
                display: none !important;
            }

            .WeakEnd {
                background-color: #ffb6c147;
            }

            .PastDay {
                background-color: #f3001673;
            }

            .VarHdr {
                background-color: #059e9e !important;
                color: white !important;
            }

            .LstYrHdr {
                background-color: #d63855 !important;
                color: white !important;
            }
            .GrdContribution .webix_ss_footer td, .GrdContribution .webix_ss_vscroll_footer {
                font-weight: bold;
                font-size: 11px !important;
                font-family: Arial !important;
            }
            .GrdContribution .LeftAlign {
                text-align: left !important;
            }

            .GrdContribution .webix_ss_footer td, .GrdContribution .webix_ss_vscroll_footer {
                border-color: #dadee0 !important;
            }
            .GrdContribution .webix_cell.webix_dtable_colrow {
                background-color: #3b99b5 !important;
                color: white !important;
            }
            .multiline {
                line-height: 16px !important;
                justify-content: center;
                align-items: center;
                content: 'x';
                display: flex;
            }

            .ScrMargin {
                margin-top: 0px !important;
                margin-bottom: 0px !important;
            }

            .OptCss :hover {
                background-color: #9fdbec !important;
                font-weight: bold;
            }

                .OptCss :hover .webix_label_right {
                    font-weight: bold !important;
                }

        </style>

        <script>
            var vGridTotData = [];
            var ContAnalConnStr= @Html.Raw(Json.Encode(ViewBag.CONSTR));
            var ContAnalUserId= @Html.Raw(Json.Encode(ViewBag.USRID));
            var ContAnalapiUrl = "/FOMaster/CALL_ALLAPI";  

            function fnChkSessVal() {
                debugger;
                var bVal = "0";
                $.ajax({
                    async: false,
                    url: "/Reports/fnChkSessionval",
                    type: 'POST',
                    success: function (data) {
                        debugger;
                        if (data == "1") {
                            bVal = "1";
                        }
                    },
                    error: function (request, status, error) {
                        bVal = "0";
                    }
                });
                if (bVal == "1") return true;
                else {
                    debugger;
                    var Host = window.location.host;
                    var LoadingUrl = "http://" + Host + "/Logout.aspx";
                    window.location.href = LoadingUrl;
                }

            };
            $(document).ready(function () {
                if (fnChkSessVal() == false) return;      
                $("#LoadDIv").hide();
                var Print = "<span  class='wc_fnt18 fas fa-1x  fa-print'></span>";
                var excel = "<span  class=' wc_fnt18 far fa-1x fa-file-excel'></span>";
                                
                      

                

                webix.ready(function () {
                    GridDesign();
                    GridDesign1();
                    fnLoadPopWindows();
                    fnLoanContAnlOptWindowLoad();
                    webix.ui({
                        view: "button", id: "Print", value: "Print", width: 70, container: "divPrint", label: Print, tooltip: true,
                        on: {
                            onItemClick: function () {
                                fnGridPrint();
                            }
                        }

                    });

                    webix.ui({
                        view: "button", id: "Excel", value: "Excel", width: 70, container: "divExcel", label: excel, tooltip: true,
                        on: {
                            onItemClick: function () {
                                fnExcelExport();

                            }
                        }
                    });

                    //webix.ui({ container: "divlblSeg", view: "label",  label: "Segment", });
                    webix.ui({ container: "divSeg", view: "richselect", label: "Segment", labelWidth: 60, id: "ddlSeg", on: { onChange: function () { fnddlSegChange(); } } });
                    webix.ui({ container: "divlblCat", view: "label", id: "ChkCatLbl", label: "Category", });
                    webix.ui({ container: "divCat", view: "checkbox", id: "ChkCat", labelWidth: 0, customCheckbox: false, click: function () { fnChkCatClick(); } }),
                    webix.ui({ container: "divddlCat", view: "richselect", id: "ddlCat", on: { onChange: function () { $$("gridRpt").clearAll(); } }, hidden: true, });


                    webix.ui({ container: "divAll", view: "checkbox", id: "ChkAll", labelWidth: 60, label: "All", width: 80, customCheckbox: false, click: function () { fnChkAllClick(); } }),
                    webix.ui({ container: "divAllbtn", view: "button", width: 30, borderless: true, id: "btnAll", label: "<span  class='wc_fnt18 fas fa-1x  fa-search'></span>", click: function () { fnbtnAllClick(); } });

                    webix.ui({
                        container: "divAdvSrch", css: "webix_primary", tooltip: "Advance Filter", view: "button", width: 30, label: "<span  class='wc_fnt18 fas fa-1x  fa-filter'></span>", hidden: true, id: "btnAdvSearch",
                        click: function () {
                            $$("txtCompId").setValue($$("txtCompId1").getValue());
                            $$("txtTrvAgntId").setValue($$("txtTrvAgntId1").getValue());
                            $$("txtComp").setValue($$("txtComp1").getValue());
                            $$("txtTrvAgnt").setValue($$("txtTrvAgnt1").getValue());
                            $$("RptAdvFilter").show();
                        }
                    });


                    webix.ui({
                        container: "divFromDt", view: "datepicker", label: "From", labelWidth: 40, name: "FromDt", id: "FromDt", format: "%d/%m/%Y", stringResult: true,
                        on: {
                            onChange: function () {
                                $$("gridRpt").clearAll();
                                $$("gridRptMnth").clearAll();
                                var frmdate = $$("FromDt").getValue();
                                var todate = $$("ToDt").getValue();
                                if (frmdate != "" && todate != "") SMFromDateChange();
                            }
                        }
                    });
                    webix.ui({
                        container: "divFromMthDate", view: "datepicker", label: "From", labelWidth: 40, name: "FromMthDate", id: "FromMthDate", format: "%M %Y", type: "month", stringResult: true, hidden: true,
                        on: {
                            onChange: function () {
                                $$("gridRpt").clearAll();
                                $$("gridRptMnth").clearAll();

                                if ($$("ChkQuartws").getValue() == 1) {
                                    var YrStDt = $("#YEAR_START_DATE").val();
                                    if (YrStDt != "")
                                        var vSetDate = "";
                                    var YrStMnth = YrStDt.substring(3, 5);
                                    var CurrDt = $$("FromMthDate").getValue();
                                    var CurrYr = CurrDt.substring(4, 8);
                                    var vSetDate = FnRetMonth1(parseInt(YrStMnth)) + " " + CurrYr.toString().trim();
                                    $$("FromMthDate").setValue(vSetDate);
                                    var vEndMnth = parseInt(YrStMnth) + 11;
                                    if (vEndMnth > 12) {
                                        vEndMnth = vEndMnth - 12;
                                        CurrYr = Number(CurrYr) + 1;
                                    }
                                    vSetDate = FnRetMonth1(parseInt(vEndMnth)) + " " + CurrYr.toString().trim();
                                    $$("ToMthDate").setValue(vSetDate);
                                }
                                var frmdate = $$("FromMthDate").getValue();
                                var todate = $$("ToMthDate").getValue();
                                if (frmdate != "" && todate != "") {
                                    if (SMFromMnthChange() == "1") fnHeader();
                                }
                            }
                        }
                    });


                    webix.ui({
                        container: "divToDt", view: "datepicker", label: "To", labelWidth: 40, name: "ToDt", id: "ToDt", format: "%d/%m/%Y", stringResult: true,
                        on: {
                            onChange: function () {
                                $$("gridRpt").clearAll();
                                $$("gridRptMnth").clearAll();
                                var frmdate = $$("FromDt").getValue();
                                var todate = $$("ToDt").getValue();
                                if (frmdate != "" && todate != "") SMToDateChange();
                            }
                        }
                    });
                    webix.ui({
                        container: "divToMthDate", view: "datepicker", label: "To", labelWidth: 40, name: "ToMthDate", type: "month", id: "ToMthDate", format: "%M %Y", stringResult: true, hidden: true,
                        on: {
                            onChange: function () {
                                $$("gridRpt").clearAll();
                                var frmdate = $$("FromMthDate").getValue();
                                var todate = $$("ToMthDate").getValue();
                                if (frmdate != "" && todate != "") {
                                    if(SMToMnthChange() == "1") fnHeader();
                                }
                            }
                        }
                    });

                    webix.ui({ container: "divbtnDisp", view: "button", css: "webix_primary", id: "btnDisplay", icon: "wxi-check", label: "Display", width: 70, click: function () { fnbtnDisplay(); } }),
                    webix.ui({ container: "divChkComplHU", view: "checkbox", id: "ChkComplHU", labelWidth: 5, labelRight: "With Comp/HU", customCheckbox: false, click: function () { fnChkComplHUClick(); } }),
                    webix.ui({ container: "divChkDayUse", view: "checkbox", id: "ChkDayUse", labelWidth: 5, labelRight: "With DayUse", customCheckbox: false, click: function () { fnChkDayUseClick(); } }),
                    
                    webix.ui({ container: "divChkDet", view: "checkbox", id: "ChkDet", labelWidth: 5, labelRight: "Detail", customCheckbox: false, click: function () { fnChkDetClick(); } }),
                    webix.ui({ container: "divChkDayws", view: "checkbox", id: "ChkDayws", labelWidth: 5, labelRight: "Daywise", customCheckbox: false, click: function () { fnChkDaywsClick(); } }),
                    webix.ui({ container: "divChkQuart", view: "checkbox", id: "ChkQuartws", labelWidth: 5, labelRight: "Quarterly", customCheckbox: false, click: function () { fnChkQuartClick(); } }),
                    webix.ui({ container: "divChkMonthws", view: "checkbox", id: "ChkMonthws", labelWidth: 5, labelRight: "Monthwise", customCheckbox: false, click: function () { fnChkMonthwsClick(); } }),
                    webix.ui({ container: "divChkRevPar", view: "checkbox", id: "ChkRevPar", labelWidth: 5, labelRight: "RevPAR", customCheckbox: false, click: function () { fChkRevParClick(); } }),
                    webix.ui({ container: "divChkRevPor", view: "checkbox", id: "ChkRevPor", labelWidth: 5, labelRight: "RevPOR", customCheckbox: false, click: function () { fnChkRevPorClick(); } }),

                    webix.ui({ container: "divChkLstYr", view: "checkbox", id: "ChkLstYr", labelWidth: 5, width: 100, labelRight: "Last Year", customCheckbox: false, click: function () { fnChkLstYearClick(); }, }),
                    webix.ui({ container: "divChkVar", view: "checkbox", id: "ChkVar", labelWidth: 5, width: 100, labelRight: "Variance", customCheckbox: false, click: function () { fnChkVarClick(); }, }),


                    //webix.ui({ container: "divAnlLbl", view: "label", id: "AnlLbl", label: "Analysis",hidden:true, });
                    webix.ui({ container: "divAnlbtn", view: "button", css: "webix_primary", tooltip: "Analysis for", width: 30, id: "btnAnl", label: '<span class="fa fa-list"></span>', hidden: true, popup: "RpContForcastOpt", click: function () { fnbtnAnlClick(); } });
                    webix.ui({
                        container: "divOptbtn", view: "button", css: "webix_primary", tooltip: "Options", width: 30, id: "btnOptions", label: '<span class="fa fa-list"></span>', hidden: true, popup: "OptionsNew",
                        on: {
                            onItemClick: function () {
                                btnOptionClick();
                            }
                        }
                    });



                    webix.ui({
                        container: "divPropbox", view: "richselect", id: "Property",//width: 220,//autowidth:true,
                        options: LoadCompany(),
                        on: {
                            onChange: function (NewVal, OldVal) {
                                if (NewVal != "") {

                                    $$("gridRpt").clearAll();
                                    LoadCompChange(NewVal);
                                    LoadControl(NewVal);
                                    LoadDate();
                                    //LoadCurrDet(NewVal);
                                    
                                    var vCmpId = $$("Property").getValue();
                                    fnLoadContribiute();
                                    fnLoadCat();
                                }
                            }
                        }

                    });
                    //
                    //var cmpid = '@Session["COMPIDD"]'; @*'<%=Session["COMPIDD"]%>';*@
                    var cmpid= @Html.Raw(Json.Encode(ViewBag.COMP));
                    $$("Property").setValue(cmpid);

                    var propchk = @Html.Raw(Json.Encode(ViewBag.MLTPROPHISHIND));
                    if (propchk == "1") $("#divPropbox").show();
                    else if (propchk == "0") $("#divPropbox").hide();
                   
                    $("#gridRptt").show();
                    $("#gridRpttMnth").hide();
                    $("#gridRpttDet").hide();
                    gridResize();

                });
                webix.event(window, "resize", function () {
                    gridResize();
                })

                webix.UIManager.addHotKey("esc", function (view) {
                    if (view) {
                        debugger;
                        var top = view.getTopParentView();
                        if (top) {
                            id = top.config.id;
                            if (id == "ContrDetPop" || id == "RptAdvFilter" || id == "RptTrvAgntSrch" || id =="RptCompSrch") top.hide();
                        }
                    }
                });
            });

            function fnCurrDtTime() {
                var vDate = "";
                var vTime = "";
                var rowData = [];
                var CompId = $$("Property").getValue();
                Request = {
                    REQTYPE: "GET_FNLOADCURRDTTM",
                    COMPID: CompId,
                }
                var DataVal = JSON.stringify(Request);
                $.ajax({
                    async: false,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + DataVal,
                    success: function (d) {
                        debugger;
                        if (d != "") {
                            rowData = JSON.parse(d);
                            vDate = rowData.GDate;
                            vTime = rowData.GTime;

                        }
                    },
                });

                return [vDate, vTime];

            };   

            function fnExcelExport() {               
                if (fnChkSessVal() == false) return; 
                var vGrid = "";
                var CompId = $$("Property").getValue();
                if ($$("ChkMonthws").getValue() == 1 || $$("ChkQuartws").getValue() == 1 || $$("ChkDayws").getValue() == 1) {
                    vGrid = $$("gridRptMnth");   
                }
                else if ($$("ChkDet").getValue() == 1) {
                    vGrid = $$("gridRptDet"); 
                }
                else {
                    vGrid = $$("gridRpt"); 
                }

                var CompNm = $$("Property").getText();                
                var values = fnCurrDtTime();
                var vDate = values[0];
                var vTm = values[1];                
                var FromDt = $$("FromDt").getText();
                var ToDt = $$("ToDt").getText();               

                var vHeader = $("#lblRptCaption").text();
                var FullData = "";
                FullData = vGrid.serialize();
                var len = FullData.length;
                if (len > 0) {
                    var vExpoartGrid = webix.copy(vGrid,-1);                                
                    fnComExcelExport(vExpoartGrid,vHeader,vHeader,true,CompNm,vDate,vTm,FromDt,ToDt,"");
                    
                }
                else {
                    alert("Records not present in Report");
                }

            };

            //function fnExcelExport() {
            //    if (fnChkSessVal() == false) return; 
            //    var vHeader = $("#lblRptCaption").text();
            //    var FullData = "";
            //    if ($$("ChkMonthws").getValue() == 1 || $$("ChkQuartws").getValue() == 1 || $$("ChkDayws").getValue() == 1) {
            //        FullData = $$("gridRptMnth").serialize();
            //        var len = FullData.length;
            //        if (len > 0) {
            //            webix.toExcel($$("gridRptMnth"), {
            //                filename: vHeader,
            //                styles: true,
            //                name: vHeader,
            //                docHeader: vHeader,
            //                rawValues: true,
            //            });
            //        }
            //        else {
            //            alert("Records not present in Report");
            //        }
            //    }
            //    else if ($$("ChkDet").getValue() == 1) {
            //        FullData = $$("gridRptDet").serialize();
            //        var len = FullData.length;
            //        if (len > 0) {
            //            webix.toExcel($$("gridRptDet"), {
            //                filename: vHeader,
            //                styles: true,
            //                name: vHeader,
            //                docHeader: vHeader,
            //                rawValues: true,
            //                spans:true,
            //            });
            //        }
            //        else {
            //            alert("Records not present in Report");
            //        }

            //    }
            //    else {
            //        FullData = $$("gridRpt").serialize();
            //        var len = FullData.length;
            //        if (len > 0) {
            //            webix.toExcel($$("gridRpt"), {
            //                filename: vHeader,
            //                styles: true,
            //                name: vHeader,
            //                docHeader: vHeader,
            //                rawValues: true,
            //            });
            //        }
            //        else {
            //            alert("Records not present in Report");
            //        }
            //    }
            //};
            function fnGridPrint() {
                if (fnChkSessVal() == false) return; 
                var vHeader = $("#lblRptCaption").text();
                var FullData = "";

                var CompNm = $$("Property").getText();                                       
                    
                var FromDt = $$("FromDt").getText();
                var ToDt = $$("ToDt").getText();

                DocHeader = "<div class='row'><div class='col-4 col-sm-4  text-left' style='font-weight:bold !important'>" + CompNm + "</div>" + "<div class='col-4 col-sm-4  text-center' style='text-align:center !important;font-weight:bold !important'>" + vHeader + "</div></div>" + "<div class='row'>" + "<div class='col-12 col-sm-12 text-center'> From: " + FromDt + "   To: " + ToDt + "</div></div>";

                if ($$("ChkMonthws").getValue() == 1 || $$("ChkQuartws").getValue() == 1 || $$("ChkDayws").getValue() == 1) {
                    FullData = $$("gridRptMnth").serialize();
                    var len = FullData.length;
                    if (len > 0) {
                        webix.print($$("gridRptMnth"), {
                            docHeader: DocHeader,
                            fit: "page",
                            scroll: false,
                            mode: "landscape"
                        });
                    }
                    else {
                        alert("Records not present in Report");

                    }
                }
                else if ($$("ChkDet").getValue() == 1) {
                    FullData = $$("gridRptDet").serialize();
                    var len = FullData.length;
                    if (len > 0) {
                        webix.print($$("gridRptDet"), {
                            docHeader: DocHeader,
                            fit: "page",
                            scroll: false,
                            mode: "landscape"
                        });
                    }
                    else {
                        alert("Records not present in Report");
                    }

                }
                else {
                    FullData = $$("gridRpt").serialize();
                    var len = FullData.length;
                    if (len > 0) {
                        webix.print($$("gridRpt"), {
                            docHeader: DocHeader,
                            fit: "page",
                            scroll: false,
                            mode: "landscape"
                        });
                    }
                    else {
                        alert("Records not present in Report");
                    }
                }

            };



            function gridResize() {
                var vheight = window.innerHeight
                        || document.documentElement.clientHeight
                        || document.body.clientHeight;
                var offset = $("#gridRptt").offset();
                $$("gridRpt").define("height", ((vheight - offset.top - 20)));
                $$("gridRpt").adjust();

                var offset = $("#gridRpttMnth").offset();
                $$("gridRptMnth").define("height", ((vheight - offset.top - 20)));
                $$("gridRptMnth").adjust();

                var offset = $("#gridRpttDet").offset();
                $$("gridRptDet").define("height", ((vheight - offset.top - 20)));
                $$("gridRptDet").adjust();

                var offset = $("#divOptbtn").offset();
                window.vOrgHt = vheight - offset.top - 80;
                if (window.vOrgHt <= 150) window.vOrgHt = 150;
                if ($$("OptionsNew")) {
                    $$("OptionsNew").define("height", window.vOrgHt);
                    $$("OptionsNew").adjust();
                }               

            };
            function LoadDate() {

                $.ajax({
                    type: "POST",
                    url: "/Reports/GetFrmMnthToMnth",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "ADDMONTH=" + "-2",

                    success: function (data) {

                        var data1 = JSON.parse(data);
                        var vCurrDt = data1[0].CURRDT.toString().trim();
                        var vAccDt = data1[0].ACC_DT.toString().trim();
                        var vToAccDt = data1[0].TO_ACC_DT.toString().trim();
                        var vAccDt2 = data1[0].ACC_DT2.toString().trim();
                        var vToAccDt2 = data1[0].TO_ACC_DT2.toString().trim();
                        var vAccMnth = data1[0].ACC_MNTH.toString().trim();
                        var vFromMnth = data1[0].FRMMNTH.toString().trim();
                        var vToMnth = data1[0].TOMNTH.toString().trim();

                        $("#HdnCurrDt").val(vCurrDt);
                        $("#HdnAccDt").val(vAccDt2);
                        $("#HdnToAccDt").val(vToAccDt2);
                        $("#HdnAccMnth").val(vAccMnth);
                        $("#HdnFrmMnth").val(vFromMnth);
                        $("#HdnToMnth").val(vToMnth);

                        var vFromDt = formatDate1(vAccDt2);
                        var vToDt = formatDate1(vToAccDt2);
                        $$("FromDt").setValue(vToDt);
                        $$("ToDt").setValue(vFromDt);

                        $$("FromMthDate").setValue(vFromMnth);
                        $$("ToMthDate").setValue(vToMnth);

                    },
                });
            };
            function formatDate1(StrDt) {

                var Parts = StrDt.split("/");
                var Dt = Parts[0];
                var Mn = Parts[1];
                var Yr = Parts[2].substring(0, 4);
                var Str = Yr + "-" + Mn + "-" + Dt;
                return Str;
            };
            
            function LoadCompany() {
                //
                var rowData = [];
                try {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/Reports/fnLoadProperty",
                        data: "",
                        success: function (d) {

                            if (d != "") {
                                rowData = JSON.parse(d);
                            }
                        },

                    });
                }
                catch (e) {
                    console.log(e.message)
                }
                return rowData;
            };
            function fnLoadRoomType() {
                //
                var rowData = [];
                var W10_IND = $("#W10_IND").val();
                var CHKPM = "0";
                var vCmpId = $$("Property").getValue();

                if ($("#chkPM")[0].checked == true) CHKPM = "1";
                if (W10_IND == "") W10_IND = "0";
                try {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/Reports/fnLoadRoomType",
                        data: "CmpId=" + vCmpId + "&W10_IND=" + W10_IND + "&CHKPM=" + CHKPM,
                        success: function (d) {
                            rowData = JSON.parse(d);

                            $$("ddlRoomTp").define("options", rowData);
                            $$("ddlRoomTp").setValue("<-ALL->");
                        }
                    });
                }
                catch (e) {
                    console.log(e.message)
                }
                //return rowData;
            };
            function fnLoadContribiute() {

                var rowData = [];
                var vCmpId = $$("Property").getValue();
                var hash = {};
                var vCnt = 0;

                rowData = [
                    { "id": 1, "value": "Country" },
                    { "id": 2, "value": "Company" },
                    { "id": 3, "value": "Business Source" },
                    { "id": 4, "value": "Market Segment" },
                    { "id": 5, "value": "City" },
                    //{ "id": 6, "value": "State" },
                    //{ "id": 7, "value": "Region" }
                ];
                vCnt = 5;
                if ($("#B3_IND").val() == 1 || $("#B3_IND").val() == 2) {
                    vCnt = vCnt + 1;
                    hash = { id: vCnt, value: "Channel" };
                    rowData.push(hash);
                    //vCnt = vCnt + 1;
                    //hash = { id: vCnt, value: "Segment" };
                    //rowData.push(hash);
                    vCnt = vCnt + 1;
                    hash = { id: vCnt, value: "Nationality" };
                    rowData.push(hash);
                }
                vCnt = vCnt + 1;
                hash = {};
                hash = { id: vCnt, value: "Guest Type" };
                rowData.push(hash);

                if ($("#TRAVEL_IND").val() == null || $("#TRAVEL_IND").val() == "" || $("#TRAVEL_IND").val() == '0') {
                    vCnt = vCnt + 1;
                    hash = {};
                    hash = { id: vCnt, value: "Travel Agent" };
                    rowData.push(hash);
                }

                vCnt = vCnt + 1;
                hash = {};
                hash = { id: vCnt, value: "Reserve Mode" };
                rowData.push(hash);

                vCnt = vCnt + 1;
                hash = {};
                hash = { id: vCnt, value: "Guest Status" };
                rowData.push(hash);

                if ($("#PLAN_APPL_IND").val() == 1) {
                    vCnt = vCnt + 1;
                    hash = {};
                    hash = { id: vCnt, value: "Plan" };
                    rowData.push(hash);
                }

                vCnt = vCnt + 1;
                hash = {};
                hash = { id: vCnt, value: "Group" }
                rowData.push(hash);

                if ($("#F11_IND").val() == 1) {
                    vCnt = vCnt + 1;
                    hash = {};
                    hash = { id: vCnt, value: "Source" };
                    rowData.push(hash);
                }

                if ($("#J2_IND").val() == 1) {
                    vCnt = vCnt + 1;
                    hash = {};
                    hash = { id: vCnt, value: "Booker" };
                    rowData.push(hash);
                }

                if ($("#SALE_IND").val() == "1" || $("#SALE_IND").val() == "2") {
                    vCnt = vCnt + 1;
                    hash = {};
                    hash = { id: vCnt, value: "Sales Executive" };
                    rowData.push(hash);
                }
                vCnt = vCnt + 1;
                hash = {};
                hash = { id: vCnt, value: "Room Type" };
                rowData.push(hash);

                $$("ddlSeg").define("options", rowData);
                $$("ddlSeg").setValue(2);

                //return rowData;
            };
            function LoadCompChange(vProperty) {
                //
                fnLoadOptionWindow();
                fnClearVar();               
                try {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/Reports/PeopertySessionReAssign",
                        data: "PropertyId=" + vProperty,
                        success: function (d) {
                            return true;
                        }
                    });

                }
                catch (e) {
                    console.log(e.message)
                }
            };
            function fnClearVar() {
                $("#CHK_NT").val("1");
                $("#CHK_REV").val("1");
                $("#CHK_ARR").val("1");
                $("#CHK_OTHREV").val("1");
                $("#CHK_PAX").val("1");
                $$("txtCompId1").setValue('');
                $$("txtTrvAgntId1").setValue('');
                $$("txtComp1").setValue('');
                $$("txtTrvAgnt1").setValue('');
                fnInitOptions();
            };
            function fnInitOptions() {
                $$("chkAdCh").setValue('0');
                $$("chkTarPln").setValue('0');
                $$("chkPlnAmt").setValue('0');
                $$("chkArrDt").setValue('0');
                $$("chkDepDt").setValue('0');
                $$("chkTrvAgnt").setValue('0');
                $$("chkBooker").setValue('0');
                $$("chkMSeg").setValue('0');
                $$("chkSaExe").setValue('0');
                $$("chkRev").setValue('0');
                $$("chkPax").setValue('0');
                $$("chkInBy").setValue('0');
                $$("chkOutBy").setValue('0');
                $$("chkSource").setValue('0');
                $$("chkNation").setValue('0');
                $$("chkChannel").setValue('0');
                $$("chkARP").setValue('0');
                $$("chkSuppZero").setValue('1');
                fnShowHideCol();
            };

            function fnGridPrintPop(vGrid, vHead) {
                debugger;
                if (fnChkSessVal() == false) return; 
                var vHeader = vHead;
                var FullData = "";
                var CompId = $$("Property").getValue();                                
                var DocHeader = "<div class='row'><div class='col-12 col-sm-12  text-center' style='text-align:center !important;font-weight:bold !important'>" + vHeader + "</div></div>";
                FullData = vGrid.serialize();
                var len = FullData.length;
                if (len > 0) {
                    webix.print(vGrid, {
                        docHeader: DocHeader,
                        fit: "page",
                        scroll: false,
                        mode: "landscape"
                    });
                }
                else {
                    alert("Records not present in Report");
                }

            };
            function fnExcelExportPop(vGrid, vHead) {
                debugger;
                if (fnChkSessVal() == false) return; 
                var CompId = $$("Property").getValue();                
                var vHeader = vHead;
                var FullData = "";
                FullData = vGrid.serialize();
                var len = FullData.length;
                if (len > 0) {
                    webix.toExcel(vGrid, {
                        filename: vHeader,
                        styles: true,
                        spans: true,
                        name: vHeader,
                        docHeader: vHeader,
                        rawValues: true,
                    });
                }
                else {
                    alert("Records not present in Report");
                }

            };
            function fnContrDetPopWindowLoad(SelectedId) {
                if (fnChkSessVal() == false) return; 
                var Print = "<span  class='wc_fnt18 fas fa-1x  fa-print'></span>";
                var excel = "<span  class=' wc_fnt18 far fa-1x fa-file-excel'></span>";
                webix.ui({
                    view: "window",
                    move: true,
                    position: "center",
                    head: "Guest Details",
                    id: 'ContrDetPop',
                    modal: true,
                    width: 900,
                    close: true,
                    on:{
                        onShow:function(){

                            var DEF_DT_FORMAT = $("#DEF_DT_FORMAT").val();

                            if (DEF_DT_FORMAT == "2") {
                                $$("ContPoFrmDt").define("format", "%m/%d/%Y");
                                $$("ContPoFrmDt").refresh();

                                $$("ContPoToDt").define("format", "%m/%d/%Y");
                                $$("ContPoToDt").refresh();
                            }
                            else {
                                $$("ContPoFrmDt").define("format", "%d/%m/%Y");
                                $$("ContPoFrmDt").refresh();

                                $$("ContPoToDt").define("format", "%d/%m/%Y");
                                $$("ContPoToDt").refresh();
                            }

                            var frmdt = $$("FromDt").getValue();
                            var todt = $$("ToDt").getValue();
                            $$("ContPoFrmDt").setValue(frmdt);
                            $$("ContPoToDt").setValue(todt);
                            fnContrPopLoad(SelectedId);
                        }
                    },
                    body: {
                        rows: [
                            {
                                width: 900,
                                cols: [
                                     {
                                         padding:{left:10},
                                         cols: [
                                             {view: "datepicker", width: 160, labelWidth: 40, id: "ContPoFrmDt", label: "From",stringResult: true, readonly: true,  format: "%d/%m/%Y", },
                                             { view: "datepicker", minWidth: 160, labelWidth: 40, id: "ContPoToDt", label: "To", stringResult: true, readonly: true, format: "%d/%m/%Y", },
                                             {
                                                 view: "checkbox", minWidth: 140, labelWidth: 120, id: "chkResDet", label: "Reservation Details", customCheckbox: false,
                                                 on: {
                                                     onChange: function (newVal) {
                                                         if (newVal == "1") {
                                                             $$("ContrDetGrid").showColumn("RES_NO");
                                                             $$("ContrDetGrid").showColumn("RES_DT");
                                                             $$("ContrDetGrid").refreshColumns();
                                                         }
                                                         else {
                                                             $$("ContrDetGrid").hideColumn("RES_NO");
                                                             $$("ContrDetGrid").hideColumn("RES_DT");
                                                             $$("ContrDetGrid").refreshColumns();
                                                         }
                                                         fnContrPopLoad(SelectedId);
                                                     },
                                                 },
                                             },
                                             
                                             ]
                                     },
                                     {},
                                     {                                         
                                         css: { "text-align": "right; !important" },
                                         cols: [
                                             {
                                                 view: "button", id: "PopDetPrint", value: "Print", minWidth: 30, maxWidth: 30, label: Print, tooltip: true,
                                                 on: {
                                                     onItemClick: function () {
                                                         fnGridPrintPop($$("ContrDetGrid"), " Details");
                                                     }
                                                 }
                                             },

                                             {
                                                 view: "button", id: "PopDetExcel", value: "Excel", minWidth: 30, maxWidth: 30, label: excel, tooltip: true,
                                                 on: {
                                                     onItemClick: function (newVal) {                                                         

                                                         fnExcelExportPop($$("ContrDetGrid"), " Details");
                                                     }
                                                 }
                                             }

                                         ]
                                     }
                                ]
                            },
                            {
                                id: "ContrDetGrid",
                                select: 'row',
                                view: "datatable",
                                css: "webix_header_border",
                                footer: true,
                                columns: [
                                        { id: "REGNO", header: { text: "Reg No", css:"multiline" }, width: 70, css: { 'text-align': 'center ! important' },},
                                        { id: "ROOMNO", header: { text: "Room No", css:"multiline" }, width: 70, css: { 'text-align': 'center ! important' } },
                                        { id: "GST", header: { text: "Guest Name", css:"multiline" }, fillspace: 2, minWidth: 200,footer: {text: "Total",css: "LeftAlign", height: 24  }, },
                                        { id: "CMP", header: { text: "Company", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'left ! important' }, },                                        
                                        { 
                                            id: "ARR_DT", header: { text: "Arrival Dt",css:"multiline"  }, width: 80, css: { 'text-align': 'center ! important' },
                                            format: function (val) {
                                                //debugger;
                                                var DEF_DT_FORMAT = $("#DEF_DT_FORMAT").val();
                                                if (DEF_DT_FORMAT == "2") {
                                                    if(val) return fnDateConvertCommonFo(val,"103","101");
                                                    else return val;
                                                }
                                                else return val;
                                            }
                                        },
                                        { id: "DEP_DT", header: { text: "Departure Dt", css:"multiline" }, width: 80, css: { 'text-align': 'center ! important' }, 
                                            format: function(val){  
                                                var DEF_DT_FORMAT = $("#DEF_DT_FORMAT").val();
                                                if (DEF_DT_FORMAT == "2") {
                                                    if(val) return fnDateConvertCommonFo(val,"103","101");
                                                    else return val;
                                                }
                                                else return val;
                                            }
                                        },
                                        {
                                            id: "NIGHT", header: { text: "Nights", }, width: 60, css: { 'text-align': 'right ! important' },
                                            exportType: "number",
                                            exportFormat:"###0",
                                            footer: { content: "totalColumn2" },
                                        },                                       

                                        {
                                            id: "REV", header: { text: "Room Revenue",css:"multiline" }, fillspace: 1.1, minWidth: 105, css: { 'text-align': 'right ! important' },
                                            format: function (value) {
                                                return fnCurrFormat(value);
                                            },
                                            exportType: "number",
                                            exportFormat: "#,##0.00",
                                            footer: { content: "totalColumn" },
                                        },
                                        {
                                            id: "BILL_AMT", header: { text: "Bill Amount",css:"multiline"  }, fillspace: 1.1, minWidth: 105, css: { 'text-align': 'right ! important' },
                                            format: function (value) {
                                                return fnCurrFormat(value);
                                            },
                                            exportType: "number",
                                            exportFormat: "#,##0.00",
                                            footer: { content: "totalColumn" },
                                        },
                                        { id: "RES_NO", header: { text: "Reserve No.", css:"multiline" }, width: 100, css: { 'text-align': 'center ! important' }, hidden: true,},
                                        {
                                            id: "RES_DT", header: { text: "Reserve Dt", css:"multiline" }, width: 80, css: { 'text-align': 'center ! important' }, hidden: true,
                                            format: function(val){  
                                                var DEF_DT_FORMAT = $("#DEF_DT_FORMAT").val();
                                                if (DEF_DT_FORMAT == "2") {
                                                    if(val) return fnDateConvertCommonFo(val,"103","101");
                                                    else return val;
                                                }
                                                else return val;
                                            }
                                        },
                                        { id: "CLR",  hidden: true, },
                                        
                                ],
                                scroll: true,
                                height: 450,
                                data: [],
                                on: {
                                    'onItemDblClick': function (id) {
                                        var SelItem = this.getItem(id.row);
                                        var RegNo = SelItem.REGNO;
                                        var CompId = $$("Property").getValue();                                        
                                        if (RegNo != "") FoGuestBillNoPopupLoadCom(CompId, ContAnalUserId, ContAnalConnStr, "CONTRANAL", ContAnalapiUrl, false, RegNo);

                                    },

                                },
                                scheme: {
                                    $init: function (item) {

                                    },
                                },

                            },

                        ]
                    }
                }).show();
            };
            function fnContrPopLoad(SelectedId) {
                debugger;
                $$("ContrDetGrid").clearAll();
                var ChkCatagory = false;
                var frmdt = $$("ContPoFrmDt").getValue();
                var todt = $$("ContPoToDt").getValue();
                
                var myformat = webix.Date.dateToStr("%d/%m/%Y");
                frmdt = myformat(frmdt);
                todt = myformat(todt);
                
                var J15_IND = $("#J15_IND").val();

                
                var Segment = $$("ddlSeg").getText();;
                var CountryId = "";
                //if ((Segment === "City") || (Segment === "State") || (Segment === "Region"))
                //    CountryId = '<%=Session["CountryId"]%>';

                var PM_IND = $("#PM_IND").val();
                var CompanyPopId = SelectedId;
                var chkResvDet = $$("chkResDet").getValue();

                var compHu = $$("ChkComplHU").getValue();
                var DayUse = $$("ChkDayUse").getValue();

                var param = JSON.stringify({ ChkCatagory: ChkCatagory, frmdt: frmdt, todt: todt, Segment: Segment,CountryId: CountryId, CompanyPopId: CompanyPopId, PM_IND: PM_IND, chkResvDet: chkResvDet, compHu: compHu, DayUse: DayUse });
                $("#LoadDIv").show();
                $.ajax({
                    type: "POST",
                    contentType: "application/json",
                    accepts: "application/json",
                    dataType: "json",
                    url: "/Reports/fnFoContrDetPop",
                    cache: false,
                    async: true,
                    charset: 'utf-8',
                    data: param,
                    success: function (data) {
                        debugger;
                        if (data != "") {
                            var rowData = JSON.parse(data);
                            $$("ContrDetGrid").parse(rowData);
                        }                        
                    },
                    complete: function () {
                        $("#LoadDIv").hide();
                    },
                    error: function (e) {
                        $("#LoadDIv").hide();
                    }
                });
            };
            function LoadCurrDet(vProperty) {
                //
                var rowDatad = [];
                try {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/Reports/GetCurrFormatDetails",
                        data: "CmpId=" + vProperty,
                        success: function (d) {
                            if (d != "") {
                                rowDatad = JSON.parse(d);
                                $("#CURRENCY_FORMAT").val(rowDatad.CURRENCY_FORMAT);
                                $("#CURRENCY_DELIMIT").val(rowDatad.CURRENCY_DELIMIT);
                                $("#CURRENCY_DECIMLIMIT").val(rowDatad.CURRENCY_DECIMLIMIT);
                            }
                        }
                    });

                }
                catch (e) {
                    console.log(e.message)
                }
            };
            function LoadControl(vProperty) {
                //
                var rowDatad = [];
                try {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/Reports/LoadFoControl",
                        data: "CmpId=" + vProperty,
                        success: function (d) {

                            if (d != "") {
                                rowDatad = JSON.parse(d);
                                var W10_IND = 0; var J15_IND = 0; var C3_IND = 0; var F1_IND = 0; var S14_IND = 0; var G3_IND = 0; var F11_IND = 0; var J14_IND = 0; var J2_IND = 0;
                                var PM_IND = 0; var SALE_IND = 0; var Q15_IND = 0; var CUST_CUR_DT = "";var TRAVEL_IND =0;
                                var V24_IND = 0; var R24_IND = 0; var V18_IND = 0; var TARIFF_EDIT_IND = 0; var RESERVE_PROV_APPL_IND = 0; var K_TAX = 0; var BASE_COUNTRY_ID = "";
                                var CURRENCY_FORMAT = "L"; var CURRENCY_DELIMIT = "."; var CURRENCY_DECIMLIMIT = "2"; var DEF_DT_FORMAT = "1";
                                


                                if (rowDatad.FO_CONT[0].W10_IND != null && rowDatad.FO_CONT[0].W10_IND != "") W10_IND = parseInt(rowDatad.FO_CONT[0].W10_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].J15_IND != null && rowDatad.FO_CONT[0].J15_IND != "") J15_IND = parseInt(rowDatad.FO_CONT[0].J15_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].Q15_IND != null && rowDatad.FO_CONT[0].Q15_IND != "") Q15_IND = parseInt(rowDatad.FO_CONT[0].Q15_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].C3_IND != null && rowDatad.FO_CONT[0].C3_IND != "") C3_IND = parseInt(rowDatad.FO_CONT[0].C3_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].F1_IND != null && rowDatad.FO_CONT[0].F1_IND != "") F1_IND = parseInt(rowDatad.FO_CONT[0].F1_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].S14_IND != null && rowDatad.FO_CONT[0].S14_IND != "") S14_IND = parseInt(rowDatad.FO_CONT[0].S14_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].G3_IND != null && rowDatad.FO_CONT[0].G3_IND != "") G3_IND = parseInt(rowDatad.FO_CONT[0].G3_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].F11_IND != null && rowDatad.FO_CONT[0].F11_IND != "") F11_IND = parseInt(rowDatad.FO_CONT[0].F11_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].J14_IND != null && rowDatad.FO_CONT[0].J14_IND != "") J14_IND = parseInt(rowDatad.FO_CONT[0].J14_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].J2_IND != null && rowDatad.FO_CONT[0].J2_IND != "") J2_IND = parseInt(rowDatad.FO_CONT[0].J2_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].PM_IND != null && rowDatad.FO_CONT[0].PM_IND != "") PM_IND = parseInt(rowDatad.FO_CONT[0].PM_IND.toString().trim());
                                if (rowDatad.FO_CONT[0].SALE_IND != null && rowDatad.FO_CONT[0].SALE_IND != "") SALE_IND = parseInt(rowDatad.FO_CONT[0].SALE_IND.toString().trim());


                                if (rowDatad.FO_CONTROL[0].V24_IND != null && rowDatad.FO_CONTROL[0].V24_IND != "") V24_IND = parseInt(rowDatad.FO_CONTROL[0].V24_IND.toString().trim());
                                if (rowDatad.FO_CONTROL[0].R24_IND != null && rowDatad.FO_CONTROL[0].R24_IND != "") R24_IND = parseInt(rowDatad.FO_CONTROL[0].R24_IND.toString().trim());
                                if (rowDatad.FO_CONTROL[0].L12_IND != null && rowDatad.FO_CONTROL[0].L12_IND != "") L12_IND = parseInt(rowDatad.FO_CONTROL[0].L12_IND.toString().trim());
                                if (rowDatad.FO_CONTROL[0].L7_IND != null && rowDatad.FO_CONTROL[0].L7_IND != "") B3_IND = parseInt(rowDatad.FO_CONTROL[0].L7_IND.toString().trim());
                                if (rowDatad.FO_CONTROL[0].PLAN_APPL_IND != null && rowDatad.FO_CONTROL[0].PLAN_APPL_IND != "") PLAN_APPL_IND = parseInt(rowDatad.FO_CONTROL[0].PLAN_APPL_IND.toString().trim());
                                if (rowDatad.FO_CONTROL[0].A17_IND != null && rowDatad.FO_CONTROL[0].A17_IND != "") TRAVEL_IND = parseInt(rowDatad.FO_CONTROL[0].A17_IND.toString().trim());
                                if (rowDatad.FO_CONTROL[0].CUST_CUR_DT != null && rowDatad.FO_CONTROL[0].CUST_CUR_DT != "") CUST_CUR_DT = rowDatad.FO_CONTROL[0].CUST_CUR_DT.toString().trim();
                                if (rowDatad.FO_CONTROL[0].CUST_YEAR_START_DATE != null && rowDatad.FO_CONTROL[0].CUST_YEAR_START_DATE != "") CUST_YEAR_START_DATE = rowDatad.FO_CONTROL[0].CUST_YEAR_START_DATE.toString().trim();


                                if (rowDatad.MST_COMPANY[0].K_TAX != null && rowDatad.MST_COMPANY[0].K_TAX != "") K_TAX = parseInt(rowDatad.MST_COMPANY[0].K_TAX.toString().trim());
                                if (rowDatad.MST_COMPANY[0].COUNTRY_ID != null && rowDatad.FO_CONTROL[0].COUNTRY_ID != "") BASE_COUNTRY_ID = rowDatad.MST_COMPANY[0].COUNTRY_ID.toString().trim();
                                if (rowDatad.MST_COMPANY[0].CURRENCY_FORMAT != null && rowDatad.FO_CONTROL[0].CURRENCY_FORMAT != "") CURRENCY_FORMAT = rowDatad.MST_COMPANY[0].CURRENCY_FORMAT.toString().trim();
                                if (rowDatad.MST_COMPANY[0].CURRENCY_DELIMIT != null && rowDatad.FO_CONTROL[0].CURRENCY_DELIMIT != "") CURRENCY_DELIMIT = rowDatad.MST_COMPANY[0].CURRENCY_DELIMIT.toString().trim();
                                if (rowDatad.MST_COMPANY[0].VAL_DECIM_LIMIT != null && rowDatad.FO_CONTROL[0].VAL_DECIM_LIMIT != "") CURRENCY_DECIMLIMIT = rowDatad.MST_COMPANY[0].VAL_DECIM_LIMIT.toString().trim();
                                if (rowDatad.MST_COMPANY[0].DEF_DT_FORMAT != null && rowDatad.FO_CONTROL[0].DEF_DT_FORMAT != "") DEF_DT_FORMAT = rowDatad.MST_COMPANY[0].DEF_DT_FORMAT.toString().trim();
                                                              



                                $("#W10_IND").val(W10_IND);
                                $("#J15_IND").val(J15_IND);
                                $("#Q15_IND").val(Q15_IND);
                                $("#C3_IND").val(C3_IND);
                                $("#F1_IND").val(F1_IND);
                                $("#S14_IND").val(S14_IND);
                                $("#G3_IND").val(G3_IND);
                                $("#F11_IND").val(F11_IND);
                                $("#J14_IND").val(J14_IND);
                                $("#J2_IND").val(J2_IND);
                                $("#PM_IND").val(PM_IND);
                                $("#SALE_IND").val(SALE_IND);


                                $("#V24_IND").val(V24_IND);
                                $("#R24_IND").val(R24_IND);
                                $("#L12_IND").val(L12_IND);
                                $("#B3_IND").val(B3_IND);
                                $("#PLAN_APPL_IND").val(PLAN_APPL_IND);
                                $("#TRAVEL_IND").val(TRAVEL_IND);
                                $("#CUST_CUR_DT").val(CUST_CUR_DT);

                                $("#BASE_COUNTRY_ID").val(BASE_COUNTRY_ID);
                                $("#YEAR_START_DATE").val(CUST_YEAR_START_DATE);

                                $("#CURRENCY_FORMAT").val(CURRENCY_FORMAT);
                                $("#CURRENCY_DELIMIT").val(CURRENCY_DELIMIT);
                                $("#CURRENCY_DECIMLIMIT").val(CURRENCY_DECIMLIMIT);
                                $("#DEF_DT_FORMAT").val(DEF_DT_FORMAT);

                                if (DEF_DT_FORMAT == "2") {
                                    $$("FromDt").define("format", "%m/%d/%Y");
                                    $$("FromDt").refresh();

                                    $$("ToDt").define("format", "%m/%d/%Y");
                                    $$("ToDt").refresh();
                                }
                                else {
                                    $$("FromDt").define("format", "%d/%m/%Y");
                                    $$("FromDt").refresh();

                                    $$("ToDt").define("format", "%d/%m/%Y");
                                    $$("ToDt").refresh();
                                }
                                

                                if (B3_IND == 1 || B3_IND == 2) {
                                    $("#divChkMonthws").show();
                                    $("#divChkQuart").show();
                                }
                                else {
                                    $("#divChkMonthws").hide();
                                    $("#divChkQuart").hide();
                                }

                                if (Q15_IND == 1) {
                                    $("#divChkRevPor").show();
                                }
                                else {
                                    $("#divChkRevPor").hide();
                                }



                                if (R24_IND == 0) {
                                    $$("ChkComplHU").setValue(0);
                                    $$("ChkDayUse").setValue(1);
                                }
                                else if (R24_IND == 1) {
                                    $$("ChkComplHU").setValue(1);
                                    $$("ChkDayUse").setValue(0);

                                }
                                else if (R24_IND == 2) {
                                    $$("ChkComplHU").setValue(1);
                                    $$("ChkDayUse").setValue(1);

                                }
                                else if (R24_IND == 3) {
                                    $$("ChkComplHU").setValue(0);
                                    $$("ChkDayUse").setValue(0);
                                }

                            }
                        }
                    });
                }
                catch (e) {
                    console.log(e.message)
                }
            };
            function fnLoadCat() {

                var rowData = [];
                $$("ddlCat").define("options", rowData);
                var vCmpId = $$("Property").getValue();
                try {
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/Reports/fnLoadCat",
                        data: "CmpId=" + vCmpId,
                        success: function (d) {
                            rowData = JSON.parse(d);
                            $$("ddlCat").define("options", rowData);
                            $$("ddlCat").setValue("<-ALL->");
                        }
                    });
                }
                catch (e) {
                    console.log(e.message)
                }
                //return rowData;
            };
            function GridDesign() {
                webix.ui({
                    id: "gridRpt",
                    container: "gridRptt",
                    select: 'row',
                    view: "treetable",
                    fixedRowHeight: false,                    
                    rowLineHeight: 24,
                    rowHeight: 24,
                    autoConfig: true,
                    resizeColumn: true,
                    resizeRow: true,
                    //height: 460,
                    footer:true,
                    //minWidth: 900,
                    spans:true,
                    position: "flex",
                    css: "webix_header_border GrdContribution",
                    data: [],
                    columns: [
                            { id: "DATE", header: { text: "Date",css:"multiline" }, width: 100, hidden: true, css: { 'text-align': 'center ! important' } },
                            { id: "CONTRIBUTION", header: { text: "Segment", css:"multiline"}, sort: sortByContrib, fillspace: 2, minWidth: 200, footer: { text: "Total", css: "LeftAlign", height: 24 }, },
                            { id: "ROOM", header: { text: "Nights",css:"multiline" }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'right ! important' }, sort: sortByRoom,
                                footer: { content: "totalColumn1" }, 
                                exportType: "number",
                                exportFormat: "###0",
                            },
                            {
                                id: "ROOMPER", header: { text: "Occ %",css:"multiline" }, width: 100, css: { 'text-align': 'right ! important' }, sort: sortByRoomPer,
                                exportType: "number",
                                exportFormat: "###0.00",
                            },
                            { id: "PAX", header: { text: "Pax", css:"multiline"}, width: 80, css: { 'text-align': 'right ! important' }, sort: sortByPax, 
                                exportType: "number",
                                exportFormat: "###0",
                                footer: { content: "totalColumn1" },
                            },
                            {
                                id: "REV", header: { text: "Room Revenue", css:"multiline"}, fillspace: 1.1, minWidth: 120, css: { 'text-align': 'right ! important' }, sort: sortByRev, footer: { content: "totalColumn1" },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                            },
                            { 
                                id: "REVPER", header: { text: "Revenue %",css:"multiline" }, fillspace: 1.1, minWidth: 120, css: { 'text-align': 'right ! important' }, sort: sortByRevPer,
                                exportType: "number",
                                exportFormat: "###0.00",
                            },
                            {
                                id: "ARR", header: { text: "ADR", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'right ! important' }, sort: sortByArr, footer: { content: "totalColumn1" },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                            },
                            {
                                id: "ARP", header: { text: "ARP", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'right ! important' }, sort: sortByArp, footer: { content: "totalColumn1" },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                            },
                            { id: "ID", header: { text: "Date", }, width: 100, hidden: true },
                            { id: "TARRIFPLAN", header: { text: "Date", }, width: 100, hidden: true },
                            { id: "PLAN", header: { text: "Date", }, width: 100, hidden: true },
                            {
                                id: "PKG", header: { text: "Pkg.Rev", }, width: 100, hidden: true, css: { 'text-align': 'right ! important' }, sort: sortByPkg,
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                            },
                            {
                                id: "EXTPKG", header: { text: "Ext.Rev", }, width: 100, hidden: true, css: { 'text-align': 'right ! important' }, sort: sortByExtPkg,
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                            },
                            {
                                id: "REVPOR", header: { text: "RevPOR", }, width: 100, hidden: true, css: { 'text-align': 'right ! important' }, sort: sortByRevPor,
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColumn1" },
                            },
                            {
                                id: "REVPAR", header: { text: "RevPAR", }, width: 100, hidden: true, css: { 'text-align': 'right ! important' }, sort: sortByRevPar,
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColumn1" },
                            },
                            { id: "CLR", hidden: true },

                    ],

                    scheme: {
                        $init: function (item) {
                            if (item.CLR != "" && item.CLR != null) {
                                item.$css = item.CLR;
                            }
                        },
                    },

                    on: {
                        onBeforeClose: function () {
                            return false;
                        },
                        onAfterload: function () {
                        },
                        onItemDblClick: function (id) {
                            var getval = this.getItem(id.row);
                            var SelectedId = getval.ID;
                            
                            fnContrDetPopWindowLoad(SelectedId);
                            
                        }
                    },
                });               

                webix.ui({
                    id: "gridRptDet",
                    container: "gridRpttDet",
                    select: 'row',
                    view: "treetable",
                    fixedRowHeight: false,
                    rowLineHeight: 24,
                    rowHeight: 24,
                    autoConfig: true,
                    resizeColumn: true,
                    resizeRow: true,
                    //height: 460,
                    footer: true,
                    //minWidth: 900, 
                    spans:true,
                    position: "flex",
                    css: "webix_header_border GrdContribution",
                    data: [],
                    columns: [
                            {
                                id: "REGNO", header: { text: "Reg No",css:"multiline" }, width: 100, css: { 'text-align': 'center ! important' },                                
                            },
                            { id: "ROOMNO", header: { text: "Room No", css:"multiline"}, width: 100, css: { 'text-align': 'center ! important' } },
                            { id: "GST", header: { text: "Guest Name",css:"multiline" },  fillspace: 2, minWidth: 200, footer: { text: "Grand Total",height:24,css:"LeftAlign" }, },
                            { id: "CMP", header: { text: "Company", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'left ! important' }, },
                            { id: "BOOK", header: { text: "Booker", }, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { 
                                id: "ARRDT", header: { text: "Arrival Dt", css:"multiline" }, width: 80, css: { 'text-align': 'center ! important' }, hidden: true,
                                format: function(val){  
                                    var DEF_DT_FORMAT = $("#DEF_DT_FORMAT").val();
                                    if (DEF_DT_FORMAT == "2") {
                                        if(val) return fnDateConvertCommonFo(val,"103","101");
                                        else return val;
                                    }
                                    else return val;
                                }
                            },
                            { 
                                id: "DEPDT", header: { text: "Departure Dt",css:"multiline" }, width: 80, css: { 'text-align': 'center ! important' }, hidden: true,
                                format: function(val){  
                                    var DEF_DT_FORMAT = $("#DEF_DT_FORMAT").val();
                                    if (DEF_DT_FORMAT == "2") {
                                        if(val) return fnDateConvertCommonFo(val,"103","101");
                                        else return val;
                                    }
                                    else return val;
                                }
                            },
                            {
                                id: "RNIGHT", header: { text: "Nights", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'right ! important' },
                                exportType: "number",                                   
                                exportFormat: "###0",
                                footer: { content: "totalColumn2" },
                            },
                            {
                                id: "DPAX", header: { text: "Pax", }, width: 80, css: { 'text-align': 'center ! important' }, hidden: true,
                                exportType: "number",
                                exportFormat: "###0",                             
                                footer: { content: "totalColumn2" },
                            },
                            
                            {
                                id: "REV", header: { text: "Room Revenue", css:"multiline"}, fillspace: 1.1, minWidth: 120, css: { 'text-align': 'right ! important' },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColumn" },
                            },                            
                            {
                                id: "DARR", header: { text: "ADR", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'right ! important' },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColAdr" },
                            },
                            {
                                id: "DARP", header: { text: "ARP", }, fillspace: 1.1, minWidth: 100, css: { 'text-align': 'right ! important' }, hidden: true,
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColArp" },
                            },
                            { id: "ID", header: { text: "Date", }, width: 100, hidden: true },
                            {
                                id: "DTARPLAN", header: { text: "Tarriff + Plan", }, width: 100, hidden: true,css: { 'text-align': 'right ! important' },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColumn" },
                            },
                            {
                                id: "DPLAN", header: { text: "Plan Amount", }, width: 100, hidden: true,css: { 'text-align': 'right ! important' },
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColumn" },
                            },
                            {
                                id: "DADULT", header: { text: "Adult", }, width: 80, css: { 'text-align': 'center ! important' }, hidden: true,                                
                                exportType: "number",    
                                exportFormat: "###0",
                                footer: { content: "totalColumn2" },
                            },
                            {
                                id: "DCHILD", header: { text: "Child", }, width: 80, css: { 'text-align': 'center ! important' }, hidden: true,
                                exportType: "number",
                                exportFormat: "###0",
                                footer: { content: "totalColumn2" },
                            },
                            {
                                id: "DEXTREV", header: { text: "Ext.Rev", }, width: 100, hidden: true, css: { 'text-align': 'right ! important' }, hidden: true,
                                format: function (value) {
                                    return fnCurrFormat(value);
                                },
                                exportType: "number",
                                exportFormat: "#,##0.00",
                                footer: { content: "totalColumn" },
                            },
                            { id: "SALESEXE", header: { text: "Sales Executive", css:"multiline" }, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "SOURCE", header: { text: "Source", css:"multiline"}, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "TRVAGENT", header: { text: "Travel Agent", css:"multiline"}, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "NATION", header: { text: "Nationality", css:"multiline"}, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "CHANNEL", header: { text: "Channel", }, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "MSEG", header: { text: "Market Segment", css:"multiline"}, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "RATETY", header: { text: "Rate Type",css:"multiline" }, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "CHKIN", header: { text: "CheckIn By",css:"multiline" }, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "CHKOUT", header: { text: "CheckOut By",css:"multiline" }, width: 100, css: { 'text-align': 'left ! important' }, hidden: true, },
                            { id: "HIDID", hidden: true },
                            { id: "HIDCOMP", hidden: true },
                            { id: "PLNNM", hidden: true },
                            { id: "GROUP", hidden: true },
                            { id: "CLR", hidden: true },

                    ],

                    scheme: {
                        $init: function (item) {
                            if (item.CLR != "" && item.CLR != null) {
                                item.$css = item.CLR;
                            }
                        },
                    },

                    on: {
                        onBeforeClose: function () {
                            return false;
                        },
                        onAfterload: function () {
                        }
                    },
                });


                
            };
            function GridDesign1() {
                webix.ui({
                    id: "gridRptMnth",
                    container: "gridRpttMnth",
                    select: 'row',
                    view: "treetable",
                    fixedRowHeight: false,
                    rowLineHeight: 23,
                    rowHeight: 24,
                    autoConfig: true,
                    resizeColumn: true,
                    resizeRow: true,
                    footer: true,
                    spans:true,
                    //height: 460,
                    //minWidth:900,
                    position: "flex",                    
                    //hidden:true,
                    css: "webix_header_border GrdContribution",
                    data: [],
                    columns: [
                            { id: "ID", header: { text: "Date", }, width: 100, hidden: true },
                            { id: "CONTRIBUTION", header: { text: "Company", }, minWidth: 200,fillspace:2, footer: { text: "Grand Total", css: "LeftAlign", height: 22 } },
                            { id: "TYPE", header: { text: "", }, minWidth: 110, fillspace: 1.2, },
                            { id: "TYPEID", hidden: true },
                            { id: "CLR", hidden: true },

                    ],

                    scheme: {
                        $init: function (item) {
                           
                            if (item.CLR != "" && item.CLR != null) {
                                item.$css = item.CLR;
                            }
                        },
                       
                    },

                    on: {

                        onBeforeClose: function () {
                            return false;
                        },
                        onAfterload: function () {
                        }

                    },
                });

            };

            
            webix.ui.datafilter.totalColumn2 = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var result = 0;
                    master.data.each(function (obj) {
                        //debugger;                        
                        if (obj.CLR != "GrpTot1") {
                            if (!isNaN(obj[value.columnId]) && obj[value.columnId] != null && obj[value.columnId] != "") result = parseFloat(result) + parseFloat(obj[value.columnId]);
                        }
                    });
                    //debugger;
                    node.firstChild.innerHTML = result;
                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalColumn = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var result = 0;
                    master.data.each(function (obj) {
                        //debugger;                        
                        if (obj.CLR != "GrpTot1") {
                            if (!isNaN(obj[value.columnId]) && obj[value.columnId] != null && obj[value.columnId] != "") result = parseFloat(result) + parseFloat(obj[value.columnId]);
                        }
                    });
                    //debugger;
                    node.firstChild.innerHTML = fnCurrFormat(result);
                }
            }, webix.ui.datafilter.summColumn);
            
            webix.ui.datafilter.totalColumn1 = webix.extend({
                refresh: function (master, node, value) {
                   // debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotGrnd';
                        });
                        if (newData.length > 0) {
                            result = newData[0][vColumnId];
                        }
                    }

                    if (vColumnId == "ARR" || vColumnId == "ARP" || vColumnId == "REV" || vColumnId == "REVPAR" || vColumnId == "REVPOR") node.firstChild.innerHTML = fnCurrFormat(result);
                    else node.firstChild.innerHTML = result;

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalColAdr = webix.extend({
                refresh: function (master, node, value) {
                    // debugger;
                    var vColumnId = value.columnId;
                    var result = 0;
                    var TotRev = 0;
                    var TotRooms = 0;
                                        
                    master.data.each(function (obj) {
                        //debugger;                        
                        if (obj.CLR != "GrpTot1") {
                            if (!isNaN(obj["RNIGHT"]) && obj["RNIGHT"] != null && obj["RNIGHT"] != "") TotRooms = parseFloat(TotRooms) + parseFloat(obj["RNIGHT"]);
                        }
                        if (obj.CLR != "GrpTot1") {
                            if (!isNaN(obj["REV"]) && obj["REV"] != null && obj["REV"] != "") TotRev = parseFloat(TotRev) + parseFloat(obj["REV"]);
                        }
                    });
                    if(TotRooms !=0 && TotRev != 0){
                        result  = parseFloat(TotRev)/parseFloat(TotRooms);
                    }                    
                     node.firstChild.innerHTML = fnCurrFormat(result);
                    

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalColArp = webix.extend({
                refresh: function (master, node, value) {
                    // debugger;
                    var vColumnId = value.columnId;
                    var result = 0;
                    var TotRev = 0;
                    var TotRooms = 0;
                                        
                    master.data.each(function (obj) {
                        //debugger;                        
                        if (obj.CLR != "GrpTot1") {
                            if (!isNaN(obj["DPAX"]) && obj["DPAX"] != null && obj["DPAX"] != "") TotRooms = parseFloat(TotRooms) + parseFloat(obj["DPAX"]);
                        }
                        if (obj.CLR != "GrpTot1") {
                            if (!isNaN(obj["REV"]) && obj["REV"] != null && obj["REV"] != "") TotRev = parseFloat(TotRev) + parseFloat(obj["REV"]);
                        }
                    });
                    if(TotRooms !=0 && TotRev != 0){
                        result  = parseFloat(TotRev)/parseFloat(TotRooms);
                    }                    
                    node.firstChild.innerHTML = fnCurrFormat(result);
                    

                }
            }, webix.ui.datafilter.summColumn);

            


            webix.ui.datafilter.totalRoom = webix.extend({
                refresh: function (master, node, value) {
                   // debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'RN';
                        });
                        if (newData.length > 0) {
                            result = newData[0][vColumnId];
                        }
                    }

                    node.firstChild.innerHTML = result;                    

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalRev = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'REV';
                        });
                        if (newData.length > 0) {
                            result = newData[0][vColumnId];
                        }
                    }

                    node.firstChild.innerHTML = fnCurrFormat(result);

                }
            }, webix.ui.datafilter.summColumn);                   

            webix.ui.datafilter.totalAdr = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'ADR';
                        });
                        if (newData.length > 0) {
                            result = newData[0][vColumnId];
                        }
                    }

                    node.firstChild.innerHTML = fnCurrFormat(result);

                }
            }, webix.ui.datafilter.summColumn);           

            webix.ui.datafilter.totalOthRev = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'OTH';
                        });
                        if (newData.length > 0) {
                            result = newData[0][vColumnId];
                        }
                    }

                    node.firstChild.innerHTML = fnCurrFormat(result);

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalPax = webix.extend({
                refresh: function (master, node, value) {
                   // debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'PAX';
                        });
                        if (newData.length > 0) {
                            result = newData[0][vColumnId];
                        }
                    }

                    node.firstChild.innerHTML = result;

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalRoomVar = webix.extend({
                refresh: function (master, node, value) {
                    // debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'RN';
                        });
                        var ColIndex = $$("gridRptMnth").getColumnIndex(vColumnId);
                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id;
                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id;
                        var Val1 = "";
                        var Val2 = "";
                        if (newData.length > 0) {
                            var Val1 = newData[0][PrvColId1] == null ? "" : newData[0][PrvColId1].toString().trim();
                            var Val2 = newData[0][PrvColId2] == null ? "" : newData[0][PrvColId2].toString().trim();
                        }
                        if (Val1 != "" || Val2 != "") {
                            Val1 = Val1 == "" ? 0 : Val1;
                            Val2 = Val2 == "" ? 0 : Val2;
                            result = parseFloat(Val1) - parseFloat(Val2);
                        }
                    }

                    node.firstChild.innerHTML = result;                    

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalRevVar = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'REV';
                        });
                        var ColIndex = $$("gridRptMnth").getColumnIndex(vColumnId);
                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id;
                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id;
                        var Val1 = "";
                        var Val2 = "";
                        if (newData.length > 0) {
                            var Val1 = newData[0][PrvColId1] == null ? "" : newData[0][PrvColId1].toString().trim();
                            var Val2 = newData[0][PrvColId2] == null ? "" : newData[0][PrvColId2].toString().trim();
                        }
                        if (Val1 != "" || Val2 != "") {
                            Val1 = Val1 == "" ? 0 : Val1;
                            Val2 = Val2 == "" ? 0 : Val2;
                            result = parseFloat(Val1) - parseFloat(Val2);
                        }
                    }

                    node.firstChild.innerHTML = fnCurrFormat(result);

                }
            }, webix.ui.datafilter.summColumn);                   

            webix.ui.datafilter.totalAdrVar = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'ADR';
                        });
                        var ColIndex = $$("gridRptMnth").getColumnIndex(vColumnId);
                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id;
                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id;
                        var Val1 = "";
                        var Val2 = "";
                        if (newData.length > 0) {
                            var Val1 = newData[0][PrvColId1] == null ? "" : newData[0][PrvColId1].toString().trim();
                            var Val2 = newData[0][PrvColId2] == null ? "" : newData[0][PrvColId2].toString().trim();
                        }
                        if (Val1 != "" || Val2 != "") {
                            Val1 = Val1 == "" ? 0 : Val1;
                            Val2 = Val2 == "" ? 0 : Val2;
                            result = parseFloat(Val1) - parseFloat(Val2);
                        }
                    }

                    node.firstChild.innerHTML = fnCurrFormat(result);

                }
            }, webix.ui.datafilter.summColumn);           

            webix.ui.datafilter.totalOthRevVar = webix.extend({
                refresh: function (master, node, value) {
                    //debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'OTH';
                        });
                        var ColIndex = $$("gridRptMnth").getColumnIndex(vColumnId);
                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id;
                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id;
                        var Val1 = "";
                        var Val2 = "";
                        if (newData.length > 0) {
                            var Val1 = newData[0][PrvColId1] == null ? "" : newData[0][PrvColId1].toString().trim();
                            var Val2 = newData[0][PrvColId2] == null ? "" : newData[0][PrvColId2].toString().trim();
                        }
                        if (Val1 != "" || Val2 != "") {
                            Val1 = Val1 == "" ? 0 : Val1;
                            Val2 = Val2 == "" ? 0 : Val2;
                            result = parseFloat(Val1) - parseFloat(Val2);
                        }
                    }

                    node.firstChild.innerHTML = fnCurrFormat(result);

                }
            }, webix.ui.datafilter.summColumn);

            webix.ui.datafilter.totalPaxVar = webix.extend({
                refresh: function (master, node, value) {
                    // debugger;
                    var vColumnId = value.columnId;
                    var result = "0";
                    var vGrid = vGridTotData;
                    if (vGrid.length > 0) {
                        //debugger;
                        var newData = vGrid.filter(function (el) {
                            return el.CLR == 'GrpTotBtm' && el.TYPEID == 'PAX';
                        });
                        var ColIndex = $$("gridRptMnth").getColumnIndex(vColumnId);
                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex-2].id;
                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id;
                        var Val1 ="";
                        var Val2 = "";
                        if (newData.length > 0) {                            
                            var Val1 = newData[0][PrvColId1] == null?"":newData[0][PrvColId1].toString().trim();
                            var Val2 = newData[0][PrvColId2] == null?"":newData[0][PrvColId2].toString().trim();
                        }                       
                        if (Val1 != "" || Val2 != "") {
                            Val1 = Val1 == "" ? 0 : Val1;
                            Val2 = Val2 == "" ? 0 : Val2;
                            result = parseFloat(Val1) - parseFloat(Val2);                            
                        }                        
                    }
                    node.firstChild.innerHTML = result;

                }
            }, webix.ui.datafilter.summColumn);          

            function fnGetOption() {
                var vOpt = [];
                vOpt.push({ view: "checkbox", name: "chkAdCh", id: "chkAdCh", labelWidth: 5, labelRight: "Adult & Child", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkTarPln", id: "chkTarPln", labelWidth: 5, labelRight: "Tarrif + Plan", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkPlnAmt", id: "chkPlnAmt", labelWidth: 5, labelRight: "Plan Amount", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkArrDt", id: "chkArrDt", labelWidth: 5, labelRight: "Arrival Date", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkDepDt", id: "chkDepDt", labelWidth: 5, labelRight: "Dept Date", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkBooker", id: "chkBooker", labelWidth: 5, labelRight: "Booker", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkRev", id: "chkRev", labelWidth: 5, labelRight: "Package Revenue", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkSaExe", id: "chkSaExe", labelWidth: 5, labelRight: "Sales Executive", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkSource", id: "chkSource", labelWidth: 5, labelRight: "Source", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });                
                vOpt.push({ view: "checkbox", name: "chkTrvAgnt", id: "chkTrvAgnt", labelWidth: 5, labelRight: "Travel Agent", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkNation", id: "chkNation", labelWidth: 5, labelRight: "Nationality", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkChannel", id: "chkChannel", labelWidth: 5, labelRight: "Channel", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkMSeg", id: "chkMSeg", labelWidth: 5, labelRight: "Market Segment", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });                
                vOpt.push({ view: "checkbox", name: "chkRateTp", id: "chkRateTp", labelWidth: 5, labelRight: "Rate Type", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkInBy", id: "chkInBy", labelWidth: 5, labelRight: "Checkin By", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkOutBy", id: "chkOutBy", labelWidth: 5, labelRight: "Checkout By", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkPax", id: "chkPax", labelWidth: 5, labelRight: "Pax", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkARP", id: "chkARP", labelWidth: 5, labelRight: "ARP", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                vOpt.push({ view: "checkbox", name: "chkSuppZero", id: "chkSuppZero", labelWidth: 5, labelRight: "Suppress Zero", value: "1", css: "OptCss", customCheckbox: false, height: 20, on: { onItemClick: function () { this.focus(); fnShowHideCol() } } });
                
                return vOpt;
            };
            function fnLoadOptionWindow() {
                if ($$("OptionsNew") != null) $$("OptionsNew").destructor();
                webix.ui({
                    view: "popup",
                    close: true,
                    //modal: true,
                    id: "OptionsNew",
                    head: "Options",
                    responsive: true,
                    css: "WebIxStyle",
                    autofit: true,
                    width: 250,
                    move: true,
                    body: {
                        rows: [
                                {
                                    view: "search", width: 250, labelWidth: 0, id: "txtSrch", label: "", padding: { top: 5, left: 0, bottom: 0, right: 0 }, margin: { bottom: 0 },
                                    on: {
                                        onTimedKeyPress: function () {
                                            //debugger;
                                            var Srchvalue = $$("txtSrch").getValue();
                                            if (Srchvalue != "") {
                                                var ContArr = $$("frmOptions").getChildViews();
                                                if (ContArr.length > 0) {
                                                    var vHt = 0;
                                                    $.each(ContArr, function (key, obj) {
                                                        //debugger;
                                                        if (obj.config.labelRight) {
                                                            if (obj.config.labelRight.toString().toLowerCase().indexOf(Srchvalue.toLowerCase()) != -1) {
                                                                $$(obj.config.id).show();
                                                                //$$("OptScroll").showView($$(obj.config.id));
                                                                //webix.html.addCss($$(obj.config.id).getNode(), "HighlightCheck");                                                        
                                                                //vHt += 26;
                                                                vHt += $$(obj.config.id).$height + 6;
                                                            }
                                                            else $$(obj.config.id).hide();
                                                        }
                                                    });
                                                    if (window.vOrgHt >= vHt) $$("OptionsNew").define("height", vHt + $$("txtSrch").$height + 35);
                                                    else $$("OptionsNew").define("height", window.vOrgHt);
                                                    $$("OptionsNew").adjust();

                                                }
                                            }
                                            else {
                                                var ContArr = $$("frmOptions").getChildViews();
                                                var vHt = 0;
                                                if (ContArr.length > 0) {
                                                    $.each(ContArr, function (key, obj) {
                                                        //debugger;
                                                        if (obj.config.id) {
                                                            //webix.html.removeCss($$(obj.config.id).getNode(), "HighlightCheck");
                                                            vHt += $$(obj.config.id).$height + 6;
                                                            $$(obj.config.id).show();

                                                        }
                                                    });
                                                    if (window.vOrgHt >= vHt) $$("OptionsNew").define("height", vHt + $$("txtSrch").$height + 35);
                                                    else $$("OptionsNew").define("height", window.vOrgHt);
                                                    $$("OptionsNew").adjust();
                                                }
                                            }
                                        }
                                    }
                                },

                                {

                                    view: "form",
                                    id: "frmOptions",
                                    responsive: true,
                                    scroll: "y",
                                    padding: { top: 5, left: 0, bottom: 5, right: 0 },
                                    elements: fnGetOption(),
                                }
                        ]

                    }
                });

            };
            function btnOptionClick() {
                //debugger;  
                if (fnChkSessVal() == false) return;     
                $$("txtSrch").setValue('');
                var vHt = 0;
                var ContArr = $$("frmOptions").getChildViews();
                if (ContArr.length > 0) {
                    $.each(ContArr, function (key, obj) {
                        if (obj.config.id) {
                            vHt += $$(obj.config.id).$height + 6;
                            //webix.html.removeCss($$(obj.config.id).getNode(), "HighlightCheck");
                            $$(obj.config.id).show();

                        }
                    });
                    if (window.vOrgHt >= vHt) $$("OptionsNew").define("height", vHt + $$("txtSrch").$height + 35);
                    else $$("OptionsNew").define("height", window.vOrgHt);
                    $$("OptionsNew").adjust();

                }
                //$$("OptionsNew").showView($$("chkGend"));
                //$$("OptionsNew").scrollTo(0, 1);
                $$("chkAdCh").focus();
            };

            function fnShowHideCol() {
                $$("gridRptDet").clearAll();

                if ($$("chkAdCh").getValue() == "1"){
                    $$("gridRptDet").showColumn("DADULT");
                    $$("gridRptDet").showColumn("DCHILD");
                }
                else{
                    $$("gridRptDet").hideColumn("DADULT");
                    $$("gridRptDet").hideColumn("DCHILD");
                }

                if ($$("chkTarPln").getValue() == "1") $$("gridRptDet").showColumn("DTARPLAN");
                else $$("gridRptDet").hideColumn("DTARPLAN");

                if ($$("chkPlnAmt").getValue() == "1") $$("gridRptDet").showColumn("DPLAN");
                else $$("gridRptDet").hideColumn("DPLAN");

                if ($$("chkArrDt").getValue() == "1") $$("gridRptDet").showColumn("ARRDT");
                else $$("gridRptDet").hideColumn("ARRDT");

                if ($$("chkDepDt").getValue() == "1") $$("gridRptDet").showColumn("DEPDT");
                else $$("gridRptDet").hideColumn("DEPDT");

                if ($$("chkTrvAgnt").getValue() == "1") $$("gridRptDet").showColumn("TRVAGENT");
                else $$("gridRptDet").hideColumn("TRVAGENT");

                if ($$("chkBooker").getValue() == "1") $$("gridRptDet").showColumn("BOOK");
                else $$("gridRptDet").hideColumn("BOOK");                

                if ($$("chkMSeg").getValue() == "1") $$("gridRptDet").showColumn("MSEG");
                else $$("gridRptDet").hideColumn("MSEG");

                if ($$("chkSaExe").getValue() == "1") $$("gridRptDet").showColumn("SALESEXE");
                else $$("gridRptDet").hideColumn("SALESEXE");

                if ($$("chkRev").getValue() == "1") $$("gridRptDet").showColumn("DPKGREV");
                else $$("gridRptDet").hideColumn("DPKGREV");                

                if ($$("chkPax").getValue() == "1") $$("gridRptDet").showColumn("DPAX");
                else $$("gridRptDet").hideColumn("DPAX");                

                if ($$("chkInBy").getValue() == "1") $$("gridRptDet").showColumn("CHKOUT");
                else $$("gridRptDet").hideColumn("CHKOUT");

                if ($$("chkOutBy").getValue() == "1") $$("gridRptDet").showColumn("CHKIN");
                else $$("gridRptDet").hideColumn("CHKIN");
            
                if ($$("chkSource").getValue() == "1") $$("gridRptDet").showColumn("SOURCE");
                else $$("gridRptDet").hideColumn("SOURCE");
                
                if ($$("chkNation").getValue() == "1") $$("gridRptDet").showColumn("NATION");
                else $$("gridRptDet").hideColumn("NATION");

                if ($$("chkChannel").getValue() == "1") $$("gridRptDet").showColumn("CHANNEL");
                else $$("gridRptDet").hideColumn("CHANNEL");

                if ($$("chkRateTp").getValue() == "1") $$("gridRptDet").showColumn("RATETY");
                else $$("gridRptDet").hideColumn("RATETY");

                if ($$("chkARP").getValue() == "1") $$("gridRptDet").showColumn("DARP");
                else $$("gridRptDet").hideColumn("DARP");

                $$("gridRptDet").refreshColumns();
                $$("gridRptDet").refresh();                
            };

            function fnLoadPopWindows() {                
                webix.ui({
                    view: "window",
                    close: true,
                    modal: true,
                    id: "RptAdvFilter",
                    head: "Advance Filter",
                    position: "center",
                    css: "WebIxStyle",
                    height: 250,
                    width: 380,
                    move: true,
                    body: {
                        padding: { top: 20, left: 30, bottom: 20, right: 10 },
                        rows: [
                                { view: "text", id: "txtCompId",  hidden: true },
                                { view: "text", id: "txtTrvAgntId", hidden: true },
                                { view: "text", id: "txtCompId1", hidden: true },
                                { view: "text", id: "txtTrvAgntId1", hidden: true },
                                { view: "text", id: "txtComp1", hidden: true },
                                { view: "text", id: "txtTrvAgnt1", hidden: true },
                                { cols: [{ view: "text", id: "txtComp", label: "Company", readonly: true }, { view: "button", width: 30, type: "icon", id: "btnCmpSrch", borderless: true, icon: "wxi-search", click: function () { fnbtnCompClick(); } }, { view: "button", width: 30, type: "icon", id: "btnCmpDel", borderless: true, icon: "fa fa-trash", click: function () { $$("txtCompId").setValue(""); $$("txtComp").setValue(""); } }] },
                                { cols: [{ view: "text", id: "txtTrvAgnt", label: "Travel Agent", readonly: true }, { view: "button", width: 30, type: "icon", id: "btnTavAgntSrch", borderless: true, icon: "wxi-search", click: function () { fnbtnTrvlAgnClick(); } }, { view: "button", width: 30, type: "icon", id: "btnTrvAgntDel", borderless: true, icon: "fa fa-trash", click: function () { $$("txtTrvAgntId").setValue(""); $$("txtTrvAgnt").setValue(""); } }] },
                                {
                                    padding:{top:15},
                                    cols: [{}, {
                                        view: "button", type: "icon", id: "OkFilter", icon: "wxi-check", label: "OK", inputWidth: 80, width: 80,
                                        click: function () {
                                            $$("txtCompId1").setValue($$("txtCompId").getValue());
                                            $$("txtTrvAgntId1").setValue($$("txtTrvAgntId").getValue());
                                            $$("txtComp1").setValue($$("txtComp").getValue());
                                            $$("txtTrvAgnt1").setValue($$("txtTrvAgnt").getValue());
                                            $$("RptAdvFilter").hide();
                                            fnbtnDisplay();
                                        }
                                    }],
                                }
                        ]
                    }
                });
                webix.ui({
                    view: "window",
                    close: true,
                    modal: true,
                    id: "RptCompSrch",
                    head: "Company",
                    position: "center",
                    css: "WebIxStyle",
                    height: 500,
                    width: 380,
                    move: true,
                    scrollX: false,
                    body: {
                        rows: [
                            {
                                view: "datatable",
                                id: "CompGrid",
                                select: 'row',
                                //editable: true,
                                css: "webix_header_border",
                                scrollX: false,
                                columns: [
                                        { id: "NM", header: ['Company', { content: "textFilter", }], width: 335, css: { 'text-align': 'left ! important' }, },
                                        { id: "CompChk", editor: "Checkbox", header: [{ content: "masterCheckbox", css: { 'padding': '0px ! important' } }], width: 30, css: "check_box", template: "{common.checkbox()}" },
                                        { id: "ID", hidden: true },
                                ],
                                data: [],

                            },
                            {
                                margin: 10,
                                padding: { top: 5, bottom: 5, right: 5 },
                                cols: [
                                    {
                                        view: "button",
                                        type: "icon",
                                        icon: "wxi-check",
                                        label: "Ok",
                                        inputWidth: 80,
                                        click: function () {
                                            var vCompNm = "";
                                            var vCompId = "";
                                            $$("CompGrid").data.each(function (obj) {

                                                if (obj.CompChk) {
                                                    if (vCompNm != "") {
                                                        vCompNm = vCompNm + "," + obj.NM.trim();
                                                    }
                                                    else {
                                                        vCompNm = obj.NM.trim();
                                                    }

                                                    if (vCompId != "") {
                                                        vCompId = vCompId + "','" + obj.ID.trim();
                                                    }
                                                    else {
                                                        vCompId = obj.ID.trim();
                                                    }
                                                }
                                            });
                                            $$("txtComp").setValue(vCompNm);
                                            $$("txtCompId").setValue(vCompId);
                                            $$("RptCompSrch").hide();

                                        },
                                        align: "right"
                                    }
                                ]
                            }],
                    }
                });
                webix.ui({
                    view: "window",
                    close: true,
                    modal: true,
                    id: "RptTrvAgntSrch",
                    head: "Travel Agent",
                    position: "center",
                    css: "WebIxStyle",
                    height: 500,
                    width: 380,
                    move: true,
                    scrollX: false,
                    body: {
                        rows: [
                            {
                                view: "datatable",
                                id: "TrvAgntGrid",
                                select: 'row',
                                //editable: true,
                                css: "webix_header_border",
                                scrollX: false,
                                columns: [
                                        { id: "NM", header: ['Travel Agent', { content: "textFilter", }], width: 335, css: { 'text-align': 'left ! important' }, },
                                        { id: "TrvAgntChk", editor: "Checkbox", header: [{ content: "masterCheckbox", css: { 'padding': '0px ! important' } }], width: 30, css: "check_box", template: "{common.checkbox()}" },
                                        { id: "ID", hidden: true },
                                ],
                                data: [],

                            },
                            {
                                margin: 10,
                                padding: { top: 5, bottom: 5, right: 5 },
                                cols: [
                                    {
                                        view: "button",
                                        type: "icon",
                                        icon: "wxi-check",
                                        label: "Ok",
                                        inputWidth: 80,
                                        click: function () {
                                            var vTrvAgntNm = "";
                                            var vTrvAgntId = "";
                                            $$("TrvAgntGrid").data.each(function (obj) {

                                                if (obj.TrvAgntChk) {
                                                    if (vTrvAgntNm != "") {
                                                        vTrvAgntNm = vTrvAgntNm + "," + obj.NM.trim();
                                                    }
                                                    else {
                                                        vTrvAgntNm = obj.NM.trim();
                                                    }

                                                    if (vTrvAgntId != "") {
                                                        vTrvAgntId = vTrvAgntId + "','" + obj.ID.trim();
                                                    }
                                                    else {
                                                        vTrvAgntId = obj.ID.trim();
                                                    }
                                                }
                                            });
                                            $$("txtTrvAgnt").setValue(vTrvAgntNm);
                                            $$("txtTrvAgntId").setValue(vTrvAgntId);
                                            $$("RptTrvAgntSrch").hide();

                                        },
                                        align: "right"
                                    }
                                ]
                            }],
                    }
                });

            };
            function sortByContrib(a, b) {

                var a = a.CONTRIBUTION;
                var b = b.CONTRIBUTION;
                if (a == "" || a == "Total" || a == null) return 0;
                else return a > b ? 1 : (a < b ? -1 : 0);
            };
            function sortByRoom(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.ROOM;
                var b = b.ROOM;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByRev(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.REV;
                var b = b.REV;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByRevPer(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.REVPER;
                var b = b.REVPER;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByPax(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.PAX;
                var b = b.PAX;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByRoomPer(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.ROOMPER;
                var b = b.ROOMPER;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByArr(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.ARR;
                var b = b.ARR;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByArp(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.ARP;
                var b = b.ARP;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByRevPar(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.REVPAR;
                var b = b.REVPAR;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByRevPor(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.REVPOR;
                var b = b.REVPOR;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByPkg(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.PKG;
                var b = b.PKG;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function sortByExtPkg(a, b) {

                var cont1 = a.CONTRIBUTION;
                var a = a.EXTPKG;
                var b = b.EXTPKG;
                var v1 = 0;
                var v2 = 0;
                if (a != "" && a != null) v1 = parseFloat(a);
                if (b != "" && b != null) v2 = parseFloat(b);
                if (cont1 == "" || cont1 == "Total" || cont1 == null) return 0;
                else return v1 > v2 ? 1 : (v1 < v2 ? -1 : 0);
            };
            function fnCurrFormat(value) {

                var Currfrmt = $("#CURRENCY_FORMAT").val();
                var CurrDelimit = $("#CURRENCY_DELIMIT").val();
                var CurrDecimal = $("#CURRENCY_DECIMLIMIT").val();
                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);

            }
            function CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal) {
                //

                if (value == null) return "";

                if (value.toString() != "") {


                    if (Currfrmt == "L") {
                        var x = parseFloat(value).toFixed(CurrDecimal);
                        var neg = false;
                        if (value < 0) {
                            neg = true;
                            //x = math.abs(x);
                        }

                        x = x.toString();
                        var afterPoint = '';
                        if (x.indexOf('.') > 0) {
                            afterPoint = x.substring(x.indexOf('.') + 1, x.length);
                            afterPoint = CurrDelimit + afterPoint
                        }



                        x = Math.floor(x);
                        x = x.toString();
                        var lastThree = x.substring(x.length - 3);
                        var otherNumbers = x.substring(0, x.length - 3);
                        if (otherNumbers != '' && otherNumbers != '-')
                            lastThree = ',' + lastThree;
                        return otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree + afterPoint;
                    }
                    else {
                        var x = parseFloat(value).toFixed(CurrDecimal);
                        var neg = false;
                        if (value < 0) {
                            neg = true;
                            //x = math.abs(x);
                        }

                        x = x.toString();

                        //var res = x.replace(/(\d)(?=(\d{3})+(?!\d))/g, "1,")  //+ afterPoint;
                        //var res = x.replace(/(\d{3})/g, "1,")
                        var res = x.replace(/\B(?=(\d{3})+(?!\d))/g, ",")

                        if (res.indexOf('.') > 0) {

                            res = res.replace(".", CurrDelimit)
                        }


                        return res;
                    }
                }
                else {
                    return value;
                }
            };
            function fnbtnTrvlAgnClick() {
                var vCmpId = $$("Property").getValue();
                fnLoadTrvlAgntPop(vCmpId, "TA", "", $$("txtTrvAgntId").getValue());
                $$("RptTrvAgntSrch").show();
            };
            function fnbtnCompClick() {
                var vCmpId = $$("Property").getValue();
                fnLoadCompPop(vCmpId, "CMNY", "", $$("txtCompId").getValue());
                $$("RptCompSrch").show();
            };

            function fnLoadCompPop(vCmpId, TYPETAG, SUBTYPE, CMPIDS) {

                $$("CompGrid").clearAll();
                var rowDatad = "";

                $.ajax({
                    type: "POST",
                    async: false,
                    url: "/Reports/fnLoadSearchAll",
                    data: "CmpId=" + vCmpId + "&TYPETAG=" + TYPETAG + "&SUBTYPE=" + SUBTYPE,


                    success: function (d) {

                        if (d != "") {
                            rowDatad = JSON.parse(d);

                            var Sa = rowDatad;
                            var Rows = [];
                            if (CMPIDS != "") {
                                CMPIDS = "'" + CMPIDS + "'";
                            }
                            $.each(Sa, function (key, value) {
                                var set = {};
                                bTrue = "";
                                bChk = false;
                                var arr = [];
                                if (CMPIDS != "") {

                                    arr = CMPIDS.split(",");
                                    bTrue = arr.filter(function (id) {
                                        return id == "'" + value.id.trim() + "'";
                                    });
                                    if (bTrue.length > 0) bChk = true;

                                }
                                set = { NM: value.value.trim(), ID: value.id.trim(), CompChk: bChk };
                                Rows.push(set);
                            });
                            //$$("CompGrid").getColumnConfig("CmpChk").header[0].checked = true;
                            //$$("CompGrid").refreshColumns();

                            $$("CompGrid").parse(Rows);
                            $$("CompGrid").refresh();

                        }
                    }
                });
            };
            function fnLoadTrvlAgntPop(vCmpId, TYPETAG, SUBTYPE, TRVLAGNTIDS) {

                $$("TrvAgntGrid").clearAll();
                var rowDatad = "";

                $.ajax({
                    type: "POST",
                    async: false,
                    url: "/Reports/fnLoadSearchAll",
                    data: "CmpId=" + vCmpId + "&TYPETAG=" + TYPETAG + "&SUBTYPE=" + SUBTYPE,


                    success: function (d) {

                        if (d != "") {
                            rowDatad = JSON.parse(d);

                            var Sa = rowDatad;
                            var Rows = [];
                            if (TRVLAGNTIDS != "") {
                                TRVLAGNTIDS = "'" + TRVLAGNTIDS + "'";
                            }
                            $.each(Sa, function (key, value) {
                                var set = {};
                                bTrue = "";
                                bChk = false;
                                if (TRVLAGNTIDS != "") {
                                    arr = TRVLAGNTIDS.split(",");
                                    bTrue = arr.filter(function (id) {
                                        return id == "'" + value.id.trim() + "'";
                                    });
                                    if (bTrue.length > 0) bChk = true;

                                }
                                set = { NM: value.value.trim(), ID: value.id.trim(), TrvAgntChk: bChk };
                                Rows.push(set);
                            });
                            //$$("TrvAgntGrid").getColumnConfig("TrvAgntChk").header[0].checked = true;
                            //$$("TrvAgntGrid").refreshColumns();

                            $$("TrvAgntGrid").parse(Rows);
                            $$("TrvAgntGrid").refresh();

                        }
                    }
                });
            };

        </script>
        <script type="text/javascript">

            $(document).ready(function () {

                $("#divPage").removeClass("Pagefalse");
                $("#LoadDIv").hide();

                $("#MenuName").val('FOMNUREPCONTRI');
                $("#MenuLvl").val('FOMNUANL');
                $("#MenuLvl1").val('');
                
                

            });
            $(document).on('shown.lte.pushmenu', function () {
                var timeoutID;
                function delayedStart() {
                    timeoutID = window.setTimeout(resizeAction, 350);
                }

                function resizeAction() {
                    sidebarFn(1);
                    //  alert("Sidebar is collapsed or expanded!")
                    window.clearTimeout(timeoutID);
                }

                delayedStart();

            }).on('collapsed.lte.pushmenu', function () {
                var timeoutID;
                function delayedStart() {
                    timeoutID = window.setTimeout(resizeAction, 350);
                }

                function resizeAction() {
                    sidebarFn(2);
                    //  alert("Sidebar is collapsed or expanded!")
                    window.clearTimeout(timeoutID);
                }

                delayedStart();
            });
            function sidebarFn(val) {

                var rowDatad = [];
                var rowDatad1 = [];

                $$("gridRpt").resize();
                $$("gridRptMnth").resize();
                $$("gridRptDet").resize();

            }
            function fnbtnAllClick() {

                $$("gridRpt").clearAll();
                var vType = "";
                var vCmpId = $$("Property").getValue();
                if ($$("ddlSeg").getText().toString().trim() == "Company") vType = "CMNY"
                else if ($$("ddlSeg").getText().toString().trim() == "Market Segment") vType = "M"
                else if ($$("ddlSeg").getText().toString().trim() == "Guest Type") vType = "G"
                else if ($$("ddlSeg").getText().toString().trim() == "Business Source") vType = "B"
                else if ($$("ddlSeg").getText().toString().trim() == "Segment Group") vType = "SG"
                else if ($$("ddlSeg").getText().toString().trim() == "Group") vType = "GR"

                $$("SegmentTyid").eachColumn(function (id, col) {
                    var filter = this.getFilter(id);
                    if (filter) {
                        if (filter.setValue) filter.setValue("")
                        else filter.value = "";
                    }
                });

                fnLoadSegmentPop(vCmpId, vType, "");

                $$("SegmentTyid").config.columns[0].header[0].text = $$("ddlSeg").getText();
                $$("SegmentTyid").refreshColumns();
                //$$("CountrySrchPop").getHead().setHTML("Nationality Search");
                $$("RptSegmentTypeSrchPopUp").getHead().getChildViews()[0].setHTML($$("ddlSeg").getText());  

                $$("RptSegmentTypeSrchPopUp").show();

            };

            function fnddlSegChange() {

                ClearGrid();
                $$("ChkAll").setValue(1);
                $$("btnAll").hide();

                if ($$("gridRpt").config.columns[0].id == "CONTRIBUTION") $$("gridRpt").config.columns[0].header = $$("ddlSeg").getText();
                else $$("gridRpt").config.columns[1].header = $$("ddlSeg").getText();
                $$("gridRpt").refreshColumns();
                if ($$("gridRptMnth").config.columns[0].id == "CONTRIBUTION") $$("gridRptMnth").config.columns[0].header = $$("ddlSeg").getText();
                else $$("gridRptMnth").config.columns[1].header = $$("ddlSeg").getText();
                $$("gridRptMnth").refreshColumns();

                if ($$("ChkMonthws").getValue() == 1 || $$("ChkQuartws").getValue() == 1 || $$("ChkDayws").getValue() == 1) {
                    if ($$("CATAPPL") == 0) {
                        $$("ChkCat").hide();
                        $$("ChkCatLbl").hide();
                        $$("ddlCat").hide();
                    }
                    else {
                        $$("ChkCat").show();
                        $$("ChkCatLbl").show();
                        $$("ddlCat").hide();
                    }
                    return;
                }
                $$("ChkAll").hide();
                $$("btnAll").hide();
                $$("ChkCat").setValue(0);
                if ($$("ddlSeg").getText().toString().trim() == "Company" || $$("ddlSeg").getText().toString().trim() == "Market Segment" ||
                    $$("ddlSeg").getText().toString().trim() == "Business Source" || $$("ddlSeg").getText().toString().trim() == "Guest Type" ||
                    $$("ddlSeg").getText().toString().trim() == "Segment Group" || $$("ddlSeg").getText().toString().trim() == "Group") {
                    $$("ChkAll").show();
                }


            };

            function fnChkCatClick() {

                ClearGrid();
                if ($$("ChkCat").getValue() == 1) $$("ddlCat").show();
                else $$("ddlCat").hide();
            };
            function fnChkAllClick() {
                ClearGrid();
                if ($$("ChkAll").getValue() == 1) $$("btnAll").hide();
                else $$("btnAll").show();
            };
            function fnChkComplHUClick() {
                ClearGrid();
            };
            function fnChkDayUseClick() {
                ClearGrid();
            };
            function fnChkDaywsClick() {

                ClearGrid();
                fnChkMonthwsClick();

            };
            function fnChkQuartClick() {
                ClearGrid();

                fnChkMonthwsClick();

            };
            function fnChkDetClick() {
                ClearGrid();
                $$("ChkMonthws").setValue(0);
                $$("ChkQuartws").setValue(0);
                $$("ChkDayws").setValue(0);

                fnChkMonthwsClick();

                $("#divChkMonthws").show();
                $("#divChkQuart").show();
                $("#divChkDayws").show();

            };           

            function fnChkMonthwsClick() {
                ClearGrid();
                fnInitOptions();
                $$("btnOptions").hide();
                $$("btnAdvSearch").hide();
                //if ($$("ChkDayws").getValue() == 1) $$("gridRptMnth").showColumn("DATE");
                $$("txtCompId1").setValue('');
                $$("txtTrvAgntId1").setValue('');
                $$("txtComp1").setValue('');
                $$("txtTrvAgnt1").setValue('');

                if ($$("ChkMonthws").getValue() == 1 || $$("ChkQuartws").getValue() == 1 || $$("ChkDayws").getValue() == 1) {

                    $("#gridRptt").hide();
                    $("#gridRpttDet").hide();
                    $("#gridRpttMnth").show();
                    $$("gridRptMnth").resize();
                    $$("gridRpt").resize();
                    $$("ChkRevPar").hide();
                    $$("ChkRevPor").hide();
                    $$("ChkAll").hide();
                    $$("btnAll").hide();
                    $$("btnAnl").show();
                    $$("ChkDet").setValue(0);
                    //$$("AnlLbl").show();

                    if ($$("ChkDayws").getValue() == 1) {
                        $$("FromMthDate").hide();
                        $$("ToMthDate").hide();
                        $$("FromDt").show();
                        $$("ToDt").show();
                        $$("ChkMonthws").blockEvent();
                        $$("ChkQuartws").blockEvent();
                        $$("ChkMonthws").setValue(0);
                        $$("ChkQuartws").setValue(0);
                        $$("ChkMonthws").unblockEvent();
                        $$("ChkQuartws").unblockEvent();
                        //$$("ChkMonthws").hide();
                        //$$("ChkQuartws").hide();

                        $("#divChkMonthws").hide();
                        $("#divChkQuart").hide();
                        $("#divChkLstYr").hide();
                        $("#divChkVar").hide();
                        $$("ChkLstYr").setValue('0');
                        $$("ChkVar").setValue('0');

                        var vAccDt = $("#HdnAccDt").val();
                        var vToAccDt = $("#HdnToAccDt").val();
                        var vFromDt = formatDate1(vToAccDt);
                        var vToDt = formatDate1(vAccDt);
                        $$("FromDt").blockEvent();
                        $$("ToDt").blockEvent();
                        $$("FromDt").setValue(vFromDt);
                        $$("ToDt").setValue(vToDt);
                        $$("FromDt").unblockEvent();
                        $$("ToDt").unblockEvent();
                        $("#lblRptCaption").empty();
                        $("#lblRptCaption").append("Contribution Analysis - Daywise");

                    }
                    else if ($$("ChkMonthws").getValue() == 1) {
                        $$("FromMthDate").show();
                        $$("ToMthDate").show();
                        $$("FromDt").hide();
                        $$("ToDt").hide();
                        $$("ChkQuartws").blockEvent();
                        $$("ChkDayws").blockEvent();
                        $$("ChkQuartws").setValue(0);
                        $$("ChkDayws").setValue(0);
                        $$("ChkQuartws").unblockEvent();
                        $$("ChkDayws").unblockEvent();
                        //$$("ChkQuartws").hide();
                        //$$("ChkDayws").hide();

                        $("#divChkQuart").hide();
                        $("#divChkDayws").hide();
                        $("#divChkLstYr").show();


                        var vFromMnth = $("#HdnFrmMnth").val();
                        var vToMnth = $("#HdnToMnth").val();
                        $$("FromMthDate").blockEvent();
                        $$("ToMthDate").blockEvent();
                        $$("FromMthDate").setValue(vFromMnth);
                        $$("ToMthDate").setValue(vToMnth);
                        $$("FromMthDate").unblockEvent();
                        $$("ToMthDate").unblockEvent();
                        $$("ToMthDate").enable();
                        $("#lblRptCaption").empty();
                        $("#lblRptCaption").append("Contribution Analysis - Monthwise");
                    }
                    else if ($$("ChkQuartws").getValue() == 1) {

                        $$("FromMthDate").show();
                        $$("ToMthDate").show();
                        $$("FromDt").hide();
                        $$("ToDt").hide();
                        $$("ChkMonthws").setValue(0);
                        $$("ChkDayws").setValue(0);
                        //$$("ChkMonthws").hide();
                        //$$("ChkDayws").hide();

                        $("#divChkMonthws").hide();
                        $("#divChkDayws").hide();
                        $("#divChkLstYr").show();

                        var vSetDate = "";
                        var CurrDt = $("#HdnCurrDt").val();
                        var YrStDt = $("#YEAR_START_DATE").val();
                        var CurrMnth = CurrDt.substring(3, 5);
                        var CurrYr = CurrDt.substring(6, 10);
                        var YrStMnth = YrStDt.substring(3, 5);
                        var vEndMnth = "";
                        if (Number(CurrMnth) >= Number(YrStMnth)) {
                            vSetDate = FnRetMonth1(parseInt(YrStMnth)) + " " + CurrYr;
                            $$("FromMthDate").setValue(vSetDate);

                            vEndMnth = parseInt(YrStMnth) + 11;
                            if (vEndMnth > 12) {
                                vEndMnth = vEndMnth - 12;
                                CurrYr = Number(CurrYr) + 1;
                            }
                            vSetDate = FnRetMonth1(parseInt(vEndMnth)) + " " + CurrYr.toString().trim();
                            $$("ToMthDate").setValue(vSetDate);
                            $$("ToMthDate").disable();
                        }
                        else {
                            CurrYr = Number(CurrYr) - 1;
                            vSetDate = FnRetMonth1(parseInt(YrStMnth)) + " " + CurrYr.toString().trim();
                            $$("FromMthDate").setValue(vSetDate);

                            vEndMnth = Number(YrStMnth) + 11;
                            if (vEndMnth > 12) {
                                vEndMnth = vEndMnth - 12;
                                CurrYr = CurrYr + 1;
                            }
                            vSetDate = FnRetMonth1(parseInt(vEndMnth)) + " " + CurrYr.toString().trim();
                            $$("ToMthDate").setValue(vSetDate);
                            $$("ToMthDate").disable();
                        }

                        $("#lblRptCaption").empty();
                        $("#lblRptCaption").append("Contribution Analysis - Quarterly");

                    }
                    fnHeader();

                }
                else if ($$("ChkDet").getValue() == 1) {                    
                    $("#gridRpttDet").show();
                    $$("gridRptMnth").resize();
                    $$("gridRpt").resize();
                    $$("gridRptDet").resize();
                    $("#gridRpttMnth").hide();
                    $("#gridRptt").hide();
                    //$$("ChkQuartws").show();
                    //$$("ChkDayws").show();
                    //$$("ChkMonthws").show();

                    $("#divChkMonthws").show();
                    $("#divChkQuart").show();
                    $("#divChkDayws").show();
                    $("#divChkLstYr").hide();
                    $("#divChkVar").hide();

                    $$("ChkLstYr").setValue('0');
                    $$("ChkVar").setValue('0');

                    $$("FromDt").show();
                    $$("ToDt").show();
                    $$("FromMthDate").hide();
                    $$("ToMthDate").hide();
                    $$("ChkRevPar").hide();
                    $$("ChkRevPor").hide();
                    $$("btnAnl").hide();
                    $$("btnOptions").show();
                    $$("btnAdvSearch").show();
                    // $$("AnlLbl").hide();
                    fnddlSegChange();
                    $("#lblRptCaption").empty();
                    $("#lblRptCaption").append("Contribution Analysis Details");
                }
                else {
                    $("#gridRptt").show();
                    $$("gridRptMnth").resize();
                    $$("gridRpt").resize();
                    $$("gridRptDet").resize();
                    $("#gridRpttMnth").hide();
                    $("#gridRpttDet").hide();
                    //$$("ChkQuartws").show();
                    //$$("ChkDayws").show();
                    //$$("ChkMonthws").show();

                    $("#divChkMonthws").show();
                    $("#divChkQuart").show();
                    $("#divChkDayws").show();
                    $("#divChkLstYr").hide();
                    $("#divChkVar").hide();

                    $$("ChkLstYr").setValue('0');
                    $$("ChkVar").setValue('0');

                    $$("FromDt").show();
                    $$("ToDt").show();
                    $$("FromMthDate").hide();
                    $$("ToMthDate").hide();
                    $$("ChkRevPar").show();
                    $$("ChkRevPor").show();
                    $$("btnAnl").hide();

                    // $$("AnlLbl").hide();
                    fnddlSegChange();
                    $("#lblRptCaption").empty();
                    $("#lblRptCaption").append("Contribution Analysis");
                }

                gridResize();

            };
            function fChkRevParClick() {
                ClearGrid();
                if ($$("ChkRevPar").getValue() == 1) {
                    $$("gridRpt").showColumn("REVPAR");
                }
                else {
                    $$("gridRpt").hideColumn("REVPAR");
                }
            };

            function fnChkLstYearClick() {
                ClearGrid();
                if ($$("ChkLstYr").getValue() == 1) {
                    $("#divChkVar").show();
                }
                else {
                    $("#divChkVar").hide();
                }
                fnChkMonthwsClick();
            };
            function fnChkVarClick() {
                ClearGrid();
                fnChkMonthwsClick();
            };

            function fnChkRevPorClick() {
                ClearGrid();
                if ($$("ChkRevPor").getValue() == 1) {
                    $$("gridRpt").showColumn("REVPOR");
                    $$("gridRpt").showColumn("PKG");
                    $$("gridRpt").showColumn("EXTPKG");
                }
                else {
                    $$("gridRpt").hideColumn("REVPOR");
                    $$("gridRpt").hideColumn("PKG");
                    $$("gridRpt").hideColumn("EXTPKG");
                }
            };
            function fnLoanContAnlOptWindowLoad() {
                webix.ui({
                    view: "popup",
                    //close: true,
                    //modal: true,
                    id: "RpContForcastOpt",
                    head: "Analysis By",
                    position: "center",
                    css: "WebIxStyle",
                    height: 500,
                    width: 150,
                    move: true,
                    body: {
                        padding: { top: 10, left: 10, bottom: 20, right: 5 },
                        rows: [
                           { view: "checkbox", id: "ChkNight", labelWidth: 5, labelRight: "Nights", customCheckbox: false, },
                           { view: "checkbox", id: "ChkRev", labelWidth: 5, labelRight: "Revenue", customCheckbox: false, },
                           { view: "checkbox", id: "ChkARR", labelWidth: 5, labelRight: "ADR", customCheckbox: false, },
                           { view: "checkbox", id: "ChkOthRev", labelWidth: 5, labelRight: "Other Revenue", customCheckbox: false, },
                           { view: "checkbox", id: "ChkPax", labelWidth: 5, labelRight: "Pax", customCheckbox: false, },
                           { cols: [{}, { view: "button", type: "icon", id: "Okoptions", icon: "wxi-check", label: "OK", inputWidth: 80, width: 80, click: function () { fnContForcastOptOkClick(); } }], }
                        ]
                    }
                });
            };
            function fnContForcastOptOkClick() {

                var CHKREV = $$("ChkRev").getValue();
                var CHKARR = $$("ChkARR").getValue();
                var CHKNT = $$("ChkNight").getValue();
                var CHKOTHREV = $$("ChkOthRev").getValue();
                var CHKPAX = $$("ChkPax").getValue();

                if (CHKREV == 0 && CHKARR == 0 && CHKNT == 0 && CHKOTHREV == 0 && CHKPAX == 0) {
                    webix.message("Select atleast one Analysis By", "warning", 800);
                    return;
                }


                $("#CHK_NT").val(CHKNT);
                $("#CHK_REV").val(CHKREV);
                $("#CHK_ARR").val(CHKARR);
                $("#CHK_OTHREV").val(CHKOTHREV);
                $("#CHK_PAX").val(CHKPAX);

                $$("RpContForcastOpt").hide();
                fnHeader();
                fnbtnDisplay();
            };

            function fnbtnAnlClick() {

                var CHKNT = $("#CHK_NT").val();
                var CHKREV = $("#CHK_REV").val();
                var CHKARR = $("#CHK_ARR").val();
                var CHKOTHREV = $("#CHK_OTHREV").val();
                var CHKPAX = $("#CHK_PAX").val();

                $$("ChkRev").setValue(CHKREV);
                $$("ChkARR").setValue(CHKARR);
                $$("ChkNight").setValue(CHKNT);
                $$("ChkOthRev").setValue(CHKOTHREV);
                $$("ChkPax").setValue(CHKPAX);
                //$$("RpContForcastOpt").show();


            };

            function ClearGrid() {
                vGridTotData = [];
                $$("gridRpt").clearAll();
                $$("gridRptMnth").clearAll();
                $$("gridRptDet").clearAll();
                                
            };
            function fnbtnDisplay() {
                if (fnChkSessVal() == false) return;     
                $("#LoadDIv").show();
                var frmdate = "";
                var todate = "";
                var REPTYPE = "";
                var CHKPM = "";
                var ROOMTYIDS = "";
                var CHKOCCPER = "";
                var CHKREVPAR = "";
                var CHKPASTDT = "";
                var CHKCOMPLHU = "";
                var CHKTENTRESV = "";
                var CHKDAYUSE = "";
                var V24_IND = "";
                var CATID = "";
                var SEGIDS = "";
                var CHKNT = "";
                var CHKREV = "";
                var CHKARR = "";
                var CHKOTHREV = "";
                var CHKPAX = "";
                var frmdate = $$("FromDt").getValue();
                var todate = $$("ToDt").getValue();

                var myformat = webix.Date.dateToStr("%d/%m/%Y");
                frmdate = myformat(frmdate);
                todate = myformat(todate);

                var CHKDAYTP = "";
                var vChkLstYr = "0";
                vGridTotData = [];

                REPTYPE = "1";
                if ($$("ChkMonthws").getValue() == 1 || $$("ChkQuartws").getValue() == 1 || $$("ChkDayws").getValue() == 1) {
                    REPTYPE = "2";
                    //fnHeader();
                    if ($$("ChkDayws").getValue() == 1) CHKDAYTP = "D";
                    if ($$("ChkMonthws").getValue() == 1) CHKDAYTP = "M";
                    if ($$("ChkQuartws").getValue() == 1) CHKDAYTP = "Q";
                    CHKNT = $("#CHK_NT").val();
                    CHKREV = $("#CHK_REV").val();
                    CHKARR = $("#CHK_ARR").val();
                    CHKOTHREV = $("#CHK_OTHREV").val();
                    CHKPAX = $("#CHK_PAX").val();
                    vChkLstYr = $$("ChkLstYr").getValue();
                }

                if ($$("ChkDet").getValue() == "1") REPTYPE = "3";

                if ($$("ChkMonthws").getValue() == "1" || $$("ChkQuartws").getValue() == "1") {
                    frmdate = $$("FromMthDate").getValue();
                    todate = $$("ToMthDate").getValue()

                    frmdate = formatDate(frmdate);
                    todate = formatDate(todate);
                }

                if (frmdate == "") {
                    webix.message("From Date can't be empty", "warning", 500);
                    $("#LoadDIv").hide();
                    return;
                }
                if (todate == "") {
                    webix.message("To Date can't be empty", "warning", 500);
                    $("#LoadDIv").hide();
                    return;
                }
                //frmdate = formatDate(frmdate);
                //todate = formatDate(todate);
                var bSucc = "1";

                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {

                            webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            bSucc = "0";
                        }
                    }
                });

                if (bSucc == "0") return;
                var comp = $$("Property").getValue();


                if (comp == "") {
                    webix.message("Property can't be empty", "warning", 500);
                    $("#LoadDIv").hide();
                    return;
                }
                //var W10_IND = $("#CHK_CONSOLID").val();
                if ($$("ChkAll").getValue() == 0 && $$("ChkAll").isVisible() == true) SEGIDS = $("#SegmntId").val();

                if ($$("ddlCat").getValue() != "<-ALL->" && $$("ChkCat").getValue() == 1) CATID = $$("ddlCat").getValue();

                SEGTYPE = $$("ddlSeg").getText();
                CHKREVPAR = $$("ChkRevPar").getValue();
                CHKCOMPLHU = $$("ChkComplHU").getValue();
                CHKDAYUSE = $$("ChkDayUse").getValue();
                var J15_IND = $("#J15_IND").val();
                var V24_IND = $("#V24_IND").val();
                var AGENTIDS = "";
                var COMPIDS = "";
                var chkSuppZero = "0";
                if ($$("ChkDet").getValue() == "1") {
                    AGENTIDS = $$("txtTrvAgntId1").getValue();
                    COMPIDS = $$("txtCompId1").getValue(); 
                    var chkSuppZero = $$("chkSuppZero").getValue();
                }

                var param = JSON.stringify({
                    comp: comp, frmdate: frmdate, todate: todate, REPTYPE: REPTYPE, SEGTYPE: SEGTYPE, SEGIDS: SEGIDS, CATID: CATID, CHKREVPAR: CHKREVPAR, CHKCOMPLHU: CHKCOMPLHU,
                    CHKDAYUSE: CHKDAYUSE, J15_IND: J15_IND, CHKDAYTP: CHKDAYTP, CHKNT: CHKNT, CHKREV: CHKREV, CHKARR: CHKARR, CHKOTHREV: CHKOTHREV,
                    CHKPAX: CHKPAX, CHKLSTYR: vChkLstYr, V24_IND: V24_IND, AGENTIDS: AGENTIDS, COMPIDS: COMPIDS, SuppressZero: chkSuppZero
                });

                var Currfrmt = $("#CURRENCY_FORMAT").val();
                var CurrDelimit = $("#CURRENCY_DELIMIT").val();
                var CurrDecimal = $("#CURRENCY_DECIMLIMIT").val();

                $.ajax({
                    type: "POST",
                    contentType: "application/json",
                    accepts: "application/json",
                    dataType: "json",
                    url: "/Reports/fnRptFoContrAalysis",
                    cache: false,
                    async: true,
                    charset: 'utf-8',
                    data: param,
                    success: function (data) {

                        if (data != "") {
                            var rowDatad = JSON.parse(data);
                            
                            if (REPTYPE == "1") {
                                vGridTotData = rowDatad.GridOpp;
                                $$("gridRpt").clearAll();
                                $$("gridRpt").parse(rowDatad.GridOpp);
                                $$("gridRpt").filter(function (obj) {
                                    return !(obj.CLR == "GrpTotGrnd");
                                });
                            }
                            else if (REPTYPE == "2") {
                                vGridTotData = rowDatad.GridOpp;
                                $$("gridRptMnth").clearAll();
                                $$("gridRptMnth").parse(rowDatad.GridOpp);
                                $$("gridRptMnth").filter(function (obj) {
                                    return !(obj.CLR == "GrpTotBtm");
                                });
                            }
                            else if (REPTYPE == "3") {
                                $$("gridRptDet").clearAll();
                                $$("gridRptDet").parse(rowDatad.dtDetail);
                                $$("gridRptDet").group({
                                    by: "ID",
                                    row: function (obj) {                                       
                                        return obj.ID;
                                    },
                                    missing: "Other",

                                    map: {                                        
                                        //hidden: ["true", "string"],
                                        REGNO : ["ID"]
                                    },

                                    footer: {
                                        RNIGHT: ["RNIGHT", "sum"],
                                        DPAX: ["DPAX", "sum"],
                                        REV: ["REV", "sum"],
                                        DARR: ["DARR", getADR],
                                        DARP: ["DARP", getARP],
                                        DTARPLAN: ["DTARPLAN", "sum"],
                                        DPLAN: ["DPLAN", "sum"],
                                        DADULT: ["DADULT", "sum"],
                                        DCHILD: ["DCHILD", "sum"],
                                        DPKGREV: ["DPKGREV", "sum"],
                                        DEXTREV: ["DEXTREV", "sum"],
                                        GST: ["Total", "string"],
                                        CLR: ["GrpTot1", "string"],
                                        $css: ["GrpTot1", "string"]
                                    }
                                });
                                $$("gridRptDet").openAll();                                
                                                            
                            }

                        }

                    },
                    error: function (err) {
                        $("#LoadDIv").hide();
                    },
                    complete: function () {

                        $("#LoadDIv").hide();
                    }
                });
            };           
            function formatDate(StrDt) {
                //
                var Parts = StrDt.split(" ");
                var MN = FnRetMonth(Parts[0]);
                var YR = Parts[1];
                var Str = "01" + "/" + MN + "/" + YR;
                return Str;
            };
            function FnRetMonth(StrMnNm) {
                //
                var UStr = StrMnNm.toUpperCase();
                var str = "";

                switch (UStr) {
                    case "JAN": str = "01"; break;
                    case "FEB": str = "02"; break;
                    case "MAR": str = "03"; break;
                    case "APR": str = "04"; break;
                    case "MAY": str = "05"; break;
                    case "JUN": str = "06"; break;
                    case "JUL": str = "07"; break;
                    case "AUG": str = "08"; break;
                    case "SEP": str = "09"; break;
                    case "OCT": str = "10"; break;
                    case "NOV": str = "11"; break;
                    case "DEC": str = "12"; break;
                }

                return str;
            };

            function FnRetMonth1(intMn) {
                //

                var str = "";

                switch (intMn) {
                    case 1: str = "Jan"; break;
                    case 2: str = "Feb"; break;
                    case 3: str = "Mar"; break;
                    case 4: str = "Apr"; break;
                    case 5: str = "May"; break;
                    case 6: str = "Jun"; break;
                    case 7: str = "Jul"; break;
                    case 8: str = "Aug"; break;
                    case 9: str = "Sep"; break;
                    case 10: str = "Oct"; break;
                    case 11: str = "Nov"; break;
                    case 12: str = "Dec"; break;
                }

                return str;
            };

            function getADR(prop, data){
                debugger;
                if (!data.length) return 0;
                var TotRms = 0;
                var TotRev = 0;
                var TotAdr = 0;
                for (var i = data.length - 1; i >= 0; i--) {
                    var Night = parseFloat(data[i]["RNIGHT"] == null || data[i]["RNIGHT"].toString().trim() == "" ? "0": data[i]["RNIGHT"].toString().trim());
                    TotRms += Night;
                };
                for (var i = data.length - 1; i >= 0; i--) {
                    var Rev = parseFloat(data[i]["REV"] == null || data[i]["REV"].toString().trim() == "" ? "0": data[i]["REV"].toString().trim());
                    TotRev += Rev;
                };
                if(TotRms != 0 && TotRev != 0){
                    TotAdr = parseFloat(TotRev)/parseFloat(TotRms);
                }

                return fnCurrFormat(TotAdr);
            };

            function getARP(prop, data){
                debugger;
                if (!data.length) return 0;
                var TotRms = 0;
                var TotRev = 0;
                var TotAdr = 0;
                for (var i = data.length - 1; i >= 0; i--) {
                    var Night = parseFloat(data[i]["DPAX"] == null || data[i]["DPAX"].toString().trim() == "" ? "0": data[i]["DPAX"].toString().trim());
                    TotRms += Night;
                };
                for (var i = data.length - 1; i >= 0; i--) {
                    var Rev = parseFloat(data[i]["REV"] == null || data[i]["REV"].toString().trim() == "" ? "0": data[i]["REV"].toString().trim());
                    TotRev += Rev;
                };
                if(TotRms != 0 && TotRev != 0){
                    TotAdr = parseFloat(TotRev)/parseFloat(TotRms);
                }

                return fnCurrFormat(TotAdr);
            };

            function ExcelFormat(obj) {
                debugger;
                return //"#,##0.00",
            };
            function fnHeader() {
                debugger;
                $$("gridRptMnth").destructor();
                GridDesign1();
                gridResize();
                var bSucc = 0;
                if ($$("ChkDayws").getValue() == 0 && $$("ChkMonthws").getValue() == 0 && $$("ChkQuartws").getValue() == 0) return;
                if ($$("ChkDayws").getValue() == 0) bSucc = SMFromDateChange();
                else bSucc = SMFromMnthChange();
                if (bSucc == 0) return;

                var Currfrmt = $("#CURRENCY_FORMAT").val();
                var CurrDelimit = $("#CURRENCY_DELIMIT").val();
                var CurrDecimal = $("#CURRENCY_DECIMLIMIT").val();
                ClearGrid();
                var vColumn = $$("gridRptMnth").config.columns;
                vColumn.splice(2, vColumn.length);

                $$("gridRptMnth").config.columns[0].header = $$("ddlSeg").getText();
                $$("gridRptMnth").refreshColumns();

                var CHKNT = $("#CHK_NT").val();
                var CHKREV = $("#CHK_REV").val();
                var CHKARR = $("#CHK_ARR").val();
                var CHKOTHREV = $("#CHK_OTHREV").val();
                var CHKPAX = $("#CHK_PAX").val();
                var vFooter = [];
                var vFooter1 = [];
               

                if (CHKNT == "1") {
                    var set = { content: "totalRoom"};
                    vFooter.push(set);
                    var set1 = { text: "Nights", height: 22, css: "LeftAlign" };
                    vFooter1.push(set1);
                }
                if (CHKREV == "1") {
                    var set = { content: "totalRev"};
                    vFooter.push(set);
                    var set1 = { text: "Revenue", height: 22, css: "LeftAlign" };
                    vFooter1.push(set1);
                }
                if (CHKARR == "1") {
                    var set = { content: "totalAdr"};
                    vFooter.push(set);
                    var set1 = { text: "ADR", height: 22, css: "LeftAlign" };
                    vFooter1.push(set1);
                }
                if (CHKOTHREV == "1") {
                    var set = { content: "totalOthRev"};
                    vFooter.push(set);
                    var set1 = { text: "Other Revenue", height: 22, css: "LeftAlign" };
                    vFooter1.push(set1);
                }

                if (CHKPAX == "1") {
                    var set = { content: "totalPax"};
                    vFooter.push(set);
                    var set1 = { text: "Pax", height: 22, css: "LeftAlign" };
                    vFooter1.push(set1);
                }

                var vColConfig = $$("gridRptMnth").getColumnConfig("TYPE");
                vColConfig.footer = vFooter1;
                $$("gridRptMnth").refreshColumns();
                $$("gridRptMnth").refresh();

                var vWidth = 100;
                if ($$("ChkDayws").getValue() == 1) {
                    try {
                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Mon" };
                            vFooter.push(set);                            
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Mon" };
                            vFooter.push(set);                            
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Mon" };
                            vFooter.push(set);                            
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Mon" };
                            vFooter.push(set);                            
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Mon" };
                            vFooter.push(set);                            
                        }
                        var set = {
                            id: "Mon", header: "Mon", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number", 
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);
                       
                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Tue" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Tue" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Tue" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Tue" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Tue" };
                            vFooter.push(set);
                        }

                        var set = {
                            id: "Tue", header: "Tue", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",
                            exportFormat: function (val) {
                            },
                            footer: vFooter,

                        };
                        vColumn.push(set);

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Wed" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Wed" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Wed" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Wed" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Wed" };
                            vFooter.push(set);
                        }
                        
                        var set = {
                            id: "Wed", header: "Wed", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Thu" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Thu" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Thu" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Thu" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Thu" };
                            vFooter.push(set);
                        }
                        
                        var set = {
                            id: "Thu", header: "Thu", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Fri" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Fri" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Fri" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Fri" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Fri" };
                            vFooter.push(set);
                        }
                        
                        var set = {
                            id: "Fri", header: "Fri", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Sat" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Sat" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Sat" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Sat" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Sat" };
                            vFooter.push(set);
                        }
                        
                        var set = {
                            id: "Sat", header: "Sat", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Sun" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Sun" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Sun" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Sun" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Sun" };
                            vFooter.push(set);
                        }

                        var set = {
                            id: "Sun", header: "Sun", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Total" };
                            vFooter.push(set);
                        }

                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Total" };
                            vFooter.push(set);
                        }
                        
                        var set = {
                            id: "Total", header: "Total", width: vWidth, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number", 
                            exportFormat: function (val) {
                            },
                            footer: vFooter,
                        };
                        vColumn.push(set);
                        $$("gridRptMnth").refreshColumns();
                        $$("gridRptMnth").refresh();

                    }
                    catch (e) {
                        console.log(e.message)
                    }
                }
                else if ($$("ChkMonthws").getValue() == 1) {
                    try {
                        var frmdate = $$("FromMthDate").getValue();
                        var todate = $$("ToMthDate").getValue();
                        var vCmpId = $$("Property").getValue();
                        var vChkLstYr = $$("ChkLstYr").getValue();
                        //
                        frmdate = formatDate(frmdate);
                        todate = formatDate(todate);
                        $.ajax({
                            async: false,
                            type: "POST",
                            url: "/Reports/fnGetMonthBetwnDt",
                            data: "CmpId=" + vCmpId + "&frmdate=" + frmdate + "&todate=" + todate + "&ChkLstYr=" + vChkLstYr,
                            success: function (d) {
                                //
                                rowData = JSON.parse(d);
                                if (rowData.length > 0) {
                                    $.each(rowData, function (key, value) {
                                        //
                                        var Hdr = value.MNTH_NM.toString().replace("_", " ");
                                        vFooter = [];
                                        if (CHKNT == "1") {
                                            var set = { content: "totalRoom", columnId: Hdr };
                                            vFooter.push(set);
                                        }
                                        if (CHKREV == "1") {
                                            var set = { content: "totalRev", columnId: Hdr };
                                            vFooter.push(set);
                                        }
                                        if (CHKARR == "1") {
                                            var set = { content: "totalAdr", columnId: Hdr };
                                            vFooter.push(set);
                                        }
                                        if (CHKOTHREV == "1") {
                                            var set = { content: "totalOthRev", columnId: Hdr };
                                            vFooter.push(set);
                                        }

                                        if (CHKPAX == "1") {
                                            var set = { content: "totalPax", columnId: Hdr };
                                            vFooter.push(set);
                                        }

                                        
                                        var vCss = "";
                                        var vWidth = 100;
                                        if (value.MTYPE == "1") {
                                            var set = {
                                                id: $.trim(value.MNTH_ID), header: Hdr, minWidth: vWidth,fillspace:1.1, css: { 'text-align': 'right ! important' },
                                                template: function (obj, common, value, config) {
                                                    //
                                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                                    }
                                                    else return value;

                                                },
                                                exportType: "number",   
                                                exportFormat: function (val) {
                                                },
                                                footer:vFooter
                                            };
                                            vColumn.push(set);
                                        }
                                        else {
                                            var set = {
                                                id: $.trim(value.MNTH_ID), header: { text: Hdr, css: "LstYrHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                                template: function (obj, common, value, config) {
                                                    //
                                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                                    }
                                                    else return value;

                                                },
                                                exportType: "number", 
                                                exportFormat: function (val) {
                                                },
                                                footer: vFooter
                                            };
                                            vColumn.push(set);
                                            if ($$("ChkVar").getValue() == "1") {
                                                vFooter = [];
                                                if (CHKNT == "1") {
                                                    var set = { content: "totalRoomVar", columnId: "VAR#" + $.trim(value.MNTH_ID) };
                                                    vFooter.push(set);
                                                }
                                                if (CHKREV == "1") {
                                                    var set = { content: "totalRevVar", columnId: "VAR#" + $.trim(value.MNTH_ID) };
                                                    vFooter.push(set);
                                                }
                                                if (CHKARR == "1") {
                                                    var set = { content: "totalAdrVar", columnId: "VAR#" + $.trim(value.MNTH_ID) };
                                                    vFooter.push(set);
                                                }
                                                if (CHKOTHREV == "1") {
                                                    var set = { content: "totalOthRevVar", columnId: "VAR#" + $.trim(value.MNTH_ID) };
                                                    vFooter.push(set);
                                                }

                                                if (CHKPAX == "1") {
                                                    var set = { content: "totalPaxVar", columnId: "VAR#" + $.trim(value.MNTH_ID) };
                                                    vFooter.push(set);
                                                }

                                                var set = {
                                                    id: "VAR#" + $.trim(value.MNTH_ID), header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                                    template: function (obj, common, value, config) {
                                                        //debugger;
                                                        var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                                        var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                                        var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                                        if (Val1 != "" || Val2 != "") {
                                                            Val1 = Val1 == "" ? 0 : Val1;
                                                            Val2 = Val2 == "" ? 0 : Val2;
                                                            value = parseFloat(Val1) - parseFloat(Val2);
                                                            obj[config.id] = value;
                                                            $$("gridRptMnth").updateItem(obj.id, obj);

                                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                                            }
                                                            else return value;
                                                        }
                                                        else return value;
                                                    },
                                                    exportType: "number", 
                                                    exportFormat: function (val) {
                                                    },
                                                    footer: vFooter
                                                };
                                                vColumn.push(set);
                                            }

                                        }
                                        
                                    });
                                    
                                    vFooter = [];
                                    if (CHKNT == "1") {
                                        var set = { content: "totalRoom", columnId: "Total" };
                                        vFooter.push(set);
                                    }
                                    if (CHKREV == "1") {
                                        var set = { content: "totalRev", columnId: "Total" };
                                        vFooter.push(set);
                                    }
                                    if (CHKARR == "1") {
                                        var set = { content: "totalAdr", columnId: "Total" };
                                        vFooter.push(set);
                                    }
                                    if (CHKOTHREV == "1") {
                                        var set = { content: "totalOthRev", columnId: "Total" };
                                        vFooter.push(set);
                                    }

                                    if (CHKPAX == "1") {
                                        var set = { content: "totalPax", columnId: "Total" };
                                        vFooter.push(set);
                                    }
                                    var set = {
                                        id: "Total", header: "Total", minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                        template: function (obj, common, value, config) {
                                            //
                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                            }
                                            else return value;

                                        },
                                        exportType: "number",  
                                        exportFormat: function (val) {
                                        },
                                        footer: vFooter
                                    };
                                    vColumn.push(set);

                                    if (vChkLstYr == "1") {
                                        vFooter = [];
                                        if (CHKNT == "1") {
                                            var set = { content: "totalRoom", columnId: "PrvTotal" };
                                            vFooter.push(set);
                                        }
                                        if (CHKREV == "1") {
                                            var set = { content: "totalRev", columnId: "PrvTotal" };
                                            vFooter.push(set);
                                        }
                                        if (CHKARR == "1") {
                                            var set = { content: "totalAdr", columnId: "PrvTotal" };
                                            vFooter.push(set);
                                        }
                                        if (CHKOTHREV == "1") {
                                            var set = { content: "totalOthRev", columnId: "PrvTotal" };
                                            vFooter.push(set);
                                        }

                                        if (CHKPAX == "1") {
                                            var set = { content: "totalPax", columnId: "PrvTotal" };
                                            vFooter.push(set);
                                        }
                                        var set = {
                                            id: "PrvTotal", header: [{ text: "Total", css: "LstYrHdr" }], minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right !important;' },
                                            template: function (obj, common, value, config) {
                                                //
                                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                                }
                                                else return value;

                                            },
                                            exportType: "number",  
                                            exportFormat: function (val) {
                                            },
                                            footer: vFooter
                                        };
                                        vColumn.push(set);

                                        if ($$("ChkVar").getValue() == "1") {
                                            vFooter = [];
                                            if (CHKNT == "1") {
                                                var set = { content: "totalRoomVar", columnId: "VAR#" + "PrvTotal" };
                                                vFooter.push(set);
                                            }
                                            if (CHKREV == "1") {
                                                var set = { content: "totalRevVar", columnId: "VAR#" + "PrvTotal" };
                                                vFooter.push(set);
                                            }
                                            if (CHKARR == "1") {
                                                var set = { content: "totalAdrVar", columnId: "VAR#" + "PrvTotal" };
                                                vFooter.push(set);
                                            }
                                            if (CHKOTHREV == "1") {
                                                var set = { content: "totalOthRevVar", columnId: "VAR#" + "PrvTotal" };
                                                vFooter.push(set);
                                            }

                                            if (CHKPAX == "1") {
                                                var set = { content: "totalPaxVar", columnId: "VAR#" + "PrvTotal" };
                                                vFooter.push(set);
                                            }

                                            var set = {
                                                id: "VAR#" + "PrvTotal", header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                                template: function (obj, common, value, config) {
                                                    //debugger;
                                                    var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                                    var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                                    var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                                    var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                                    var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                                    if (Val1 != "" || Val2 != "") {
                                                        Val1 = Val1 == "" ? 0 : Val1;
                                                        Val2 = Val2 == "" ? 0 : Val2;
                                                        value = parseFloat(Val1) - parseFloat(Val2);
                                                        obj[config.id] = value;
                                                        $$("gridRptMnth").updateItem(obj.id, obj);

                                                        if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                            return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                                        }
                                                        else return value;
                                                    }
                                                    else return value;
                                                },
                                                exportType: "number", 
                                                exportFormat: function (val) {
                                                },
                                                footer: vFooter
                                            };
                                            vColumn.push(set);
                                        }


                                    }

                                    $$("gridRptMnth").refreshColumns();
                                }
                            }
                        });
                    }
                    catch (e) {
                        console.log(e.message)
                    }
                }
                else if ($$("ChkQuartws").getValue() == 1) {
                    vWidth = 120;                    
                    var vChkLstYr = $$("ChkLstYr").getValue();
                    if (vChkLstYr == "1") vWidth = 100;
                    try {

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "1" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "1" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "1" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "1" };
                            vFooter.push(set);
                        }
                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "1" };
                            vFooter.push(set);
                        }

                        var set = {
                            id: "1", header: "1st Quarter", minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number", 
                            exportFormat: function (val) {
                            },
                            footer: vFooter
                        };
                        vColumn.push(set);
                        

                        if (vChkLstYr == "1") {
                            vFooter = [];
                            if (CHKNT == "1") {
                                var set = { content: "totalRoom", columnId: "5" };
                                vFooter.push(set);
                            }
                            if (CHKREV == "1") {
                                var set = { content: "totalRev", columnId: "5" };
                                vFooter.push(set);
                            }
                            if (CHKARR == "1") {
                                var set = { content: "totalAdr", columnId: "5" };
                                vFooter.push(set);
                            }
                            if (CHKOTHREV == "1") {
                                var set = { content: "totalOthRev", columnId: "5" };
                                vFooter.push(set);
                            }
                            if (CHKPAX == "1") {
                                var set = { content: "totalPax", columnId: "5" };
                                vFooter.push(set);
                            }
                            var set = {
                                id: "5", header: [{ text: "1st Quarter", css: "LstYrHdr" }], minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important;', },
                                template: function (obj, common, value, config) {
                                    //
                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                    }
                                    else return value;

                                },
                                exportType: "number", 
                                exportFormat: function (val) {
                                },
                                footer: vFooter
                            };
                            vColumn.push(set);

                            if ($$("ChkVar").getValue() == "1") {
                                vFooter = [];
                                if (CHKNT == "1") {
                                    var set = { content: "totalRoomVar", columnId: "VAR#5" };
                                    vFooter.push(set);
                                }
                                if (CHKREV == "1") {
                                    var set = { content: "totalRevVar", columnId: "VAR#5"};
                                    vFooter.push(set);
                                }
                                if (CHKARR == "1") {
                                    var set = { content: "totalAdrVar", columnId: "VAR#5"};
                                    vFooter.push(set);
                                }
                                if (CHKOTHREV == "1") {
                                    var set = { content: "totalOthRevVar", columnId: "VAR#5"};
                                    vFooter.push(set);
                                }

                                if (CHKPAX == "1") {
                                    var set = { content: "totalPaxVar", columnId: "VAR#5"};
                                    vFooter.push(set);
                                }

                                var set = {
                                    id: "VAR#" + "5", header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                    template: function (obj, common, value, config) {
                                        //debugger;
                                        var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                        var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                        var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                        if (Val1 != "" || Val2 != "") {
                                            Val1 = Val1 == "" ? 0 : Val1;
                                            Val2 = Val2 == "" ? 0 : Val2;
                                            value = parseFloat(Val1) - parseFloat(Val2);
                                            obj[config.id] = value;
                                            $$("gridRptMnth").updateItem(obj.id, obj);

                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                            }
                                            else return value;
                                        }
                                        else return value;
                                    },
                                    exportType: "number",  
                                    exportFormat: function (val) {
                                    },
                                    footer: vFooter
                                };
                                vColumn.push(set);
                            }
                        }
                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "2" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "2" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "2" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "2" };
                            vFooter.push(set);
                        }
                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "2" };
                            vFooter.push(set);
                        }

                        var set = {
                            id: "2", header: "2nd Quarter", minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter

                        };
                        vColumn.push(set);                                              

                        if (vChkLstYr == "1") {
                            vFooter = [];
                            if (CHKNT == "1") {
                                var set = { content: "totalRoom", columnId: "6" };
                                vFooter.push(set);
                            }
                            if (CHKREV == "1") {
                                var set = { content: "totalRev", columnId: "6" };
                                vFooter.push(set);
                            }
                            if (CHKARR == "1") {
                                var set = { content: "totalAdr", columnId: "6" };
                                vFooter.push(set);
                            }
                            if (CHKOTHREV == "1") {
                                var set = { content: "totalOthRev", columnId: "6" };
                                vFooter.push(set);
                            }
                            if (CHKPAX == "1") {
                                var set = { content: "totalPax", columnId: "6" };
                                vFooter.push(set);
                            }
                            var set = {
                                id: "6", header: [{ text: "2nd Quarter", css: "LstYrHdr" }], minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important;' },
                                template: function (obj, common, value, config) {
                                    //
                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                    }
                                    else return value;

                                },
                                exportType: "number", 
                                exportFormat: function (val) {
                                },
                                footer: vFooter
                            };
                            vColumn.push(set);
                            if ($$("ChkVar").getValue() == "1") {
                                vFooter = [];
                                if (CHKNT == "1") {
                                    var set = { content: "totalRoomVar", columnId: "VAR#6" };
                                    vFooter.push(set);
                                }
                                if (CHKREV == "1") {
                                    var set = { content: "totalRevVar", columnId: "VAR#6" };
                                    vFooter.push(set);
                                }
                                if (CHKARR == "1") {
                                    var set = { content: "totalAdrVar", columnId: "VAR#6" };
                                    vFooter.push(set);
                                }
                                if (CHKOTHREV == "1") {
                                    var set = { content: "totalOthRevVar", columnId: "VAR#6" };
                                    vFooter.push(set);
                                }

                                if (CHKPAX == "1") {
                                    var set = { content: "totalPaxVar", columnId: "VAR#6"};
                                    vFooter.push(set);
                                }

                                var set = {
                                    id: "VAR#" + "6", header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                    template: function (obj, common, value, config) {
                                        //debugger;
                                        var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                        var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                        var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                        if (Val1 != "" || Val2 != "") {
                                            Val1 = Val1 == "" ? 0 : Val1;
                                            Val2 = Val2 == "" ? 0 : Val2;
                                            value = parseFloat(Val1) - parseFloat(Val2);
                                            obj[config.id] = value;
                                            $$("gridRptMnth").updateItem(obj.id, obj);

                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                            }
                                            else return value;
                                        }
                                        else return value;
                                    },
                                    exportType: "number",    
                                    exportFormat: function (val) {
                                    },
                                    footer: vFooter
                                };
                                vColumn.push(set);
                            }

                        }
                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "3" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "3" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "3" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "3" };
                            vFooter.push(set);
                        }
                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "3" };
                            vFooter.push(set);
                        }

                        var set = {
                            id: "3", header: "3rd Quarter", minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",  
                            exportFormat: function (val) {
                            },
                            footer: vFooter
                        };
                        vColumn.push(set);


                        if (vChkLstYr == "1") {
                            vFooter = [];
                            if (CHKNT == "1") {
                                var set = { content: "totalRoom", columnId: "7" };
                                vFooter.push(set);
                            }
                            if (CHKREV == "1") {
                                var set = { content: "totalRev", columnId: "7" };
                                vFooter.push(set);
                            }
                            if (CHKARR == "1") {
                                var set = { content: "totalAdr", columnId: "7" };
                                vFooter.push(set);
                            }
                            if (CHKOTHREV == "1") {
                                var set = { content: "totalOthRev", columnId: "7" };
                                vFooter.push(set);
                            }
                            if (CHKPAX == "1") {
                                var set = { content: "totalPax", columnId: "7" };
                                vFooter.push(set);
                            }
                            var set = {
                                id: "7", header: { text: "3rd Quarter", css: "LstYrHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right !important;' },
                                template: function (obj, common, value, config) {
                                    //
                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                    }
                                    else return value;

                                },
                                exportType: "number",  
                                exportFormat: function (val) {
                                },
                                footer: vFooter
                            };
                            vColumn.push(set);

                            if ($$("ChkVar").getValue() == "1") {
                                vFooter = [];
                                if (CHKNT == "1") {
                                    var set = { content: "totalRoomVar", columnId: "VAR#7" };
                                    vFooter.push(set);
                                }
                                if (CHKREV == "1") {
                                    var set = { content: "totalRevVar", columnId: "VAR#7" };
                                    vFooter.push(set);
                                }
                                if (CHKARR == "1") {
                                    var set = { content: "totalAdrVar", columnId: "VAR#7" };
                                    vFooter.push(set);
                                }
                                if (CHKOTHREV == "1") {
                                    var set = { content: "totalOthRevVar", columnId: "VAR#7" };
                                    vFooter.push(set);
                                }

                                if (CHKPAX == "1") {
                                    var set = { content: "totalPaxVar", columnId: "VAR#7" };
                                    vFooter.push(set);
                                }

                                var set = {
                                    id: "VAR#" + "7", header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                    template: function (obj, common, value, config) {
                                        //debugger;
                                        var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                        var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                        var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                        if (Val1 != "" || Val2 != "") {
                                            Val1 = Val1 == "" ? 0 : Val1;
                                            Val2 = Val2 == "" ? 0 : Val2;
                                            value = parseFloat(Val1) - parseFloat(Val2);
                                            obj[config.id] = value;
                                            $$("gridRptMnth").updateItem(obj.id, obj);

                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                            }
                                            else return value;
                                        }
                                        else return value;
                                    },
                                    exportType: "number", 
                                    exportFormat: function (val) {
                                    },
                                    footer: vFooter
                                };
                                vColumn.push(set);
                            }

                        }

                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "4" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "4" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "4" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "4" };
                            vFooter.push(set);
                        }
                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "4" };
                            vFooter.push(set);
                        }
                        var set = {
                            id: "4", header: { text: "4th Quarter" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right !important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",
                            exportFormat: function (val) {
                            },
                            footer: vFooter
                        };
                        vColumn.push(set);

                        if (vChkLstYr == "1") {
                            vFooter = [];
                            if (CHKNT == "1") {
                                var set = { content: "totalRoom", columnId: "8" };
                                vFooter.push(set);
                            }
                            if (CHKREV == "1") {
                                var set = { content: "totalRev", columnId: "8" };
                                vFooter.push(set);
                            }
                            if (CHKARR == "1") {
                                var set = { content: "totalAdr", columnId: "8" };
                                vFooter.push(set);
                            }
                            if (CHKOTHREV == "1") {
                                var set = { content: "totalOthRev", columnId: "8" };
                                vFooter.push(set);
                            }
                            if (CHKPAX == "1") {
                                var set = { content: "totalPax", columnId: "8" };
                                vFooter.push(set);
                            }
                            var set = {
                                id: "8", header: [{ text: "4th Quarter", css: "LstYrHdr" }], minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right !important;' },
                                template: function (obj, common, value, config) {
                                    //
                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                    }
                                    else return value;

                                },
                                exportType: "number",  
                                exportFormat: function (val) {
                                },
                                footer: vFooter
                            };
                            vColumn.push(set);

                            if ($$("ChkVar").getValue() == "1") {
                                vFooter = [];
                                if (CHKNT == "1") {
                                    var set = { content: "totalRoomVar", columnId: "VAR#8" };
                                    vFooter.push(set);
                                }
                                if (CHKREV == "1") {
                                    var set = { content: "totalRevVar", columnId: "VAR#8" };
                                    vFooter.push(set);
                                }
                                if (CHKARR == "1") {
                                    var set = { content: "totalAdrVar", columnId: "VAR#8" };
                                    vFooter.push(set);
                                }
                                if (CHKOTHREV == "1") {
                                    var set = { content: "totalOthRevVar", columnId: "VAR#8" };
                                    vFooter.push(set);
                                }

                                if (CHKPAX == "1") {
                                    var set = { content: "totalPaxVar", columnId: "VAR#8" };
                                    vFooter.push(set);
                                }

                                var set = {
                                    id: "VAR#" + "8", header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                    template: function (obj, common, value, config) {
                                        //debugger;
                                        var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                        var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                        var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                        if (Val1 != "" || Val2 != "") {
                                            Val1 = Val1 == "" ? 0 : Val1;
                                            Val2 = Val2 == "" ? 0 : Val2;
                                            value = parseFloat(Val1) - parseFloat(Val2);
                                            obj[config.id] = value;
                                            $$("gridRptMnth").updateItem(obj.id, obj);

                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                            }
                                            else return value;
                                        }
                                        else return value;
                                    },
                                    exportType: "number",   
                                    exportFormat: function (val) {
                                    },
                                    footer: vFooter
                                };
                                vColumn.push(set);
                            }

                        }
                        vFooter = [];
                        if (CHKNT == "1") {
                            var set = { content: "totalRoom", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKREV == "1") {
                            var set = { content: "totalRev", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKARR == "1") {
                            var set = { content: "totalAdr", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKOTHREV == "1") {
                            var set = { content: "totalOthRev", columnId: "Total" };
                            vFooter.push(set);
                        }
                        if (CHKPAX == "1") {
                            var set = { content: "totalPax", columnId: "Total" };
                            vFooter.push(set);
                        }
                        var set = {
                            id: "Total", header: "Total", minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                            template: function (obj, common, value, config) {
                                //
                                if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                    return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                }
                                else return value;

                            },
                            exportType: "number",    
                            exportFormat: function (val) {
                            },
                            footer: vFooter
                        };
                        vColumn.push(set);
                        if (vChkLstYr == "1") {
                            vFooter = [];
                            if (CHKNT == "1") {
                                var set = { content: "totalRoom", columnId: "PrvTotal" };
                                vFooter.push(set);
                            }
                            if (CHKREV == "1") {
                                var set = { content: "totalRev", columnId: "PrvTotal" };
                                vFooter.push(set);
                            }
                            if (CHKARR == "1") {
                                var set = { content: "totalAdr", columnId: "PrvTotal" };
                                vFooter.push(set);
                            }
                            if (CHKOTHREV == "1") {
                                var set = { content: "totalOthRev", columnId: "PrvTotal" };
                                vFooter.push(set);
                            }
                            if (CHKPAX == "1") {
                                var set = { content: "totalPax", columnId: "PrvTotal" };
                                vFooter.push(set);
                            }
                            var set = {
                                id: "PrvTotal", header: [{ text: "Total", css: "LstYrHdr" }], minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right !important;' },
                                template: function (obj, common, value, config) {
                                    //
                                    if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                        return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                    }
                                    else return value;

                                },
                                exportType: "number",   
                                exportFormat: function (val) {
                                },
                                footer: vFooter
                            };
                            vColumn.push(set);

                            if ($$("ChkVar").getValue() == "1") {
                                vFooter = [];
                                if (CHKNT == "1") {
                                    var set = { content: "totalRoomVar", columnId: "VAR#PrvTotal" };
                                    vFooter.push(set);
                                }
                                if (CHKREV == "1") {
                                    var set = { content: "totalRevVar", columnId: "VAR#PrvTotal" };
                                    vFooter.push(set);
                                }
                                if (CHKARR == "1") {
                                    var set = { content: "totalAdrVar", columnId: "VAR#PrvTotal" };
                                    vFooter.push(set);
                                }
                                if (CHKOTHREV == "1") {
                                    var set = { content: "totalOthRevVar", columnId: "VAR#PrvTotal" };
                                    vFooter.push(set);
                                }

                                if (CHKPAX == "1") {
                                    var set = { content: "totalPaxVar", columnId: "VAR#PrvTotal" };
                                    vFooter.push(set);
                                }

                                var set = {
                                    id: "VAR#PrvTotal" , header: { text: "Variance", css: "VarHdr" }, minWidth: vWidth, fillspace: 1.1, css: { 'text-align': 'right ! important' },
                                    template: function (obj, common, value, config) {
                                        //debugger;
                                        var ColIndex = $$("gridRptMnth").getColumnIndex(config.id)
                                        var PrvColId1 = $$("gridRptMnth").config.columns[ColIndex - 2].id
                                        var PrvColId2 = $$("gridRptMnth").config.columns[ColIndex - 1].id

                                        var Val1 = obj[PrvColId1] == null ? "" : obj[PrvColId1].toString().trim();
                                        var Val2 = obj[PrvColId2] == null ? "" : obj[PrvColId2].toString().trim();

                                        if (Val1 != "" || Val2 != "") {
                                            Val1 = Val1 == "" ? 0 : Val1;
                                            Val2 = Val2 == "" ? 0 : Val2;
                                            value = parseFloat(Val1) - parseFloat(Val2);
                                            obj[config.id] = value;
                                            $$("gridRptMnth").updateItem(obj.id, obj);

                                            if (obj.TYPEID == "ADR" || obj.TYPEID == "REV" || obj.TYPEID == "OTH") {
                                                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);
                                            }
                                            else return value;
                                        }
                                        else return value;
                                    },
                                    exportType: "number", 
                                    exportFormat: function (val) {
                                    },
                                    footer: vFooter
                                };
                                vColumn.push(set);
                            }

                        }
                        $$("gridRptMnth").refreshColumns();

                    }
                    catch (e) {
                        console.log(e.message)
                    }
                }
               

            };          
            
            function SMToDateChange(e) {               //

                var frmdate = $$("FromDt").getText();
                var todate = $$("ToDt").getText();
                var sFrmDt = $$("ToDt").getText();
                var vAccDt = $("#HdnAccDt").val();

                var bSucc = "1";

                if (frmdate == "") {
                    webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }


                if (todate == "") {
                    webix.message("To Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }

                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {

                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("ToMthDate").setValue(FrmMnth);
                            var vToDt = formatDate1(sFrmDt);
                            $$("FromDt").setValue(vToDt);
                            //bSucc = "0";
                        }
                    }
                });


                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + todate + "&T=" + vAccDt,
                    success: function (data) {
                        if (data.d != "") {

                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("FromDt").setValue(vAccDt);
                            var vFromDt = formatDate1(vAccDt);
                            $$("ToDt").setValue(vFromDt);


                            //bSucc = "0";
                        }
                    }
                });



                return bSucc;
            };

            function fnDateConvertCommonFo(StrDt, InputType, RetType) {
                //InputType dd/mm/yyyy - "103", mm/dd/yyyy - "101", dd-mm-yyyy - "105", mm-dd-yyyy - "110", yyyy/mm/dd - "111",yyyy-mm-dd - "21".
                //RetType dd/mm/yyyy - "103", mm/dd/yyyy - "101", dd-mm-yyyy - "105",mm-dd-yyyy - "110", yyyy/mm/dd - "111",yyyy-mm-dd - "21",yyyymmdd - "112"
                if(StrDt == null || StrDt == undefined || StrDt == "") return "";
                var Str = ""
                try{                
                    var Parts = ""; var Dt = ""; var Mn = ""; var Yr = "";
                    
                    StrDt = StrDt || "";
                    InputType = InputType || "";
                    if (StrDt == "") return "";
                    if (InputType == "") InputType = "1";    
                    if (InputType == "103") {
                        Parts = StrDt.split("/");
                        Dt = Parts[0];
                        Mn = Parts[1];
                        Yr = Parts[2];
                    }
                    else if (InputType == "101") {
                        Parts = StrDt.split("/");
                        Mn = Parts[0];
                        Dt = Parts[1];
                        Yr = Parts[2];
                    }
                    else if (InputType == "105") {
                        Parts = StrDt.split("-");
                        Dt = Parts[0];
                        Mn = Parts[1];
                        Yr = Parts[2];
                    }
                    else if (InputType == "110") {
                        Parts = StrDt.split("-");
                        Mn = Parts[0];
                        Dt = Parts[1];
                        Yr = Parts[2];
                    }
                    else if (InputType == "111") {
                        Parts = StrDt.split("/");
                        Yr = Parts[0];
                        Mn = Parts[1];
                        Dt = Parts[2];
                    }
                    else if (InputType == "21") {
                        Parts = StrDt.split("-");
                        Yr = Parts[0];
                        Mn = Parts[1];
                        Dt = Parts[2];
                    }
                    if (RetType == "103") Str = Dt.toString().trim() + "/" + Mn.toString().trim() + "/" + Yr.toString().trim();
                    else if (RetType == "101") Str = Mn.toString().trim() + "/" + Dt.toString().trim() + "/" + Yr.toString().trim();
                    else if (RetType == "105") Str = Dt.toString().trim() + "-" + Mn.toString().trim() + "-" + Yr.toString().trim();
                    else if (RetType == "110") Str = Mn.toString().trim() + "-" + Dt.toString().trim() + "-" + Yr.toString().trim();
                    else if (RetType == "111") Str = Yr.toString().trim() + "/" + Mn.toString().trim() + "/" + Dt.toString().trim();
                    else if (RetType == "21") Str = Yr.toString().trim() + "-" + Mn.toString().trim() + "-" + Dt.toString().trim();
                    else if (RetType == "112") Str = Yr.toString().trim() + Mn.toString().trim() + Dt.toString().trim();
                    
                }
                catch (e) {
                    debugger;
                    console.log(e.message);
                }
                return Str;
            };


            function SMFromDateChange(e) {

                var frmdate = $$("FromDt").getText();
                var todate = $$("ToDt").getText();
                var sFrmDt = $$("FromDt").getText();
                var vAccDt = $("#HdnAccDt").val();

                var bSucc = "1";

                if (frmdate == "") {
                    webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }


                if (todate == "") {
                    webix.message("To Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }

                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {

                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("ToMthDate").setValue(FrmMnth);
                            var vToDt = formatDate1(sFrmDt);
                            $$("ToDt").setValue(vToDt);
                            //bSucc = "0";
                        }
                    }
                });


                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + vAccDt,
                    success: function (data) {
                        if (data.d != "") {

                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("FromDt").setValue(vAccDt);
                            var vFromDt = formatDate1(vAccDt);
                            $$("FromDt").setValue(vFromDt);


                            //bSucc = "0";
                        }
                    }
                });



                return bSucc;

            };

            function SMFromMnthChange(e) {
                debugger;
                frmdate = $$("FromMthDate").getValue();
                todate = $$("ToMthDate").getValue();
                frmdate = formatDate(frmdate);
                todate = formatDate(todate);
                FrmMnth = $$("FromMthDate").getValue();

                //var myformat = webix.Date.dateToStr("%d/%m/%Y");

                //frmdate = myformat($$("FromMthDate").data.value);
                //todate = myformat($$("ToMthDate").data.value);
                

                var bSucc = "1";

                if (frmdate == "") {
                    webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }


                if (todate == "") {
                    webix.message("To Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }


                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {

                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            $$("ToMthDate").setValue(FrmMnth);
                            //bSucc = "0";
                        }
                    }
                });



                return bSucc;

            };


            function SMToMnthChange(e) {
                debugger;
                frmdate = $$("FromMthDate").getValue();
                todate = $$("ToMthDate").getValue();
                frmdate = formatDate(frmdate);
                todate = formatDate(todate);
                FrmMnth = $$("ToMthDate").getValue();

                var myformat = webix.Date.dateToStr("%d/%m/%Y");

                frmdate = myformat($$("FromMthDate").data.value);
                todate = myformat($$("ToMthDate").data.value);


                var bSucc = "1";

                if (frmdate == "") {
                    webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }


                if (todate == "") {
                    webix.message("To Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return bSucc;
                }


                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {

                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            $$("FromMthDate").setValue(FrmMnth);
                            //bSucc = "0";
                        }
                    }
                });



                return bSucc;

            };

        </script>
    </section>
</div>
