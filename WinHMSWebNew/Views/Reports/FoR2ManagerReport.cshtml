@{
    ViewBag.Title = "Fo Manager Report";
    //Layout = "~/Views/Shared/Layout/Fo_ReportLayout.cshtml";
    //if (ViewBag.VMD == "2") { Layout = "~/Views/Shared/Layout/Fo_ReportLayoutSM.cshtml"; }
    //else { Layout = "~/Views/Shared/Layout/Fo_ReportLayout.cshtml"; }

    Layout = "~/Views/Shared/Layout/Fo_ReportLayout.cshtml";
}

<script src="../../Scripts/xlExport.js"></script>

<div class="content-wrapper">
    <section class=" col-xl-12 col-md-12 col-sm-12 themedes p-0 ">
        <link href="../../Content/Contribute.css" rel="stylesheet" />
        <link href="../../Content/bootstrap-4.4.1-dist/css/bootstrap.min.css" rel="stylesheet" />
        <link href="~/Content/sidemenu-webix.css" rel="stylesheet" />
        <link href="~/FO/CSS/sidemenu-custom.css" rel="stylesheet" />
        <link href="../../Content/xlExportCss.css" rel="stylesheet" />
        
            <div class="container-fluid">

                <div class="row new_hdr" id="divHeader">
                    <div class="col-sm-3">

                        <div class="TextWidth" id="divPropbox">
                        </div>
                    </div>
                    <div class="col-sm-5 text-center">

                        <label class="wc_hdr_tlt" id="lblRptCaption">Manager Report </label>

                    </div>
                    <div class="col-sm-4">
                        <div class="card-tools text-right">
                            <div id="divPrint" class="btnXX"></div>
                            <div id="divExcel" class="btnXX"></div>
                        </div>
                    </div>
                </div>

                <div style="border:solid transparent;" class="row">
                    <div class="col-xl-3 col-md-4 col-lg-3 col-xs-11">
                        <div class="row " style=" line-height:12px ">
                            <span class="control-label" style="color: brown; font-size: 10px !important;padding-left:10px">
                                
                                    Note:<br />
                                    Total Revenue = Room Revenue + Extra Bed
                                    <br />
                                    <label id="lblARR" style="line-height: 2px !important;">ADR = Total Revenue / (Room Sold)</label><br />
                                    ARP = Total Revenue / (Pax Sold)<br />
                                    RevPar = Total Revenue / Total Room
                                </span>
                            </div>
                        </div>

                    <div class="col-xl-2 col-md-3 col-lg-2 col-xs-11">
                        <div id="divchkAdvance"> </div>
                        <div id="divchkRevSumm"> </div>
                    </div>


                    <div class="col-xl-3 col-md-4 col-lg-3 col-xs-11">
                        <div class="row">
                            <div class="col-sm-10 ">
                                <div id="divAsOn"> </div>
                                <div id="divFromDt"> </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-10 ">
                                <div id="divToDt"> </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-2 col-md-3 col-lg-2 col-xs-11" >
                        <div class="row" style="height:22px">
                            <div class="col-sm-12 ">
                                <div id="divchkPeriod"> </div>
                            </div>
                        </div>
                        <div class="row" style="height: 22px">
                            <div class="col-sm-12 ">
                                <div id="divchkLast"> </div>
                            </div>
                        </div>
                        <div class="row" style="height: 22px">
                            <div class="col-sm-12 ">
                                <div id="divchkAPR"> </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-2 col-md-2 col-lg-2 col-xs-11">
                        <div class="row" >                            
                                <button type="button" class="btn btn-sm wc_csticonbtn25" id="btnoptions" title="Options" onclick="btnFilterClick()"><i class="fas fa-filter"></i></button>                            
                        </div>
                        <div class="row" style="height: 22px">
                            <div class="col-sm-12 " style="padding-left: 0px !important;">
                                <div id="divNetRev"> </div>
                            </div>
                        </div>
                    </div>
                </div>                

                <div class="row" >
                    <div class="col-sm-12">
                        <div id="divGrid" style="width: 100%;" ></div>

                    </div>
                </div>

            </div>
            
            <input type="hidden" id="HdnCurrMnth" />
            <input type="hidden" id="HdnAccDt" />
            <input type="hidden" id="HdnToAccDt" />
            <input type="hidden" id="HdnAccMnth" />
            <input type="hidden" id="HdnFrmMnth" />
            <input type="hidden" id="HdnToMnth" />
            <input type="hidden" id="HdnYrFrmMnth" />
            <input type="hidden" id="HdnYrToMnth" />
        

        <style>
            body {
            }


            .wincnt_hight {
                width: 100%;
                height: auto !important;
                overflow-y: hidden;
                overflow-x: hidden;
            }

            .wingrd_hight {
                width: 100%;
                height: calc(80vh - 50px) !important;
                overflow-y: hidden;
                overflow-x: hidden;
            }

            .btn-custom1 {
                color: #000;
                background-color: #ffffff;
                /* border-color: #cccccc; */
                background: transparent;
                padding: 0px 8px;
                font-size: 18px;
                color: #0798af;
                height: 25px !important;
                border: none !important;
            }

            .btnXX {
                display: inline-block;
                text-align: center;
                vertical-align: middle;
                line-height: 1.5;
            }

            .btn-custom {
                color: #000;
                background-color: #ffffff;
                /* border-color: #cccccc; */
                background: transparent;
                padding: 2px 4px;
                font-size: 18px;
                color: #0798af;
                white-space: nowrap;
            }

                .btn-custom:hover {
                    color: white !important;
                    background-color: rgb(40, 132, 179);
                    border-color: #cccccc;
                    /* padding: 3px 7px; */
                }

                .btn-custom > i {
                    padding-left: 5px;
                }

            .btn-custom1 {
                color: #000;
                background-color: #ffffff;
                /* border-color: #cccccc; */
                background: transparent;
                padding: 0px 8px;
                font-size: 18px;
                color: #0798af;
                height: 25px !important;
                border: none !important;
            }

            .GrpHead {
                color: black;
                font-weight: Bold;
                font-family: Arial !important;
            }
        </style>

        @*Topmenu Style ends*@
        <style>
            .Pagefalse {
                pointer-events: none;
                opacity: 0.6;
            }

            .btn-filter .webix_button {
                border: none !important;
                background: none !important;
            }

            .btn-option .webix_icon_btn {
                font-weight: normal !important;
            }
        </style>

        <script>

            debugger;
            var body = document.body,
            html = document.documentElement;

            //var vheight = Math.max( body.scrollHeight, body.offsetHeight, 
                                  // html.clientHeight, html.scrollHeight, html.offsetHeight );

            function fnExcelExport() {
                //debugger;
                //webix.env.cdn = "http://localhost:60000/Reports";
                var vGrid = "";                
                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE"); 
                if(CompTy == "2") CompId = fnGetDefaultComp(CompId); 

                if (CompTy == "2") {
                    vGrid = $$("gridRpt");
                }
                else {
                    vGrid = $$("gridMain");
                }      
                //vGrid = $$("gridMain");

                var CompNm = $$("Property").getText();
                var AsOn =  $$("AsOnDt").getText();
                var values = fnCurrDtTime();
                var vDate = values[0];
                var vTm = values[1];
                var chkPeriod = $$("chkPeriod").getValue();
                var FromDt = $$("FromDt").getText();
                var ToDt = $$("ToDt").getText();

                var vHeader = $("#lblRptCaption").text();
                var FullData = "";
                FullData = vGrid.serialize();
                var len = FullData.length;
                if (len > 0) {
                    var vExpoartGrid = webix.copy(vGrid,-1);            
                    if(chkPeriod == "0") fnComExcelExport(vExpoartGrid,vHeader,vHeader,true,CompNm,vDate,vTm,"","",AsOn);
                    else fnComExcelExport(vExpoartGrid,vHeader,vHeader,true,CompNm,vDate,vTm,FromDt,ToDt,"");
                    //webix.toExcel(vGrid, {
                    //    filename: vHeader,
                    //    styles: true,
                    //    spans: true,
                    //    name: vHeader,
                    //    docHeader: "<div class='row'><div class='col-4 col-sm-4  text-left' style='font-weight:bold !important'>" + CompNm + "</div>" + "<div class='col-4 col-sm-4  text-center' style='text-align:center !important;font-weight:bold !important'>" + vHeader + "</div></div>" + "<div class='row'>" + "<div class='col-12 col-sm-12 text-center'> AsOn : " + AsOn + "</div></div>",
                    //    rawValues: true,
                
                    //});
                }
                else {
                    alert("Records not present in Report");
                }

            };
            

            //function fnExcelExport() {
            //    debugger;
            //    var vGrid = "";
            //    var CompId = $$("Property").getValue();

            //    if (CompId.indexOf(",") >= 0) {

            //        vGrid = $$("gridRpt");
            //    }
            //    else {
            //        vGrid = $$("gridMain");
            //    }


            //    var vHeader = $("#lblRptCaption").text();
            //    var FullData = "";
            //    FullData = vGrid.serialize();
            //    var len = FullData.length;
            //    if (len > 0) {
            //        webix.toExcel(vGrid, {
            //            filename: vHeader,
            //            styles: true,
            //            spans: true,
            //            name: vHeader,
            //            docHeader: vHeader,
            //            rawValues: true,
            //        });
            //    }
            //    else {
            //        alert("Records not present in Report");
            //    }

            //};
            //function fnGridPrint() {
            //    debugger;
            //    var vHeader = $("#lblRptCaption").text();
            //    var FullData = "";
            //    var vGrid = "";
            //    var CompId = $$("Property").getValue();

            //    if (CompId.indexOf(",") >= 0) {
            //        vGrid = $$("gridRpt");
            //    }
            //    else {
            //        vGrid = $$("gridMain");
            //    }

            //    FullData = vGrid.serialize();
            //    var len = FullData.length;
            //    if (len > 0) {
            //        webix.print(vGrid, {
            //            //docHeader: vHeader //{ text: vHeader, fontSize: 25 },
            //            fit: "page",
            //            scroll: false,
            //            mode: "landscape"
            //        });
            //    }
            //    else {
            //        alert("Records not present in Report");
            //    }

            //};

            function fnGridPrint() {
                debugger;
                var vHeader = $("#lblRptCaption").text();
                var FullData = "";
                var vGrid = "";                
                ///vGrid = $$("gridMain");  
                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE"); 
                if(CompTy == "2") CompId = fnGetDefaultComp(CompId); 
                
                if(CompTy == "2") {
                    vGrid = $$("gridRpt");
                }
                else {
                    vGrid = $$("gridMain");
                }

                var CompNm = $$("Property").getText();
                var AsOn =  $$("AsOnDt").getText();
                //var values = fnCurrDtTime();
                //var vDate = values[0];
                //var vTm = values[1];
                var chkPeriod = $$("chkPeriod").getValue();
                var FromDt = $$("FromDt").getText();
                var ToDt = $$("ToDt").getText();

                var DocHeader = "<div class='row'><div class='col-4 col-sm-4  text-left' style='font-weight:bold !important'>" + CompNm + "</div>" + "<div class='col-4 col-sm-4  text-center' style='text-align:center !important;font-weight:bold !important'>" + vHeader + "</div></div>" + "<div class='row'>" + "<div class='col-12 col-sm-12 text-center'> AsOn : " + AsOn + "</div></div>";
        
                if(chkPeriod == "1"){
                    DocHeader = "<div class='row'><div class='col-4 col-sm-4  text-left' style='font-weight:bold !important'>" + CompNm + "</div>" + "<div class='col-4 col-sm-4  text-center' style='text-align:center !important;font-weight:bold !important'>" + vHeader + "</div></div>" + "<div class='row'>" + "<div class='col-12 col-sm-12 text-center'> From: " + FromDt + "   To: " + ToDt + "</div></div>";
                }

                FullData = vGrid.serialize();
                var len = FullData.length;
                if (len > 0) {
                    //var vExpoartGrid = webix.copy($$("gridMain"),-1);            
                    //fnComPrintGrid(vExpoartGrid,vHeader,vHeader,true,CompNm,vDate,vTm,"","",AsOn);

                    webix.print(vGrid, {
                        //docHeader: vHeader, //{ text: vHeader, fontSize: 25 },

                        docHeader: DocHeader,
                        fit: "page",
                        scroll: false,
                        mode: "landscape"
                    });
                }
                else {
                    alert("Records not present in Report");
                }

            };

            function fnCurrDtTime() {
                var vDate = "";
                var vTime = "";
                var rowData = [];
                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE"); 
                if(CompTy == "2") CompId = fnGetDefaultComp(CompId); 
                Request = {
                    REQTYPE: "GET_FNLOADCURRDTTM",
                    COMPID: CompId,
                }
                var DataVal = JSON.stringify(Request);
                $.ajax({
                    async: false,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + DataVal,
                    success: function (d) {
                        debugger;
                        if (d != "") {
                            rowData = JSON.parse(d);
                            vDate = rowData.GDate;
                            vTime = rowData.GTime;

                        }
                    },
                });

                return [vDate, vTime];

            };

            $(document).ready(function () {
                //$("#pageloaddiv").hide();

                $("#MenuName").val('FONAROOMSTATISTICS');   
                $("#MenuLvl").val('FOMNUNA');	      
                $("#MenuLvl1").val('');	

                var Print = "<span  class='wc_fnt18 fas fa-1x  fa-print'></span>";
                var excel = "<span  class=' wc_fnt18 far fa-1x fa-file-excel'></span>";


                webix.ready(function () {
                    debugger;
                    //if (!webix.env.touch && webix.env.scrollSize)
                    //    webix.CustomScroll.init();

                    //webix.UIManager.addHotKey("esc", function(view){
                    //    if (view){
                    //        var top = view.getTopParentView();
                    //        if (top && top.setPosition)
                    //            top.hide();
                    //    }
                    //});

                    webix.ui({
                        view: "button", id: "Print", value: "Print", width: 70, container: "divPrint", label: Print, tooltip: true,
                        on: {
                            onItemClick: function () {
                                fnGridPrint();
                            }
                        }

                    });

                    webix.ui({
                        view: "button", id: "Excel", value: "Excel", width: 70, container: "divExcel", label: excel, tooltip: true,
                        on: {
                            onItemClick: function () {
                                fnExcelExport();

                            }
                        }
                    });


                    GridDesign();
                    GridDesign1();
                    webix.ui({container: "divPropbox",view: "richselect", id: "Property",on: {onChange: function (newVal,OldVal) {fnPropChange("1");}}});

                    webix.ui({
                        container: "divAsOn", view: "datepicker", name: "AsOnDt", id: "AsOnDt", format: "%d/%m/%Y", stringResult: true, label: "AsOn", hidden: true, labelWidth: 50,
                        on: {
                            onChange: function () {

                                if (window.PROPCHANGE == "0"){
                                    if(SMAsOnChange()==false) return false;
                                    fnchkPeriod("1");
                                }
                                else fnchkPeriod("0");
                                //$$("gridRpt").clearAll();
                                //if (frmdate != "" && todate != "") SMFromDateChange();
                            }
                        }
                    });

                    webix.ui({
                        container: "divFromDt", view: "datepicker", name: "FromDt", id: "FromDt", format: "%d/%m/%Y", stringResult: true, label: "From", labelWidth: 50,
                        on: {
                            onChange: function () {
                                debugger;


                                if (window.PROPCHANGE == "0") {
                                    $$("gridRpt").clearAll();
                                    var frmdate = $$("FromDt").getValue();
                                    var todate = $$("ToDt").getValue();
                                    if (frmdate != "" && todate != ""){
                                        if (SMFromDateChange()==false) return false ;
                                    }

                                    fnchkPeriod("1");
                                }

                            }
                        }
                    });
                    webix.ui({
                        container: "divToDt", view: "datepicker", name: "ToDt", id: "ToDt", format: "%d/%m/%Y", stringResult: true, label: "To", labelWidth: 50,
                        on: {
                            onChange: function () {

                                if (window.PROPCHANGE == "0") {
                                    $$("gridRpt").clearAll();
                                    var frmdate = $$("FromDt").getValue();
                                    var todate = $$("ToDt").getValue();
                                    if (frmdate != "" && todate != ""){
                                        if (SMToDateChange()==false) return false ;
                                    }
                                    fnchkPeriod("1");
                                }

                            }
                        }
                    });

                    webix.ui({ container: "divchkAdvance", view: "checkbox", id: "chkAdvance", labelWidth: 120, label: "Advance", customCheckbox: false, click: function () { fnchkAdvance(); }, }),
                    webix.ui({ container: "divchkRevSumm", view: "checkbox", id: "chkRevSumm", labelWidth: 120, label: "Revenue Summary", customCheckbox: false, click: function () { fnchkRevenue(); }, }),


                    webix.ui({ container: "divchkPeriod", view: "checkbox", id: "chkPeriod", labelWidth: 120, label: "Specific Period", customCheckbox: false, click: function () { fnchkPeriod("1"); }, }),
                    webix.ui({ container: "divchkLast", view: "checkbox", id: "chkLast", labelWidth: 120, label: "Compare Last Year", customCheckbox: false, click: function () { fnchkLastClick(1); }, }),
                    webix.ui({ container: "divchkAPR", view: "checkbox", id: "chkAPR", labelWidth: 120, label: "APR", customCheckbox: false, click: function () { fnLoadGrid(); } }),
                    webix.ui({ container: "divNetRev", view: "checkbox", id: "chkNetRev", labelWidth: 90, label: "Net Revenue", customCheckbox: false, click: function () { fnLoadGrid(); } }),    
                    

                        //webix.ui({container: "divddlCat", view: "richselect", width: 400, labelWidth: 130, id: "ddlRmCat", label: "Category", on: { onChange: function (newVal, OldVal) { } }, }),

                        //webix.ui({container: "divBtnDisplay",id:"btnDispay", view: "button",type: "icon",inputWidth:80, icon: "wxi-eye",label: "Display", click: function () {fnLoadGrid(); } });
                        //webix.ui({container: "divCancNarr", view: "text",labelWidth:100, label: "Cancel Reason",id:"txtNarr",attributes:{ maxlength:120 }});
                        loadAdvFilterWindow();
                    FNLoadAllCompany();
                    LoadProperty();
                    debugger;
                    //var offset =  $("#divGrid").offset();

                    var propchk = @Html.Raw(Json.Encode(ViewBag.MLTPROPHISHIND));                    
                    if (propchk == "1") $("#divPropbox").show();
                    else if (propchk == "0") $("#divPropbox").hide();


                    gridResize();

                });

                webix.event(window, "resize", function () {
                    gridResize();
                })

            });

            function gridResize(){
                debugger;
                var vheight = window.innerHeight
                       || document.documentElement.clientHeight
                       || document.body.clientHeight;
                var offset =  $("#divGrid").offset();

                if($$("gridMain").isVisible() == true){
                    $$("gridMain").define("height", ((vheight - offset.top-30)));
                    $$("gridMain").adjust();
                }

                if($$("gridRpt").isVisible() == true){
                    $$("gridRpt").define("height", ((vheight - offset.top-20)));
                    $$("gridRpt").adjust();
                }
                
            }



            function FNLoadAllCompany() {
                debugger;
                Request = {
                    REQTYPE: "GET_FNLOADALLCOMPANY",
                    COMPID: @Html.Raw(Json.Encode(ViewBag.COMP)),
            }
            var rowData = [];
            var options = [];

            var DataVal = JSON.stringify(Request);
            $.ajax({
                async: false,
                url: "/Reports/FOAPI_CALL",
                type: 'POST',
                data: "request=" + DataVal,
                success: function (d) {
                    debugger;
                    if (d != "") {
                        rowData = JSON.parse(d);

                        $$("gridComp").parse(rowData);
                    }
                },
            });
                                                            };


            function LoadProperty() {
                debugger;
                Request = {
                    REQTYPE: "GET_FNMULPROPERTY",
                    COMPID: @Html.Raw(Json.Encode(ViewBag.COMP)),
            }
            Prop_Id = @Html.Raw(Json.Encode(ViewBag.COMP));
            var rowData = [];
            var options = [];

            var DataVal = JSON.stringify(Request);
            $.ajax({
                async: false,
                url: "/Reports/FOAPI_CALL",
                type: 'POST',
                data: "request=" + DataVal,
                success: function (d) {
                    debugger;
                    if (d != "") {
                        rowData = JSON.parse(d);
                        $$("Property").define("options", rowData);
                        $$("Property").refresh();
                        $$("Property").setValue(Prop_Id);

                        $$("gridComp").parse(rowData);
                    }
                },
            });
            };

            function GridDesign() {
                //var searchicon = "<span class='fa fa-search ' ></span>";
                //var searchicon1 = "<span class='fa fa-trash ' ></span>";

                webix.ui({
                    id: "gridMain",
                    container: "divGrid",
                    select: 'row',
                    view: "datatable",
                    fixedRowHeight: false,
                    resizeColumn:true,
                    rowLineHeight: 23,
                    autoConfig: true,
                    editable: true,
                    spans: true,
                    //height: 420,
                    //minWidth:900,
                    //autoheight:true,
                    //maxHeight:height-200,
                    position: "flex",
                    css: "webix_header_border",
                    data: [],
                    columns: [
                        { id: "STATISTICS", header: 'Statistics', width: 300, css: { 'text-align': 'left ! important', }, },
                        { id: "DAY", header: 'Day', width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "MTD", header: 'M.T.D', width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "YTD", header: ['Y.T.D',], width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "LYDAY", header: { text: "L.Y.Day", }, width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "LYMTD", header: { text: "L.Y.M.T.D", }, width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "LYYTD", header: { text: "L.Y.Y.T.D", }, width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "CUR_YR_DAY", header: { text: "Curr", }, width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "LST_YR_DAY", header: { text: "Last", }, width: 100, css: { 'text-align': 'right ! important', } },


                    ],
                    data: [],
                    scheme: {
                        $init: function (item) {
                            if (item.CLR != "" && item.CLR != null) {
                                var Columns = $$('gridMain').config.columns;
                                var ColCnt = Columns.length;
                                if (item.CLR == "GrpHead") {
                                    debugger;
                                    $$("gridMain").addSpan(item.id, "STATISTICS", ColCnt, 1, null, "GrpHead");
                                    $$("gridMain").refresh();
                                }
                                else item.$css = item.CLR;
                            }
                        },
                    },

                    on: {
                        onBeforeClose: function () {
                            return false;
                        },
                    }
                });

                webix.ui({
                    id: "gridComp",
                    view: "datatable",
                    hidden: true,
                    data: [],
                    columns: [
                        { id: "id", header: 'COMPANY_ID', width: 300, css: { 'text-align': 'left ! important', }, },
                        { id: "value", header: 'COMPANY_NM', width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "TYPE", header: 'TYPE', width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "USER_ID", header: ['USER_ID',], width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "SEQ_NO", header: { text: "SEQ_NO", }, width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "DEPART_ID", header: { text: "DEPART_ID", }, width: 100, css: { 'text-align': 'right ! important', } },
                        { id: "ACTIVE_ID", header: { text: "ACTIVE_ID", }, width: 100, css: { 'text-align': 'right ! important', } },


                    ],
                    data: [],


                    on: {
                        onBeforeClose: function () {
                            return false;
                        },
                    }
                });



            };
            function GridDesign1() {
                webix.ui({
                    id: "gridRpt",
                    container: "divGrid",
                    select: 'row',
                    view: "datatable",
                    fixedRowHeight: false,
                    resizeColumn:true,
                    rowLineHeight: 23,
                    autoConfig: true,
                    editable: true,
                    spans: true,
                    //height: 420,
                    //minWidth:900,
                    position: "flex",
                    hidden: true,
                    css: "webix_header_border",
                    data: [],

                    columns: [
                        { id: "STATISTICS", header: 'Statistics', width: 250, css: { 'text-align': 'left ! important', }, },


                    ],
                    data: [],
                    scheme: {
                        $init: function (item) {
                            if (item.CLR != "" && item.CLR != null) {
                                var Columns = $$('gridRpt').config.columns;
                                var ColCnt = Columns.length;
                                if (item.CLR == "GrpHead") {
                                    debugger;
                                    $$("gridRpt").addSpan(item.id, "STATISTICS", ColCnt, 1, null, "GrpHead");
                                    $$("gridRpt").refresh();
                                }
                                else item.$css = item.CLR;
                            }
                        },
                    },

                    on: {
                        onBeforeClose: function () {
                            return false;
                        },
                    }
                });
            };
            


            function fnPropChange(vLoad){
                debugger;
                window.BASE_CURRENCY = "";
                window.CURR_DT = "";
                window.M_TAX = "";
                window.IT_NO ="";
                window.CURRENCY_FORMAT = "";
                window.CURRENCY_DELIMIT = "";
                window.CURRENCY_DECIMLIMIT = "";
                window.Q25_Ind="";
                window.CPN_MODE_RES="";
                window.PROPCHANGE="1";

                var bMulti = "0";

                $$("AsOnDt").show();
                $$("FromDt").hide();
                $$("ToDt").hide();
                $$("AsOnDt").setValue('');
                var vSplit=[];

                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE"); 
                if(CompTy == "2"){
                    CompId = fnGetDefaultComp(CompId);
                    $$("gridRpt").show();
                    $$("gridMain").hide();
                    bMulti="1";
                }
                else{
                    $$("gridRpt").hide();
                    $$("gridMain").show();
                }

                LoadInds(CompId);
                //var vAccDt= AccDtLoad(CompId);
                //var AccDate103 = vAccDt.Acc_Dt103;
                //var NAccDate103 = vAccDt.NxtAcc_Dt103;
                //var PAccDate103 = vAccDt.PrevAcc_Dt103;
                //var PAccDate23 = vAccDt.PrevAcc_Dt23;
                //var vSHOWTGL = vAccDt.SHOWTGL;
                //window.AccDt103=AccDate103;
                //window.NAccDate103=NAccDate103;
                //window.PAccDate103=PAccDate103;
                //window.SHOWTGL=vAccDt.SHOWTGL;

                debugger;

                fnCategoryLoad(CompId);             


                $$("chkAdvance").setValue("0");
                $$("chkRevSumm").setValue("0");
                $$("chkPeriod").setValue("0");
                $$("chkLast").setValue("0");
                $$("chkAPR").setValue("0");

                if(bMulti=="1"){
                    $$("chkAdvance").hide();
                    $$("chkRevSumm").hide();
                    $$("chkPeriod").hide();
                    $$("chkLast").hide();
                    $$("chkAPR").hide();
                    $("#btnoptions").hide();
                }
                else{
                    $$("chkAdvance").show();
                    $$("chkRevSumm").show();
                    $$("chkPeriod").show();
                    $$("chkLast").show();
                    $$("chkAPR").show();
                    $("#btnoptions").show();
                }

                $$("AsOnDt").setValue('');
                $$("FromDt").setValue('');
                $$("ToDt").setValue('');

                LoadDate(CompId);


                debugger;
                ////$$("AsOnDt").refresh();
                if(vLoad=="1") fnLoadGrid();
                //else fnchkPeriod(CompId);
                window.PROPCHANGE="0";
                //fnLoadGrid();

            };

            function LoadDate(cmpid) {
                debugger;

                Request = {
                    REQTYPE: "GET_FRMMNTHTOMNTH",
                    COMPID: cmpid,
                }

                var DataVal = JSON.stringify(Request);

                $.ajax({
                    async: false,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + DataVal,

                    success: function (data) {
                        debugger;
                        var data1 = JSON.parse(data);
                        var vCurrDt = data1[0].CURRDT.toString().trim();
                        var vAccDt = data1[0].ACC_DT2.toString().trim();
                        var vToAccDt = data1[0].TO_ACC_DT2.toString().trim();
                        var vAccMnth = data1[0].ACC_MNTH.toString().trim();
                        var vFromMnth = data1[0].FRMMNTH.toString().trim();
                        var vToMnth = data1[0].TOMNTH.toString().trim();

                        $("#HdnCurrDt").val(vCurrDt);
                        $("#HdnAccDt").val(vAccDt);
                        $("#HdnToAccDt").val(vAccDt);
                        $("#HdnAccMnth").val(vAccMnth);
                        $("#HdnFrmMnth").val(vFromMnth);
                        $("#HdnToMnth").val(vToMnth);

                        var vFromDt = formatDate(vAccDt);
                        var vToDt = formatDate(vAccDt);
                        $$("AsOnDt").setValue(vFromDt);
                        $$("FromDt").setValue(vFromDt);
                        $$("ToDt").setValue(vFromDt);

                    },
                });
            };

            var LoadInds = function (CompId) {
                debugger;
                //var  JSON.parse(request);

                window.BASE_CURRENCY = "";
                window.CURR_DT = "";

                window.CURRENCY_FORMAT = "";
                window.CURRENCY_DELIMIT = "";
                window.CURRENCY_DECIMLIMIT = "";
                window.IT_NO = "";
                window.CPN_MODE_RES = "";
                Window.E15_IND = "";
                Window.H11_IND = "";
                Window.R11_IND = "";
                Window.RR_IND = "";

                window.Q25_Ind = "";
                window.J15_IND = "";

                Request = {
                    REQTYPE: "GET_FNGETLOADCONT",
                    COMPID: CompId,
                }

                var rowData = [];
                var options = [];
                var dataparam = JSON.stringify(Request);

                $.ajax({
                    async: false,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + dataparam,
                    success: function (d) {
                        debugger;
                        var Detemp = JSON.parse(d);
                        window.BASE_CURRENCY = Detemp.RA[0].BASE_CURRENCY_ID.toString().trim();
                        window.CURR_DT = Detemp.RA[0].CURDT1;

                        window.CURRENCY_FORMAT = Detemp.RA[0].CURRENCY_FORMAT;
                        window.CURRENCY_DELIMIT = Detemp.RA[0].CURRENCY_DELIMIT;
                        window.CURRENCY_DECIMLIMIT = Detemp.RA[0].VAL_DECIM_LIMIT;
                        window.IT_NO = Detemp.RA[0].IT_NO;
                        window.CPN_MODE_RES = Detemp.RA[0].CPN_MODE_RES;

                        window.Q25_Ind = Detemp.RA2[0].Q25_IND;
                        window.J15_IND = Detemp.RA3[0].J15_IND;
                        Window.E15_IND = Detemp.RA3[0].E15_IND;
                        Window.H11_IND = Detemp.RA3[0].H11_IND;
                        Window.R11_IND = Detemp.RA3[0].R11_IND;
                        Window.RR_IND = Detemp.RA3[0].RR_IND;

                    },
                    error: function (request, status, error) {
                        console.log("Error Failrue");
                    }
                });

                if (Window.H11_IND == "1") $$("chkAPR").show();
                else $$("chkAPR").hide();


            };

            var AccDtLoad = function (CompId) {
                debugger;
                if (fnChkSessVal() == false) return;
                Request = {
                    REQTYPE: "GET_FNACCOUNTDT",
                    COMPID: CompId,
                }

                var rowData = [];
                var dataparam = JSON.stringify(Request);

                $.ajax({
                    async: false,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + dataparam,
                    success: function (d) {
                        Detemp = JSON.parse(d);

                    },
                    error: function (request, status, error) {
                        console.log("Error Failrue");
                    }
                });
                return Detemp;

            };

            function fnLoadGrid() {
                //debugger;
                if (fnChkSessVal() == false) return;
                $$("gridMain").clearAll();
                $$("gridRpt").clearAll();

                $("#pageloaddiv").show();
                //debugger;

                //CompId = $$("Property").getValue();
                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE"); 

                var Ason = $$("AsOnDt").getValue();
                var FromDt = $$("FromDt").getValue();
                var ToDt = $$("ToDt").getValue();

                if (ChkPeriod == "1") {
                    if (FromDt == "" || ToDt == "") return;
                }
                else {
                    if (Ason == "") return;
                }

                if (Ason != "") Ason = formatDate1(Ason.substring(0, 10));
                if (FromDt != "") FromDt = formatDate1(FromDt.substring(0, 10));
                if (ToDt != "") ToDt = formatDate1(ToDt.substring(0, 10));
                var Revenue = $$("chkRevSumm").getValue();
                var ChkAPR = $$("chkAPR").getValue();
                var J15_Ind = window.J15_IND;
                var ChkAdv = $$("chkAdvance").getValue();
                var ChkLast = $$("chkLast").getValue();
                var ChkPeriod = $$("chkPeriod").getValue();
                var CatId = $$("txtRmCat").getValue();
                var vNetRev = $$("chkNetRev").getValue();
                var ReqNm = "";
                var bMulti = "0";
                var MULCOMPANY = "";
                var vSplit = [];

                $$("gridMain").show();

                if(CompTy == "2") {
                    MULCOMPANY = CompId;
                    vSplit = CompId.split(",");                    
                    $$("gridRpt").destructor();
                    GridDesign1();
                    ReqNm = "GET_FNMANAGERRPTMULTICOMPANY";
                    bMulti = "1";
                    CompId = fnGetDefaultComp(CompId); 
                    var ColVal = [];
                    var vColumn = $$("gridRpt").config.columns;
                    vSplit.forEach(function (entry) {
                        Hdr = $.trim(entry);
                        dtComp = $$("gridComp").serialize();
                        var CmpData = dtComp.filter(function (el) {
                            return el.id.toString().trim().toUpperCase() == $.trim(entry);
                        });
                        if (CmpData.length > 0) Hdr = CmpData[0].SHRT_NM;
                        var set = {
                            id: $.trim(entry), header: { text: Hdr, }, width: 150, css: { 'text-align': 'right ! important', },
                            //adjust:"data"
                        };
                        vColumn.push(set);
                    });

                    var set = {
                        id: "TOT", header: { text: "Total",}, width: 150, css: { 'text-align': 'right ! important', },
                        //adjust:"data"
                    };
                    vColumn.push(set);

                    var set = {
                        id: "CLR", hidden: true
                    };
                    vColumn.push(set);
                    $$("gridRpt").refreshColumns();
                    $$("gridRpt").refresh();
                    $$("gridRpt").show();
                    $$("gridMain").hide();

                }
                else if (ChkPeriod == "1") ReqNm = "GET_FNCOMPARELASTYEARMNTH";
                else if (ChkLast == "1") {
                    if (ChkPeriod == "1") ReqNm = "GET_FNCOMPARELASTYEARMNTH";
                    else ReqNm = "GET_FNMANAGERRPT";
                }
                else ReqNm = "GET_FNMANAGERRPT";

                Request = {
                    REQTYPE: ReqNm,
                    COMPID: CompId,
                    ASONDATE: Ason,
                    FROMDT: FromDt,
                    TODT: ToDt,
                    CHKREVENUE: Revenue,
                    CHKAPR: ChkAPR,
                    J15_IND: J15_IND,
                    CHKADV: ChkAdv,
                    CHKLAST: ChkLast,
                    CHKPERIOD: ChkPeriod,
                    CATID: CatId,
                    MULCOMPANY: MULCOMPANY,
                    CHKNETREV:vNetRev
                }

                var rowData = [];
                requestData = JSON.stringify(Request);
                requestData = encodeURIComponent(requestData);
                $.ajax({
                    async: true,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + requestData,
                    success: function (data) {
                        debugger;
                        if (data != "") {
                            $$("gridMain").clearAll();
                            $$("gridRpt").clearAll();
                            rowData = JSON.parse(data);
                            Rows = [];
                            if (bMulti == "0") $$("gridMain").parse(rowData);
                            else $$("gridRpt").parse(rowData);

                        }
                        else $("#pageloaddiv").hide();
                    },
                    complete: function () {
                        $("#pageloaddiv").hide();
                    },
                    error: function (request, status, error) {
                        console.log("Error Failure");
                        $("#pageloaddiv").hide();
                    }
                });
            };

            function formatDate(StrDt) {
                debugger;
                var Parts = StrDt.split("/");
                var Dt = Parts[0];
                var Mn = Parts[1];
                var Yr = Parts[2];
                var Str = Yr + "-" + Mn + "-" + Dt;
                return Str;
            };
            function formatDate1(StrDt) {
                debugger;
                var Parts = StrDt.split("-");
                var Yr = Parts[0];
                var Mn = Parts[1];
                var Dt = Parts[2];
                var Str = Dt + "/" + Mn + "/" + Yr;
                return Str;
            };
            function CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal) {
                //debugger;

                if (value == null) return "";

                if (value.toString() != "") {


                    if (Currfrmt == "L") {
                        var x = parseFloat(value).toFixed(CurrDecimal);
                        var neg = false;
                        if (value < 0) {
                            neg = true;
                            //x = math.abs(x);
                        }

                        x = x.toString();
                        var afterPoint = '';
                        //if (x.indexOf('.') > 0) {
                        //    afterPoint = x.substring(x.indexOf('.') + 1, x.length);
                        //    afterPoint = CurrDelimit + afterPoint
                        //}
                        //x = Math.floor(x);
                        var vArr = x.split('.');
                        x = vArr[0].toString().trim();
                        afterPoint = vArr[1].toString().trim();
                        afterPoint = CurrDelimit + afterPoint

                        x = x.toString();
                        var lastThree = x.substring(x.length - 3);
                        var otherNumbers = x.substring(0, x.length - 3);
                        if (otherNumbers != '' && otherNumbers != '-')
                            lastThree = ',' + lastThree;
                        return otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree + afterPoint;
                    }
                    else {
                        var x = parseFloat(value).toFixed(CurrDecimal);
                        var neg = false;
                        if (value < 0) {
                            neg = true;
                            //x = math.abs(x);
                        }

                        x = x.toString();

                        //var res = x.replace(/(\d)(?=(\d{3})+(?!\d))/g, "1,")  //+ afterPoint;
                        //var res = x.replace(/(\d{3})/g, "1,")
                        var res = x.replace(/\B(?=(\d{3})+(?!\d))/g, ",")

                        if (res.indexOf('.') > 0) {

                            res = res.replace(".", CurrDelimit)
                        }


                        return res;
                    }
                }
                else {
                    return value;
                }
            };
            function fnCurrFormat(value) {

                var Currfrmt = window.CURRENCY_FORMAT;
                var CurrDelimit = window.CURRENCY_DELIMIT;
                var CurrDecimal = window.CURRENCY_DECIMLIMIT;
                return CurrFormat(value, Currfrmt, CurrDelimit, CurrDecimal);

            };

            function fnchkPeriod(vLoad) {                
                vLoad = vLoad || "0";
                var bMulti="0";                
                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE");   

                if(CompTy == "2"){
                    CompId = fnGetDefaultComp(CompId);
                    bMulti="1";
                }

                if ($$("chkPeriod").getValue() == "1") {
                    $$("chkAPR").disable();
                    $$("chkAPR").setValue("0");
                }
                else $$("chkAPR").enable();

                if ($$("chkPeriod").getValue() == "1") {
                    //ChkCompDt.Visible = True
                    //ScCompFrom.Text = Format(acdt - 1, "dd/mm/yyyy")
                    //ScCompTo.Text = Format(acdt - 1, "dd/mm/yyyy")
                    //Else
                    //ChkCompDt.Value = vbUnchecked
                    //ChkCompDt.Visible = False
                }

                if ($$("chkPeriod").getValue() == "1") {
                    $$("AsOnDt").hide();
                    $$("FromDt").show();
                    $$("ToDt").show();

                    //cmbRmCat.Visible = True
                    //lblRmCat.Visible = True
                    //DoEvents

                    $$("chkRevSumm").hide();
                    $$("chkRevSumm").setValue("0");
                    $$("gridMain").hideColumn("DAY")
                    $$("gridMain").hideColumn("MTD");
                    $$("gridMain").hideColumn("YTD");
                    $$("gridMain").hideColumn("LYDAY")
                    $$("gridMain").hideColumn("LYMTD");
                    $$("gridMain").hideColumn("LYYTD");
                    $$("gridMain").showColumn("CUR_YR_DAY");
                    $$("gridMain").hideColumn("LST_YR_DAY");


                    $$("gridMain").getColumnConfig("CUR_YR_DAY").header[0].text = $$("FromDt").getText() + " To " + $$("ToDt").getText();
                    $$("gridMain").getColumnConfig("CUR_YR_DAY").width = 200;
                    $$("gridMain").refreshColumns();



                }
                else {

                    debugger;
                    if(bMulti=="0") $$("chkRevSumm").show();
                    $$("chkRevSumm").setValue("0");

                    $$("AsOnDt").show();
                    $$("FromDt").hide();
                    $$("ToDt").hide();


                    ////If ChkPeriod.Value = vbUnchecked And ChkLast.Value = vbUnchecked And chkRoomOcc.Value = vbUnchecked Then
                    ////cmbRmCat.Visible = True
                    ////lblRmCat.Visible = True
                    ////End If

                    $$("gridMain").showColumn("DAY")
                    $$("gridMain").showColumn("MTD");
                    $$("gridMain").showColumn("YTD");
                    $$("gridMain").hideColumn("LYDAY")
                    $$("gridMain").hideColumn("LYMTD");
                    $$("gridMain").hideColumn("LYYTD");
                    $$("gridMain").hideColumn("CUR_YR_DAY");
                    $$("gridMain").hideColumn("LST_YR_DAY");


                    //ChkLast_Click

                }
                debugger;
                fnchkLastClick("0");

                if(vLoad=="1") fnLoadGrid();

                //chkadv_Click
            }
            function fnchkLastClick(vLoad) {
                debugger;
                var CompId = fnRetComboVal($$("Property"),"ORGID");        
                var CompTy = fnRetComboVal($$("Property"),"TYPE"); 
                if(CompTy == "2") CompId = fnGetDefaultComp(CompId);
                if ($$("chkLast").getValue() == "1") {
                    //cmbRmCat.Visible = False
                    //lblRmCat.Visible = False

                    var vFrom = "";
                    var vTo = "";

                    if ($$("chkPeriod").getValue() == "1") {
                        $$("gridMain").hideColumn("LYDAY")
                        $$("gridMain").hideColumn("LYMTD");
                        $$("gridMain").hideColumn("LYYTD");
                        $$("gridMain").showColumn("LST_YR_DAY");

                        var Request = {
                            REQTYPE: "GET_FNRETDATEADD",
                            COMPID: CompId,
                            DATE: $$("FromDt").getText(),
                            DAYS: -1,
                            FORMAT: "Y",

                        }

                        var rowData = "";
                        requestData = JSON.stringify(Request);
                        requestData = encodeURIComponent(requestData);
                        $.ajax({
                            async: false,
                            url: "/Reports/FOAPI_CALL",
                            type: 'POST',
                            data: "request=" + requestData,
                            success: function (data) {
                                debugger;
                                if (data != "") {
                                    rowData = JSON.parse(data);
                                    vFrom = rowData;

                                }
                            },
                            error: function (request, status, error) {
                                console.log("Error Failure");
                            }
                        })

                        var Request = {
                            REQTYPE: "GET_FNRETDATEADD",
                            COMPID: CompId,
                            DATE: $$("ToDt").getText(),
                            DAYS: -1,
                            FORMAT: "Y",

                        }

                        var rowData = "";
                        requestData = JSON.stringify(Request);
                        requestData = encodeURIComponent(requestData);
                        $.ajax({
                            async: false,
                            url: "/Reports/FOAPI_CALL",
                            type: 'POST',
                            data: "request=" + requestData,
                            success: function (data) {
                                debugger;
                                if (data != "") {
                                    rowData = JSON.parse(data);
                                    vTo = rowData;
                                }
                            },
                            error: function (request, status, error) {
                                console.log("Error Failure");
                            }
                        })



                        if (rowData != "") $$("gridMain").getColumnConfig("LST_YR_DAY").header[0].text = vFrom + " To " + vTo;
                        $$("gridMain").getColumnConfig("LST_YR_DAY").width = 200;
                        $$("gridMain").refreshColumns();


                    }
                    else {
                        $$("gridMain").showColumn("LYDAY")
                        $$("gridMain").showColumn("LYMTD");
                        $$("gridMain").showColumn("LYYTD");
                        $$("gridMain").hideColumn("LST_YR_DAY");
                    }
                }

                else {

                    $$("gridMain").hideColumn("LYDAY")
                    $$("gridMain").hideColumn("LYMTD");
                    $$("gridMain").hideColumn("LYYTD");
                    $$("gridMain").hideColumn("LST_YR_DAY");

                }



                ////If ChkPeriod.Value = vbUnchecked And chkrevenue.Value = vbChecked Then
                ////prcRevenue NightAuditQuery
                ////End If


                //chkadv_Click
                debugger;
                if (vLoad == "1") fnLoadGrid();


            }

            function fnchkAdvance() {
                debugger;
                fnLoadGrid();
            }

            function fnchkRevenue() {
                debugger;
                fnLoadGrid();
            }

            function fnCategoryLoad(CompId) {
                var dataparam = {};
                var rowData = [];
                var options = [];

                Request = {
                    REQTYPE: "GET_FNCATEGORYLOAD",
                    COMPID: CompId,                    
                }
                var DataVal = JSON.stringify(Request);
                $.ajax({
                    async: false,
                    url: "/Reports/FOAPI_CALL",
                    type: 'POST',
                    data: "request=" + DataVal,
                    success: function (d) {
                        //debugger;
                        if (d != "") {
                            rowData = JSON.parse(d);
                            options = rowData;
                            options.splice(0, 0, { value: "<-ALL->", id: "<-ALL->" });
                            $$("ddlRmCat").define("options", options);
                            $$("ddlRmCat").setValue("<-ALL->")
                        }
                    },
                });
            };


            function loadAdvFilterWindow() {
                webix.ui({
                    view: "window",
                    close: true,
                    modal: true,
                    id: "RptAdvFilter",
                    head: "Options",
                    position: "center",
                    css: "WebIxStyle",
                    height: 450,
                    width: 500,
                    move: true,
                    body: {
                        padding: { top: 20, left: 10, bottom: 20, right: 10 },
                        width: 400,
                        rows: [

                            { view: "richselect", width: 400, labelWidth: 130, id: "ddlRmCat", label: "Category", on: { onChange: function (newVal, OldVal) { } }, },

                            //{ width: 150, labelWidth: 130, view: "checkbox", id: "chkCompDt", label: "Compare Diff Period", customCheckbox: false,click: function () { fnchkcompDt(); } },

                            //{ width: 230, view: "datepicker", name: "From", id: "compFrom", format: "%d/%m/%Y", stringResult: true,label:"From",hidden:true,labelWidth:130, hidden:true},

                            //{ width: 230, view: "datepicker", name: "To", id: "compTo", format: "%d/%m/%Y", stringResult: true,label:"To",hidden:true,labelWidth:130,hidden:true},

                            { padding: { top: 10, left: 0, bottom: 0, right: 0, }, cols: [{}, { view: "button",css:"webix_primary",  maxWidth: 80, id: "OkFilter",  label: "OK", inputWidth: 80, width: 80, click: function () { btnOkFilterClick(); } }], },

                            { view: "text", id: "txtRmCat", hidden: true, },
                            { view: "text", id: "txtCompDt", hidden: true, },
                            { view: "text", id: "txtFrom", hidden: true, },
                            { view: "text", id: "txtTo", hidden: true, },


                        ]
                    }
                });
            }

            //function fnchkcompDt()
            //{
            //    if($$("chkCompDt").getValue()=="1"){
            //        $$("compFrom").show();
            //        $$("compTo").show();
            //    }
            //    else{
            //        $$("compFrom").hide();
            //        $$("compTo").hide();
            //    }
            //};

            function btnFilterClick() {
                debugger;
                if (fnChkSessVal() == false) return;
                //if($$("txtCompDt").getValue()=="1")
                //{
                //    $$("chkCompDt").setValue("1");
                //    $$("compFrom").show();
                //    $$("compTo").show();
                //    if($$("txtFrom").getValue()!="")
                //    {
                //        $$("compFrom").setValue(formatDate($$("txtFrom").getValue()));
                //        $$("compTo").setValue(formatDate($$("txtTo").getValue()));
                //    }
                //}
                //else{
                //    $$("chkCompDt").setValue("0");
                //    $$("compFrom").hide();
                //    $$("compTo").hide();
                //}

                if ($$("txtRmCat").getValue() == "") $$("ddlRmCat").setValue("<-ALL->");
                else $$("ddlRmCat").setValue($$("txtRmCat").getValue());

                $$("RptAdvFilter").show();
            };

            function btnOkFilterClick() {
                debugger;
                if (fnChkSessVal() == false) return;

                if ($$("ddlRmCat").getValue() == "<-ALL->") $$("txtRmCat").setValue("");
                else $$("txtRmCat").setValue($$("ddlRmCat").getValue());

                //if($$("chkCompDt").getValue()=="1")
                //{
                //    $$("txtCompDt").setValue("1");
                //    $$("txtFrom").setValue(formatDate($$("compFrom").getValue()));
                //    $$("txtTo").setValue(formatDate($$("compTo").getValue()));

                //}
                //else{
                //    $$("txtCompDt").setValue("0");
                //    $$("txtFrom").setValue("");
                //    $$("txtTo").setValue("");
                //}

                $$("RptAdvFilter").hide();
                debugger;
                fnLoadGrid();

            };

            function fnChkSessVal() {
                debugger;
                var bVal = "0";
                $.ajax({
                    async: false,
                    url: "/Reports/fnChkSessionval",
                    type: 'POST',
                    success: function (data) {
                        debugger;
                        if (data == "1") {
                            bVal = "1";
                        }
                    },
                    error: function (request, status, error) {
                        bVal = "0";
                    }
                });
                if (bVal == "1") return true;
                else {
                    debugger;
                    var Host = window.location.host;
                    var LoadingUrl = "http://" + Host + "/Login.aspx";
                    window.location.href = LoadingUrl;
                }
            };

            function fnRetComboVal(Obj,FldId){
                if(Obj.getValue() == "") return "";
                var RetVal = "";
                var Data =  Obj.getList().serialize();
                if(Data.length>0){
                    var newData = Data.filter(function (el) {
                        return el.id == Obj.getValue();
                    });
                    if (newData.length > 0) RetVal = newData[0][FldId].toString().trim();
            
                }

                return RetVal;
            };
            function fnGetDefaultComp(CompId){
                if(CompId.indexOf(",")>=0){
                    var vSplit= CompId.split(",");
                    var newData = vSplit.filter(function(el) {
                        return el.toString().trim().toUpperCase() == "WS";
                    });
                    if(newData.length>0) CompId=newData[0].toString().trim();
                    else CompId=vSplit[0].toString().trim();            
                } 
                return CompId;
            };

        </script>
        <script type="text/javascript">

            $(document).on('shown.lte.pushmenu', function () {
                var timeoutID;
                function delayedStart() {
                    timeoutID = window.setTimeout(resizeAction, 350);
                }

                function resizeAction() {
                    sidebarFn(1);
                    //  alert("Sidebar is collapsed or expanded!")
                    window.clearTimeout(timeoutID);
                }

                delayedStart();

            }).on('collapsed.lte.pushmenu', function () {
                var timeoutID;
                function delayedStart() {
                    timeoutID = window.setTimeout(resizeAction, 350);
                }

                function resizeAction() {
                    sidebarFn(2);
                    //  alert("Sidebar is collapsed or expanded!")
                    window.clearTimeout(timeoutID);
                }

                delayedStart();
            });
            function  sidebarFn(val){
                //var rowDatad = [];
                //var rowDatad1 = [];
                //if ($$("gridMain"))
                //    rowDatad = $$("gridMain").serialize();
                //if ($$("gridRpt"))
                //    rowDatad1 = $$("gridRpt").serialize();

                //if ($$("gridMain"))
                //    $$("gridMain").destructor();
                //if ($$("gridRpt"))
                //    $$("gridRpt").destructor();

                //GridDesign();
                //GridDesign1();

                //fnchkAdvance();
                //fnchkRevenue();
                //fnchkPeriod();
                //fnchkLastClick();
                //if ($$("gridMain")){
                //    $$("gridMain").clearAll();
                //    $$("gridMain").parse(rowDatad);

                //}

                //    if ($$("gridRpt"))
                //    {
                //        $$("gridRpt").clearAll();
                //        $$("gridRpt").parse(rowDatad1);

                //    }
                $$("gridRpt").resize();
                $$("gridMain").resize();
            }
            //function myPageResize() {
            //    debugger;
            //    $$("gridMain").adjust();
            //}

                                                            //$("#btnSideBarClosed").click(function () {
                                                            //    debugger;
                                                            //    $$("gridMain").adjust();
            //});


            function SMToDateChange(e) {
                debugger;
                var frmdate = $$("FromDt").getText();
                var todate = $$("ToDt").getText();
                var sFrmDt = $$("ToDt").getText();
                var vAccDt = $("#HdnAccDt").val();

                var bSucc = "1";

                if (frmdate == "") {
                    //webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return false;
                }


                if (todate == "") {
                    //webix.message("To Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return false;
                }

                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" +  frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {
                            debugger;
                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("ToMthDate").setValue(FrmMnth);
                            var vToDt = formatDate(sFrmDt);
                            $$("FromDt").setValue(new Date(vToDt));
                            bSucc = "0";

                        }
                    }
                });

                if(bSucc=="0") return false;


                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" +  todate  + "&T=" +  vAccDt,
                    success: function (data) {
                        if (data.d != "") {
                            debugger;
                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("FromDt").setValue(vAccDt);
                            var vFromDt = formatDate(vAccDt);
                            $$("ToDt").setValue(new Date(vFromDt));
                            bSucc = "0";
                        }
                    }
                });

                if(bSucc=="0") return false;

            };


            function SMFromDateChange(e) {
                debugger;
                var frmdate = $$("FromDt").getText();
                var todate = $$("ToDt").getText();
                var sFrmDt = $$("FromDt").getText();
                var vAccDt = $("#HdnAccDt").val();

                var bSucc = "1";

                if (frmdate == "") {
                    //webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return false;
                }


                if (todate == "") {
                    //webix.message("To Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return false;
                }

                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" + frmdate + "&T=" + todate,
                    success: function (data) {
                        if (data.d != "") {
                            debugger;
                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("ToMthDate").setValue(FrmMnth);
                            var vToDt = formatDate(sFrmDt);
                            $$("ToDt").setValue(new Date(vToDt));
                            bSucc = "0";
                        }
                    }
                });
                if(bSucc=="0") return false;


                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" +  frmdate  + "&T=" +  vAccDt,
                    success: function (data) {
                        if (data.d != "") {
                            debugger;
                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("FromDt").setValue(vAccDt);
                            var vFromDt = formatDate(vAccDt);
                            $$("FromDt").setValue(new Date(vFromDt));


                            bSucc = "0";
                        }
                    }
                });

                if(bSucc=="0") return false;


            };


            function SMAsOnChange(e) {
                debugger;
                var frmdate = $$("AsOnDt").getText();
                var vAccDt = $("#HdnAccDt").val();

                var bSucc = "1";

                if (frmdate == "") {
                    //webix.message("From Date can't be empty", "warning", 800);
                    $("#LoadDIv").hide();
                    bSucc = "0";
                    return false;
                }
                $.ajax({
                    type: "POST",
                    url: "/Reports/FTDateValidation",
                    cache: false,
                    async: false,
                    charset: 'utf-8',
                    data: "F=" +  frmdate  + "&T=" +  vAccDt,
                    success: function (data) {
                        if (data.d != "") {
                            debugger;
                            //webix.message("From Month Should be less than To Month ", "warning", 500);
                            $("#LoadDIv").hide();
                            //$$("FromDt").setValue(vAccDt);
                            var vFromDt = formatDate(vAccDt);
                            $$("AsOnDt").setValue(new Date(vFromDt));
                            bSucc = "0";
                        }
                    }
                });

                if(bSucc=="0") return false;


            };

        </script>
    </section>
</div>